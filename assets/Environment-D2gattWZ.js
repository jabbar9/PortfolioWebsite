import{r as De,g as vM,j as Qn}from"./index-DC1ySpQG.js";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const pl="170",Rs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Is={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},q0=0,Xd=1,Z0=2,_M=3,J0=0,ch=1,za=2,Vi=3,Pr=0,ti=1,Wi=2,rr=0,ks=1,Yd=2,qd=3,Zd=4,j0=5,Kr=100,K0=101,Q0=102,$0=103,e_=104,t_=200,n_=201,i_=202,r_=203,wu=204,Eu=205,s_=206,o_=207,a_=208,l_=209,c_=210,u_=211,h_=212,f_=213,d_=214,Tu=0,bu=1,Au=2,Xs=3,Cu=4,Ru=5,Iu=6,Pu=7,ml=0,p_=1,m_=2,sr=0,g_=1,v_=2,__=3,dp=4,y_=5,x_=6,M_=7,Jd="attached",S_="detached",$r=300,ar=301,es=302,Xo=303,ja=304,Qo=306,Ka=1e3,En=1001,Qa=1002,Fn=1003,pp=1004,yM=1004,Oo=1005,xM=1005,Kt=1006,ka=1007,MM=1007,nr=1008,jd=1008,fi=1009,uh=1010,hh=1011,Yo=1012,gl=1013,lr=1014,hn=1015,Un=1016,fh=1017,dh=1018,Ys=1020,mp=35902,gp=1021,vp=1022,xn=1023,_p=1024,yp=1025,Hs=1026,qs=1027,vl=1028,_l=1029,xp=1030,ph=1031,SM=1032,mh=1033,Ha=33776,Va=33777,Ga=33778,Wa=33779,Lu=35840,Du=35841,Uu=35842,Nu=35843,Fu=36196,Ou=37492,Bu=37496,zu=37808,ku=37809,Hu=37810,Vu=37811,Gu=37812,Wu=37813,Xu=37814,Yu=37815,qu=37816,Zu=37817,Ju=37818,ju=37819,Ku=37820,Qu=37821,Xa=36492,$u=36494,eh=36495,Mp=36283,th=36284,nh=36285,ih=36286,w_=2200,E_=2201,T_=2202,$a=2300,rh=2301,xu=2302,Us=2400,Ns=2401,el=2402,gh=2500,Sp=2501,wM=0,EM=1,TM=2,b_=3200,A_=3201,bM=3202,AM=3203,ns=0,C_=1,br="",$n="srgb",cr="srgb-linear",yl="linear",jt="srgb",CM=0,Ps=7680,RM=7681,IM=7682,PM=7683,LM=34055,DM=34056,UM=5386,NM=512,FM=513,OM=514,BM=515,zM=516,kM=517,HM=518,Kd=519,R_=512,I_=513,P_=514,wp=515,L_=516,D_=517,U_=518,N_=519,tl=35044,VM=35048,GM=35040,WM=35045,XM=35049,YM=35041,qM=35046,ZM=35050,JM=35042,jM="100",Qd="300 es",ir=2e3,nl=2001;let ur=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}};const Hn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Xg=1234567;const Vs=Math.PI/180,qo=180/Math.PI;function Si(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Hn[r&255]+Hn[r>>8&255]+Hn[r>>16&255]+Hn[r>>24&255]+"-"+Hn[e&255]+Hn[e>>8&255]+"-"+Hn[e>>16&15|64]+Hn[e>>24&255]+"-"+Hn[t&63|128]+Hn[t>>8&255]+"-"+Hn[t>>16&255]+Hn[t>>24&255]+Hn[n&255]+Hn[n>>8&255]+Hn[n>>16&255]+Hn[n>>24&255]).toLowerCase()}function gn(r,e,t){return Math.max(e,Math.min(t,r))}function Ep(r,e){return(r%e+e)%e}function KM(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function QM(r,e,t){return r!==e?(t-r)/(e-r):0}function Ya(r,e,t){return(1-t)*r+t*e}function $M(r,e,t,n){return Ya(r,e,1-Math.exp(-t*n))}function eS(r,e=1){return e-Math.abs(Ep(r,e*2)-e)}function tS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function nS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function iS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function rS(r,e){return r+Math.random()*(e-r)}function sS(r){return r*(.5-Math.random())}function oS(r){r!==void 0&&(Xg=r);let e=Xg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function aS(r){return r*Vs}function lS(r){return r*qo}function cS(r){return(r&r-1)===0&&r!==0}function uS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function hS(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function fS(r,e,t,n,i){const s=Math.cos,a=Math.sin,c=s(t/2),u=a(t/2),h=s((e+n)/2),f=a((e+n)/2),p=s((e-n)/2),m=a((e-n)/2),g=s((n-e)/2),y=a((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*g,c*h);break;case"YXY":r.set(u*g,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*g,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ei(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Pt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const F_={DEG2RAD:Vs,RAD2DEG:qo,generateUUID:Si,clamp:gn,euclideanModulo:Ep,mapLinear:KM,inverseLerp:QM,lerp:Ya,damp:$M,pingpong:eS,smoothstep:tS,smootherstep:nS,randInt:iS,randFloat:rS,randFloatSpread:sS,seededRandom:oS,degToRad:aS,radToDeg:lS,isPowerOfTwo:cS,ceilPowerOfTwo:uS,floorPowerOfTwo:hS,setQuaternionFromProperEuler:fS,normalize:Pt,denormalize:ei};class we{constructor(e=0,t=0){we.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(gn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ct{constructor(e,t,n,i,s,a,c,u,h){Ct.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h)}set(e,t,n,i,s,a,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=a,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],g=n[5],y=n[8],M=i[0],x=i[3],_=i[6],w=i[1],E=i[4],T=i[7],N=i[2],P=i[5],U=i[8];return s[0]=a*M+c*w+u*N,s[3]=a*x+c*E+u*P,s[6]=a*_+c*T+u*U,s[1]=h*M+f*w+p*N,s[4]=h*x+f*E+p*P,s[7]=h*_+f*T+p*U,s[2]=m*M+g*w+y*N,s[5]=m*x+g*E+y*P,s[8]=m*_+g*T+y*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*a*f-t*c*h-n*s*f+n*c*u+i*s*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*a-c*h,m=c*u-f*s,g=h*s-a*u,y=t*p+n*m+i*g;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/y;return e[0]=p*M,e[1]=(i*h-f*n)*M,e[2]=(c*n-i*a)*M,e[3]=m*M,e[4]=(f*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(a*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*a+h*c)+a+e,-i*h,i*u,-i*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Xf.makeScale(e,t)),this}rotate(e){return this.premultiply(Xf.makeRotation(-e)),this}translate(e,t){return this.premultiply(Xf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Xf=new Ct;function O_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const dS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Bo(r,e){return new dS[r](e)}function il(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function B_(){const r=il("canvas");return r.style.display="block",r}const Yg={};function Fa(r){r in Yg||(Yg[r]=!0,console.warn(r))}function pS(r,e,t){return new Promise(function(n,i){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:i();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function mS(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function gS(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Vt={enabled:!0,workingColorSpace:cr,spaces:{},convert:function(r,e,t){return this.enabled===!1||e===t||!e||!t||(this.spaces[e].transfer===jt&&(r.r=Rr(r.r),r.g=Rr(r.g),r.b=Rr(r.b)),this.spaces[e].primaries!==this.spaces[t].primaries&&(r.applyMatrix3(this.spaces[e].toXYZ),r.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===jt&&(r.r=Go(r.r),r.g=Go(r.g),r.b=Go(r.b))),r},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===br?yl:this.spaces[r].transfer},getLuminanceCoefficients:function(r,e=this.workingColorSpace){return r.fromArray(this.spaces[e].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,e,t){return r.copy(this.spaces[e].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace}};function Rr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Go(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const qg=[.64,.33,.3,.6,.15,.06],Zg=[.2126,.7152,.0722],Jg=[.3127,.329],jg=new Ct().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Kg=new Ct().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);Vt.define({[cr]:{primaries:qg,whitePoint:Jg,transfer:yl,toXYZ:jg,fromXYZ:Kg,luminanceCoefficients:Zg,workingColorSpaceConfig:{unpackColorSpace:$n},outputColorSpaceConfig:{drawingBufferColorSpace:$n}},[$n]:{primaries:qg,whitePoint:Jg,transfer:jt,toXYZ:jg,fromXYZ:Kg,luminanceCoefficients:Zg,outputColorSpaceConfig:{drawingBufferColorSpace:$n}}});let go;class z_{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{go===void 0&&(go=il("canvas")),go.width=e.width,go.height=e.height;const n=go.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=go}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=il("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=Rr(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Rr(t[n]/255)*255):t[n]=Rr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let vS=0;class Fs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:vS++}),this.uuid=Si(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?s.push(Yf(i[a].image)):s.push(Yf(i[a]))}else s=Yf(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Yf(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?z_.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let _S=0;class $t extends ur{constructor(e=$t.DEFAULT_IMAGE,t=$t.DEFAULT_MAPPING,n=En,i=En,s=Kt,a=nr,c=xn,u=fi,h=$t.DEFAULT_ANISOTROPY,f=br){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:_S++}),this.uuid=Si(),this.name="",this.source=new Fs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new we(0,0),this.repeat=new we(1,1),this.center=new we(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ct,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==$r)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ka:e.x=e.x-Math.floor(e.x);break;case En:e.x=e.x<0?0:1;break;case Qa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ka:e.y=e.y-Math.floor(e.y);break;case En:e.y=e.y<0?0:1;break;case Qa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}$t.DEFAULT_IMAGE=null;$t.DEFAULT_MAPPING=$r;$t.DEFAULT_ANISOTROPY=1;class Wt{constructor(e=0,t=0,n=0,i=1){Wt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],g=u[5],y=u[9],M=u[2],x=u[6],_=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-M)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+M)<.1&&Math.abs(y+x)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(h+1)/2,T=(g+1)/2,N=(_+1)/2,P=(f+m)/4,U=(p+M)/4,L=(y+x)/4;return E>T&&E>N?E<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(E),i=P/n,s=U/n):T>N?T<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(T),n=P/i,s=L/i):N<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(N),n=U/s,i=L/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-M)*(p-M)+(m-f)*(m-f));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-M)/w,this.z=(m-f)/w,this.w=Math.acos((h+g+_-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class k_ extends ur{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Wt(0,0,e,t),this.scissorTest=!1,this.viewport=new Wt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Kt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new $t(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let c=0;c<a;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Fs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ei extends k_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class vh extends $t{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Fn,this.minFilter=Fn,this.wrapR=En,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class yS extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new vh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Tp extends $t{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Fn,this.minFilter=Fn,this.wrapR=En,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class xS extends Ei{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Tp(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Wn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,a,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[a+0],g=s[a+1],y=s[a+2],M=s[a+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=g,e[t+2]=y,e[t+3]=M;return}if(p!==M||u!==m||h!==g||f!==y){let x=1-c;const _=u*m+h*g+f*y+p*M,w=_>=0?1:-1,E=1-_*_;if(E>Number.EPSILON){const N=Math.sqrt(E),P=Math.atan2(N,_*w);x=Math.sin(x*P)/N,c=Math.sin(c*P)/N}const T=c*w;if(u=u*x+m*T,h=h*x+g*T,f=f*x+y*T,p=p*x+M*T,x===1-c){const N=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=N,h*=N,f*=N,p*=N}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,a){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[a],m=s[a+1],g=s[a+2],y=s[a+3];return e[t]=c*y+f*p+u*g-h*m,e[t+1]=u*y+f*m+h*p-c*g,e[t+2]=h*y+f*g+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,a=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),g=u(i/2),y=u(s/2);switch(a){case"XYZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"YXZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"ZXY":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"ZYX":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"YZX":this._x=m*f*p+h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p-m*g*y;break;case"XZY":this._x=m*f*p-h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p+m*g*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-u)*g,this._y=(s-h)*g,this._z=(a-i)*g}else if(n>c&&n>p){const g=2*Math.sqrt(1+n-c-p);this._w=(f-u)/g,this._x=.25*g,this._y=(i+a)/g,this._z=(s+h)/g}else if(c>p){const g=2*Math.sqrt(1+c-n-p);this._w=(s-h)/g,this._x=(i+a)/g,this._y=.25*g,this._z=(u+f)/g}else{const g=2*Math.sqrt(1+p-n-c);this._w=(a-i)/g,this._x=(s+h)/g,this._y=(u+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(gn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+a*c+i*h-s*u,this._y=i*f+a*u+s*c-n*h,this._z=s*f+a*h+n*u-i*c,this._w=a*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let c=a*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const g=1-t;return this._w=g*a+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(e=0,t=0,n=0){B.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Qg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Qg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,c=e.z,u=e.w,h=2*(a*i-c*n),f=2*(c*t-s*i),p=2*(s*n-a*t);return this.x=t+u*h+a*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-a*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*a-n*u,this.z=n*c-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return qf.copy(this).projectOnVector(e),this.sub(qf)}reflect(e){return this.sub(qf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(gn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const qf=new B,Qg=new Wn;class ni{constructor(e=new B(1/0,1/0,1/0),t=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Bi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Bi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Bi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,c=s.count;a<c;a++)e.isMesh===!0?e.getVertexPosition(a,Bi):Bi.fromBufferAttribute(s,a),Bi.applyMatrix4(e.matrixWorld),this.expandByPoint(Bi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Ec.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Ec.copy(n.boundingBox)),Ec.applyMatrix4(e.matrixWorld),this.union(Ec)}const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Bi),Bi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(xa),Tc.subVectors(this.max,xa),vo.subVectors(e.a,xa),_o.subVectors(e.b,xa),yo.subVectors(e.c,xa),Vr.subVectors(_o,vo),Gr.subVectors(yo,_o),gs.subVectors(vo,yo);let t=[0,-Vr.z,Vr.y,0,-Gr.z,Gr.y,0,-gs.z,gs.y,Vr.z,0,-Vr.x,Gr.z,0,-Gr.x,gs.z,0,-gs.x,-Vr.y,Vr.x,0,-Gr.y,Gr.x,0,-gs.y,gs.x,0];return!Zf(t,vo,_o,yo,Tc)||(t=[1,0,0,0,1,0,0,0,1],!Zf(t,vo,_o,yo,Tc))?!1:(bc.crossVectors(Vr,Gr),t=[bc.x,bc.y,bc.z],Zf(t,vo,_o,yo,Tc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Bi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Bi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(yr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),yr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),yr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),yr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),yr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),yr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),yr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),yr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(yr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const yr=[new B,new B,new B,new B,new B,new B,new B,new B],Bi=new B,Ec=new ni,vo=new B,_o=new B,yo=new B,Vr=new B,Gr=new B,gs=new B,xa=new B,Tc=new B,bc=new B,vs=new B;function Zf(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){vs.fromArray(r,s);const c=i.x*Math.abs(vs.x)+i.y*Math.abs(vs.y)+i.z*Math.abs(vs.z),u=e.dot(vs),h=t.dot(vs),f=n.dot(vs);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const MS=new ni,Ma=new B,Jf=new B;class Xn{constructor(e=new B,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):MS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Ma.subVectors(e,this.center);const t=Ma.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Ma,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Jf.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Ma.copy(e.center).add(Jf)),this.expandByPoint(Ma.copy(e.center).sub(Jf))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const xr=new B,jf=new B,Ac=new B,Wr=new B,Kf=new B,Cc=new B,Qf=new B;class js{constructor(e=new B,t=new B(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,xr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=xr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(xr.copy(this.origin).addScaledVector(this.direction,t),xr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){jf.copy(e).add(t).multiplyScalar(.5),Ac.copy(t).sub(e).normalize(),Wr.copy(this.origin).sub(jf);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Ac),c=Wr.dot(this.direction),u=-Wr.dot(Ac),h=Wr.lengthSq(),f=Math.abs(1-a*a);let p,m,g,y;if(f>0)if(p=a*u-c,m=a*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const M=1/f;p*=M,m*=M,g=p*(p+a*m+2*c)+m*(a*p+m+2*u)+h}else m=s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-a*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),g=m*(m+2*u)+h):(p=Math.max(0,-(a*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h);else m=a>0?-s:s,p=Math.max(0,-(a*m+c)),g=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(jf).addScaledVector(Ac,m),g}intersectSphere(e,t){xr.subVectors(e.center,this.origin);const n=xr.dot(this.direction),i=xr.dot(xr)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),c=n-a,u=n+a;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,a=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,a=(e.min.y-m.y)*f),n>a||s>i||((s>n||isNaN(n))&&(n=s),(a<i||isNaN(i))&&(i=a),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,xr)!==null}intersectTriangle(e,t,n,i,s){Kf.subVectors(t,e),Cc.subVectors(n,e),Qf.crossVectors(Kf,Cc);let a=this.direction.dot(Qf),c;if(a>0){if(i)return null;c=1}else if(a<0)c=-1,a=-a;else return null;Wr.subVectors(this.origin,e);const u=c*this.direction.dot(Cc.crossVectors(Wr,Cc));if(u<0)return null;const h=c*this.direction.dot(Kf.cross(Wr));if(h<0||u+h>a)return null;const f=-c*Wr.dot(Qf);return f<0?null:this.at(f/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Et{constructor(e,t,n,i,s,a,c,u,h,f,p,m,g,y,M,x){Et.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h,f,p,m,g,y,M,x)}set(e,t,n,i,s,a,c,u,h,f,p,m,g,y,M,x){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=a,_[9]=c,_[13]=u,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=g,_[7]=y,_[11]=M,_[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Et().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/xo.setFromMatrixColumn(e,0).length(),s=1/xo.setFromMatrixColumn(e,1).length(),a=1/xo.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=a*f,g=a*p,y=c*f,M=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=g+y*h,t[5]=m-M*h,t[9]=-c*u,t[2]=M-m*h,t[6]=y+g*h,t[10]=a*u}else if(e.order==="YXZ"){const m=u*f,g=u*p,y=h*f,M=h*p;t[0]=m+M*c,t[4]=y*c-g,t[8]=a*h,t[1]=a*p,t[5]=a*f,t[9]=-c,t[2]=g*c-y,t[6]=M+m*c,t[10]=a*u}else if(e.order==="ZXY"){const m=u*f,g=u*p,y=h*f,M=h*p;t[0]=m-M*c,t[4]=-a*p,t[8]=y+g*c,t[1]=g+y*c,t[5]=a*f,t[9]=M-m*c,t[2]=-a*h,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const m=a*f,g=a*p,y=c*f,M=c*p;t[0]=u*f,t[4]=y*h-g,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=g*h-y,t[2]=-h,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const m=a*u,g=a*h,y=c*u,M=c*h;t[0]=u*f,t[4]=M-m*p,t[8]=y*p+g,t[1]=p,t[5]=a*f,t[9]=-c*f,t[2]=-h*f,t[6]=g*p+y,t[10]=m-M*p}else if(e.order==="XZY"){const m=a*u,g=a*h,y=c*u,M=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+M,t[5]=a*f,t[9]=g*p-y,t[2]=y*p-g,t[6]=c*f,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(SS,e,wS)}lookAt(e,t,n){const i=this.elements;return yi.subVectors(e,t),yi.lengthSq()===0&&(yi.z=1),yi.normalize(),Xr.crossVectors(n,yi),Xr.lengthSq()===0&&(Math.abs(n.z)===1?yi.x+=1e-4:yi.z+=1e-4,yi.normalize(),Xr.crossVectors(n,yi)),Xr.normalize(),Rc.crossVectors(yi,Xr),i[0]=Xr.x,i[4]=Rc.x,i[8]=yi.x,i[1]=Xr.y,i[5]=Rc.y,i[9]=yi.y,i[2]=Xr.z,i[6]=Rc.z,i[10]=yi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],g=n[13],y=n[2],M=n[6],x=n[10],_=n[14],w=n[3],E=n[7],T=n[11],N=n[15],P=i[0],U=i[4],L=i[8],R=i[12],A=i[1],O=i[5],K=i[9],J=i[13],$=i[2],he=i[6],ee=i[10],Ee=i[14],z=i[3],te=i[7],Q=i[11],fe=i[15];return s[0]=a*P+c*A+u*$+h*z,s[4]=a*U+c*O+u*he+h*te,s[8]=a*L+c*K+u*ee+h*Q,s[12]=a*R+c*J+u*Ee+h*fe,s[1]=f*P+p*A+m*$+g*z,s[5]=f*U+p*O+m*he+g*te,s[9]=f*L+p*K+m*ee+g*Q,s[13]=f*R+p*J+m*Ee+g*fe,s[2]=y*P+M*A+x*$+_*z,s[6]=y*U+M*O+x*he+_*te,s[10]=y*L+M*K+x*ee+_*Q,s[14]=y*R+M*J+x*Ee+_*fe,s[3]=w*P+E*A+T*$+N*z,s[7]=w*U+E*O+T*he+N*te,s[11]=w*L+E*K+T*ee+N*Q,s[15]=w*R+E*J+T*Ee+N*fe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],y=e[3],M=e[7],x=e[11],_=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*g-n*u*g)+M*(+t*u*g-t*h*m+s*a*m-i*a*g+i*h*f-s*u*f)+x*(+t*h*p-t*c*g-s*a*p+n*a*g+s*c*f-n*h*f)+_*(-i*c*f-t*u*p+t*c*m+i*a*p-n*a*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],y=e[12],M=e[13],x=e[14],_=e[15],w=p*x*h-M*m*h+M*u*g-c*x*g-p*u*_+c*m*_,E=y*m*h-f*x*h-y*u*g+a*x*g+f*u*_-a*m*_,T=f*M*h-y*p*h+y*c*g-a*M*g-f*c*_+a*p*_,N=y*p*u-f*M*u-y*c*m+a*M*m+f*c*x-a*p*x,P=t*w+n*E+i*T+s*N;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/P;return e[0]=w*U,e[1]=(M*m*s-p*x*s-M*i*g+n*x*g+p*i*_-n*m*_)*U,e[2]=(c*x*s-M*u*s+M*i*h-n*x*h-c*i*_+n*u*_)*U,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*g-n*u*g)*U,e[4]=E*U,e[5]=(f*x*s-y*m*s+y*i*g-t*x*g-f*i*_+t*m*_)*U,e[6]=(y*u*s-a*x*s-y*i*h+t*x*h+a*i*_-t*u*_)*U,e[7]=(a*m*s-f*u*s+f*i*h-t*m*h-a*i*g+t*u*g)*U,e[8]=T*U,e[9]=(y*p*s-f*M*s-y*n*g+t*M*g+f*n*_-t*p*_)*U,e[10]=(a*M*s-y*c*s+y*n*h-t*M*h-a*n*_+t*c*_)*U,e[11]=(f*c*s-a*p*s-f*n*h+t*p*h+a*n*g-t*c*g)*U,e[12]=N*U,e[13]=(f*M*i-y*p*i+y*n*m-t*M*m-f*n*x+t*p*x)*U,e[14]=(y*c*i-a*M*i-y*n*u+t*M*u+a*n*x-t*c*x)*U,e[15]=(a*p*i-f*c*i+f*n*u-t*p*u-a*n*m+t*c*m)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,c=e.y,u=e.z,h=s*a,f=s*c;return this.set(h*a+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*a,0,h*u-i*c,f*u+i*a,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,c=t._z,u=t._w,h=s+s,f=a+a,p=c+c,m=s*h,g=s*f,y=s*p,M=a*f,x=a*p,_=c*p,w=u*h,E=u*f,T=u*p,N=n.x,P=n.y,U=n.z;return i[0]=(1-(M+_))*N,i[1]=(g+T)*N,i[2]=(y-E)*N,i[3]=0,i[4]=(g-T)*P,i[5]=(1-(m+_))*P,i[6]=(x+w)*P,i[7]=0,i[8]=(y+E)*U,i[9]=(x-w)*U,i[10]=(1-(m+M))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=xo.set(i[0],i[1],i[2]).length();const a=xo.set(i[4],i[5],i[6]).length(),c=xo.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],zi.copy(this);const h=1/s,f=1/a,p=1/c;return zi.elements[0]*=h,zi.elements[1]*=h,zi.elements[2]*=h,zi.elements[4]*=f,zi.elements[5]*=f,zi.elements[6]*=f,zi.elements[8]*=p,zi.elements[9]*=p,zi.elements[10]*=p,t.setFromRotationMatrix(zi),n.x=s,n.y=a,n.z=c,this}makePerspective(e,t,n,i,s,a,c=ir){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let g,y;if(c===ir)g=-(a+s)/(a-s),y=-2*a*s/(a-s);else if(c===nl)g=-a/(a-s),y=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,a,c=ir){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(a-s),m=(t+e)*h,g=(n+i)*f;let y,M;if(c===ir)y=(a+s)*p,M=-2*p;else if(c===nl)y=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const xo=new B,zi=new Et,SS=new B(0,0,0),wS=new B(1,1,1),Xr=new B,Rc=new B,yi=new B,$g=new Et,ev=new Wn;class Ti{constructor(e=0,t=0,n=0,i=Ti.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(gn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-gn(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(gn(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-gn(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(gn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-gn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return $g.makeRotationFromQuaternion(e),this.setFromRotationMatrix($g,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ev.setFromEuler(this),this.setFromQuaternion(ev,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ti.DEFAULT_ORDER="XYZ";class Gs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ES=0;const tv=new B,Mo=new Wn,Mr=new Et,Ic=new B,Sa=new B,TS=new B,bS=new Wn,nv=new B(1,0,0),iv=new B(0,1,0),rv=new B(0,0,1),sv={type:"added"},AS={type:"removed"},So={type:"childadded",child:null},$f={type:"childremoved",child:null};class Xt extends ur{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ES++}),this.uuid=Si(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xt.DEFAULT_UP.clone();const e=new B,t=new Ti,n=new Wn,i=new B(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Et},normalMatrix:{value:new Ct}}),this.matrix=new Et,this.matrixWorld=new Et,this.matrixAutoUpdate=Xt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Gs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Mo.setFromAxisAngle(e,t),this.quaternion.multiply(Mo),this}rotateOnWorldAxis(e,t){return Mo.setFromAxisAngle(e,t),this.quaternion.premultiply(Mo),this}rotateX(e){return this.rotateOnAxis(nv,e)}rotateY(e){return this.rotateOnAxis(iv,e)}rotateZ(e){return this.rotateOnAxis(rv,e)}translateOnAxis(e,t){return tv.copy(e).applyQuaternion(this.quaternion),this.position.add(tv.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(nv,e)}translateY(e){return this.translateOnAxis(iv,e)}translateZ(e){return this.translateOnAxis(rv,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Mr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ic.copy(e):Ic.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Sa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Mr.lookAt(Sa,Ic,this.up):Mr.lookAt(Ic,Sa,this.up),this.quaternion.setFromRotationMatrix(Mr),i&&(Mr.extractRotation(i.matrixWorld),Mo.setFromRotationMatrix(Mr),this.quaternion.premultiply(Mo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(sv),So.child=e,this.dispatchEvent(So),So.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(AS),$f.child=e,this.dispatchEvent($f),$f.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Mr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Mr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Mr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(sv),So.child=e,this.dispatchEvent(So),So.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sa,e,TS),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sa,bS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),h=a(e.textures),f=a(e.images),p=a(e.shapes),m=a(e.skeletons),g=a(e.animations),y=a(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),y.length>0&&(n.nodes=y)}return n.object=i,n;function a(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Xt.DEFAULT_UP=new B(0,1,0);Xt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ki=new B,Sr=new B,ed=new B,wr=new B,wo=new B,Eo=new B,ov=new B,td=new B,nd=new B,id=new B,rd=new Wt,sd=new Wt,od=new Wt;class hi{constructor(e=new B,t=new B,n=new B){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),ki.subVectors(e,t),i.cross(ki);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){ki.subVectors(i,t),Sr.subVectors(n,t),ed.subVectors(e,t);const a=ki.dot(ki),c=ki.dot(Sr),u=ki.dot(ed),h=Sr.dot(Sr),f=Sr.dot(ed),p=a*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,g=(h*u-c*f)*m,y=(a*f-c*u)*m;return s.set(1-g-y,y,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,wr)===null?!1:wr.x>=0&&wr.y>=0&&wr.x+wr.y<=1}static getInterpolation(e,t,n,i,s,a,c,u){return this.getBarycoord(e,t,n,i,wr)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,wr.x),u.addScaledVector(a,wr.y),u.addScaledVector(c,wr.z),u)}static getInterpolatedAttribute(e,t,n,i,s,a){return rd.setScalar(0),sd.setScalar(0),od.setScalar(0),rd.fromBufferAttribute(e,t),sd.fromBufferAttribute(e,n),od.fromBufferAttribute(e,i),a.setScalar(0),a.addScaledVector(rd,s.x),a.addScaledVector(sd,s.y),a.addScaledVector(od,s.z),a}static isFrontFacing(e,t,n,i){return ki.subVectors(n,t),Sr.subVectors(e,t),ki.cross(Sr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ki.subVectors(this.c,this.b),Sr.subVectors(this.a,this.b),ki.cross(Sr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return hi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return hi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return hi.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return hi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return hi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,c;wo.subVectors(i,n),Eo.subVectors(s,n),td.subVectors(e,n);const u=wo.dot(td),h=Eo.dot(td);if(u<=0&&h<=0)return t.copy(n);nd.subVectors(e,i);const f=wo.dot(nd),p=Eo.dot(nd);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return a=u/(u-f),t.copy(n).addScaledVector(wo,a);id.subVectors(e,s);const g=wo.dot(id),y=Eo.dot(id);if(y>=0&&g<=y)return t.copy(s);const M=g*h-u*y;if(M<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Eo,c);const x=f*y-g*p;if(x<=0&&p-f>=0&&g-y>=0)return ov.subVectors(s,i),c=(p-f)/(p-f+(g-y)),t.copy(i).addScaledVector(ov,c);const _=1/(x+M+m);return a=M*_,c=m*_,t.copy(n).addScaledVector(wo,a).addScaledVector(Eo,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const H_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Yr={h:0,s:0,l:0},Pc={h:0,s:0,l:0};function ad(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class tt{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=$n){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Vt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Vt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Vt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Vt.workingColorSpace){if(e=Ep(e,1),t=gn(t,0,1),n=gn(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=ad(a,s,e+1/3),this.g=ad(a,s,e),this.b=ad(a,s,e-1/3)}return Vt.toWorkingColorSpace(this,i),this}setStyle(e,t=$n){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],c=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=$n){const n=H_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Rr(e.r),this.g=Rr(e.g),this.b=Rr(e.b),this}copyLinearToSRGB(e){return this.r=Go(e.r),this.g=Go(e.g),this.b=Go(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=$n){return Vt.fromWorkingColorSpace(Vn.copy(this),e),Math.round(gn(Vn.r*255,0,255))*65536+Math.round(gn(Vn.g*255,0,255))*256+Math.round(gn(Vn.b*255,0,255))}getHexString(e=$n){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Vt.workingColorSpace){Vt.fromWorkingColorSpace(Vn.copy(this),t);const n=Vn.r,i=Vn.g,s=Vn.b,a=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+a)/2;if(c===a)u=0,h=0;else{const p=a-c;switch(h=f<=.5?p/(a+c):p/(2-a-c),a){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=Vt.workingColorSpace){return Vt.fromWorkingColorSpace(Vn.copy(this),t),e.r=Vn.r,e.g=Vn.g,e.b=Vn.b,e}getStyle(e=$n){Vt.fromWorkingColorSpace(Vn.copy(this),e);const t=Vn.r,n=Vn.g,i=Vn.b;return e!==$n?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Yr),this.setHSL(Yr.h+e,Yr.s+t,Yr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Yr),e.getHSL(Pc);const n=Ya(Yr.h,Pc.h,t),i=Ya(Yr.s,Pc.s,t),s=Ya(Yr.l,Pc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Vn=new tt;tt.NAMES=H_;let CS=0;class Yn extends ur{static get type(){return"Material"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:CS++}),this.uuid=Si(),this.name="",this.blending=ks,this.side=Pr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=wu,this.blendDst=Eu,this.blendEquation=Kr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new tt(0,0,0),this.blendAlpha=0,this.depthFunc=Xs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Kd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ps,this.stencilZFail=Ps,this.stencilZPass=Ps,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ks&&(n.blending=this.blending),this.side!==Pr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==wu&&(n.blendSrc=this.blendSrc),this.blendDst!==Eu&&(n.blendDst=this.blendDst),this.blendEquation!==Kr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Xs&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Kd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ps&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ps&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ps&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const a=[];for(const c in s){const u=s[c];delete u.metadata,a.push(u)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Lr extends Yn{static get type(){return"MeshBasicMaterial"}constructor(e){super(),this.isMeshBasicMaterial=!0,this.color=new tt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=ml,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ar=RS();function RS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:c}}function ui(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=gn(r,-65504,65504),Ar.floatView[0]=r;const e=Ar.uint32View[0],t=e>>23&511;return Ar.baseTable[t]+((e&8388607)>>Ar.shiftTable[t])}function Oa(r){const e=r>>10;return Ar.uint32View[0]=Ar.mantissaTable[Ar.offsetTable[e]+(r&1023)]+Ar.exponentTable[e],Ar.floatView[0]}const Os={toHalfFloat:ui,fromHalfFloat:Oa},wn=new B,Lc=new we;class en{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=tl,this.updateRanges=[],this.gpuType=hn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Lc.fromBufferAttribute(this,t),Lc.applyMatrix3(e),this.setXY(t,Lc.x,Lc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix3(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyMatrix4(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.applyNormalMatrix(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)wn.fromBufferAttribute(this,t),wn.transformDirection(e),this.setXYZ(t,wn.x,wn.y,wn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=ei(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Pt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ei(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ei(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ei(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ei(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),s=Pt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==tl&&(e.usage=this.usage),e}}class IS extends en{constructor(e,t,n){super(new Int8Array(e),t,n)}}class PS extends en{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class LS extends en{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class DS extends en{constructor(e,t,n){super(new Int16Array(e),t,n)}}class bp extends en{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class US extends en{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Ap extends en{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class NS extends en{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Oa(this.array[e*this.itemSize]);return this.normalized&&(t=ei(t,this.array)),t}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize]=ui(t),this}getY(e){let t=Oa(this.array[e*this.itemSize+1]);return this.normalized&&(t=ei(t,this.array)),t}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+1]=ui(t),this}getZ(e){let t=Oa(this.array[e*this.itemSize+2]);return this.normalized&&(t=ei(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+2]=ui(t),this}getW(e){let t=Oa(this.array[e*this.itemSize+3]);return this.normalized&&(t=ei(t,this.array)),t}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.array[e*this.itemSize+3]=ui(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.array[e+0]=ui(t),this.array[e+1]=ui(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.array[e+0]=ui(t),this.array[e+1]=ui(n),this.array[e+2]=ui(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),s=Pt(s,this.array)),this.array[e+0]=ui(t),this.array[e+1]=ui(n),this.array[e+2]=ui(i),this.array[e+3]=ui(s),this}}class ut extends en{constructor(e,t,n){super(new Float32Array(e),t,n)}}let FS=0;const Ui=new Et,ld=new Xt,To=new B,xi=new ni,wa=new ni,Dn=new B;class Dt extends ur{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:FS++}),this.uuid=Si(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(O_(e)?Ap:bp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Ct().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ui.makeRotationFromQuaternion(e),this.applyMatrix4(Ui),this}rotateX(e){return Ui.makeRotationX(e),this.applyMatrix4(Ui),this}rotateY(e){return Ui.makeRotationY(e),this.applyMatrix4(Ui),this}rotateZ(e){return Ui.makeRotationZ(e),this.applyMatrix4(Ui),this}translate(e,t,n){return Ui.makeTranslation(e,t,n),this.applyMatrix4(Ui),this}scale(e,t,n){return Ui.makeScale(e,t,n),this.applyMatrix4(Ui),this}lookAt(e){return ld.lookAt(e),ld.updateMatrix(),this.applyMatrix4(ld.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(To).negate(),this.translate(To.x,To.y,To.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new ut(n,3))}else{for(let n=0,i=t.count;n<i;n++){const s=e[n];t.setXYZ(n,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ni);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];xi.setFromBufferAttribute(s),this.morphTargetsRelative?(Dn.addVectors(this.boundingBox.min,xi.min),this.boundingBox.expandByPoint(Dn),Dn.addVectors(this.boundingBox.max,xi.max),this.boundingBox.expandByPoint(Dn)):(this.boundingBox.expandByPoint(xi.min),this.boundingBox.expandByPoint(xi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new B,1/0);return}if(e){const n=this.boundingSphere.center;if(xi.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const c=t[s];wa.setFromBufferAttribute(c),this.morphTargetsRelative?(Dn.addVectors(xi.min,wa.min),xi.expandByPoint(Dn),Dn.addVectors(xi.max,wa.max),xi.expandByPoint(Dn)):(xi.expandByPoint(wa.min),xi.expandByPoint(wa.max))}xi.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)Dn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Dn));if(t)for(let s=0,a=t.length;s<a;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)Dn.fromBufferAttribute(c,h),u&&(To.fromBufferAttribute(e,h),Dn.add(To)),i=Math.max(i,n.distanceToSquared(Dn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new en(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),c=[],u=[];for(let L=0;L<n.count;L++)c[L]=new B,u[L]=new B;const h=new B,f=new B,p=new B,m=new we,g=new we,y=new we,M=new B,x=new B;function _(L,R,A){h.fromBufferAttribute(n,L),f.fromBufferAttribute(n,R),p.fromBufferAttribute(n,A),m.fromBufferAttribute(s,L),g.fromBufferAttribute(s,R),y.fromBufferAttribute(s,A),f.sub(h),p.sub(h),g.sub(m),y.sub(m);const O=1/(g.x*y.y-y.x*g.y);isFinite(O)&&(M.copy(f).multiplyScalar(y.y).addScaledVector(p,-g.y).multiplyScalar(O),x.copy(p).multiplyScalar(g.x).addScaledVector(f,-y.x).multiplyScalar(O),c[L].add(M),c[R].add(M),c[A].add(M),u[L].add(x),u[R].add(x),u[A].add(x))}let w=this.groups;w.length===0&&(w=[{start:0,count:e.count}]);for(let L=0,R=w.length;L<R;++L){const A=w[L],O=A.start,K=A.count;for(let J=O,$=O+K;J<$;J+=3)_(e.getX(J+0),e.getX(J+1),e.getX(J+2))}const E=new B,T=new B,N=new B,P=new B;function U(L){N.fromBufferAttribute(i,L),P.copy(N);const R=c[L];E.copy(R),E.sub(N.multiplyScalar(N.dot(R))).normalize(),T.crossVectors(P,R);const O=T.dot(u[L])<0?-1:1;a.setXYZW(L,E.x,E.y,E.z,O)}for(let L=0,R=w.length;L<R;++L){const A=w[L],O=A.start,K=A.count;for(let J=O,$=O+K;J<$;J+=3)U(e.getX(J+0)),U(e.getX(J+1)),U(e.getX(J+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new en(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const i=new B,s=new B,a=new B,c=new B,u=new B,h=new B,f=new B,p=new B;if(e)for(let m=0,g=e.count;m<g;m+=3){const y=e.getX(m+0),M=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,M),a.fromBufferAttribute(t,x),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),f.subVectors(a,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Dn.fromBufferAttribute(e,t),Dn.normalize(),e.setXYZ(t,Dn.x,Dn.y,Dn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let g=0,y=0;for(let M=0,x=u.length;M<x;M++){c.isInterleavedBufferAttribute?g=u[M]*c.data.stride+c.offset:g=u[M]*f;for(let _=0;_<f;_++)m[y++]=h[g++]}return new en(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Dt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,n);u.push(g)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,f=a.length;h<f;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const av=new Et,_s=new js,Dc=new Xn,lv=new B,Uc=new B,Nc=new B,Fc=new B,cd=new B,Oc=new B,cv=new B,Bc=new B;class fn extends Xt{constructor(e=new Dt,t=new Lr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){Oc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(cd.fromBufferAttribute(p,e),a?Oc.addScaledVector(cd,f):Oc.addScaledVector(cd.sub(t),f))}t.add(Oc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Dc.copy(n.boundingSphere),Dc.applyMatrix4(s),_s.copy(e.ray).recast(e.near),!(Dc.containsPoint(_s.origin)===!1&&(_s.intersectSphere(Dc,lv)===null||_s.origin.distanceToSquared(lv)>(e.far-e.near)**2))&&(av.copy(s).invert(),_s.copy(e.ray).applyMatrix4(av),!(n.boundingBox!==null&&_s.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,_s)))}_computeIntersections(e,t,n){let i;const s=this.geometry,a=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,g=s.drawRange;if(c!==null)if(Array.isArray(a))for(let y=0,M=m.length;y<M;y++){const x=m[y],_=a[x.materialIndex],w=Math.max(x.start,g.start),E=Math.min(c.count,Math.min(x.start+x.count,g.start+g.count));for(let T=w,N=E;T<N;T+=3){const P=c.getX(T),U=c.getX(T+1),L=c.getX(T+2);i=zc(this,_,e,n,h,f,p,P,U,L),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),M=Math.min(c.count,g.start+g.count);for(let x=y,_=M;x<_;x+=3){const w=c.getX(x),E=c.getX(x+1),T=c.getX(x+2);i=zc(this,a,e,n,h,f,p,w,E,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(a))for(let y=0,M=m.length;y<M;y++){const x=m[y],_=a[x.materialIndex],w=Math.max(x.start,g.start),E=Math.min(u.count,Math.min(x.start+x.count,g.start+g.count));for(let T=w,N=E;T<N;T+=3){const P=T,U=T+1,L=T+2;i=zc(this,_,e,n,h,f,p,P,U,L),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let x=y,_=M;x<_;x+=3){const w=x,E=x+1,T=x+2;i=zc(this,a,e,n,h,f,p,w,E,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function OS(r,e,t,n,i,s,a,c){let u;if(e.side===ti?u=n.intersectTriangle(a,s,i,!0,c):u=n.intersectTriangle(i,s,a,e.side===Pr,c),u===null)return null;Bc.copy(c),Bc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Bc);return h<t.near||h>t.far?null:{distance:h,point:Bc.clone(),object:r}}function zc(r,e,t,n,i,s,a,c,u,h){r.getVertexPosition(c,Uc),r.getVertexPosition(u,Nc),r.getVertexPosition(h,Fc);const f=OS(r,e,t,n,Uc,Nc,Fc,cv);if(f){const p=new B;hi.getBarycoord(cv,Uc,Nc,Fc,p),i&&(f.uv=hi.getInterpolatedAttribute(i,c,u,h,p,new we)),s&&(f.uv1=hi.getInterpolatedAttribute(s,c,u,h,p,new we)),a&&(f.normal=hi.getInterpolatedAttribute(a,c,u,h,p,new B),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const m={a:c,b:u,c:h,normal:new B,materialIndex:0};hi.getNormal(Uc,Nc,Fc,m.normal),f.face=m,f.barycoord=p}return f}class Ks extends Dt{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const c=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const u=[],h=[],f=[],p=[];let m=0,g=0;y("z","y","x",-1,-1,n,t,e,a,s,0),y("z","y","x",1,-1,n,t,-e,a,s,1),y("x","z","y",1,1,e,n,t,i,a,2),y("x","z","y",1,-1,e,n,-t,i,a,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new ut(h,3)),this.setAttribute("normal",new ut(f,3)),this.setAttribute("uv",new ut(p,2));function y(M,x,_,w,E,T,N,P,U,L,R){const A=T/U,O=N/L,K=T/2,J=N/2,$=P/2,he=U+1,ee=L+1;let Ee=0,z=0;const te=new B;for(let Q=0;Q<ee;Q++){const fe=Q*O-J;for(let xe=0;xe<he;xe++){const ze=xe*A-K;te[M]=ze*w,te[x]=fe*E,te[_]=$,h.push(te.x,te.y,te.z),te[M]=0,te[x]=0,te[_]=P>0?1:-1,f.push(te.x,te.y,te.z),p.push(xe/U),p.push(1-Q/L),Ee+=1}}for(let Q=0;Q<L;Q++)for(let fe=0;fe<U;fe++){const xe=m+fe+he*Q,ze=m+fe+he*(Q+1),ce=m+(fe+1)+he*(Q+1),be=m+(fe+1)+he*Q;u.push(xe,ze,be),u.push(ze,ce,be),z+=6}c.addGroup(g,z,R),g+=z,m+=Ee}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ks(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Zo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Kn(r){const e={};for(let t=0;t<r.length;t++){const n=Zo(r[t]);for(const i in n)e[i]=n[i]}return e}function BS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function V_(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Vt.workingColorSpace}const G_={clone:Zo,merge:Kn};var zS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,kS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class di extends Yn{static get type(){return"ShaderMaterial"}constructor(e){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=zS,this.fragmentShader=kS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Zo(e.uniforms),this.uniformsGroups=BS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class xl extends Xt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Et,this.projectionMatrix=new Et,this.projectionMatrixInverse=new Et,this.coordinateSystem=ir}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const qr=new B,uv=new we,hv=new we;class yn extends xl{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=qo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Vs*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return qo*2*Math.atan(Math.tan(Vs*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){qr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(qr.x,qr.y).multiplyScalar(-e/qr.z),qr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(qr.x,qr.y).multiplyScalar(-e/qr.z)}getViewSize(e,t){return this.getViewBounds(e,uv,hv),t.subVectors(hv,uv)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Vs*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;s+=a.offsetX*i/u,t-=a.offsetY*n/h,i*=a.width/u,n*=a.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const bo=-90,Ao=1;class W_ extends Xt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new yn(bo,Ao,e,t);i.layers=this.layers,this.add(i);const s=new yn(bo,Ao,e,t);s.layers=this.layers,this.add(s);const a=new yn(bo,Ao,e,t);a.layers=this.layers,this.add(a);const c=new yn(bo,Ao,e,t);c.layers=this.layers,this.add(c);const u=new yn(bo,Ao,e,t);u.layers=this.layers,this.add(u);const h=new yn(bo,Ao,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,a,c,u]=t;for(const h of t)this.remove(h);if(e===ir)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===nl)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,g),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Ml extends $t{constructor(e,t,n,i,s,a,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:ar,super(e,t,n,i,s,a,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Cp extends Ei{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Ml(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Kt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ks(5,5,5),s=new di({name:"CubemapFromEquirect",uniforms:Zo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ti,blending:rr});s.uniforms.tEquirect.value=t;const a=new fn(i,s),c=t.minFilter;return t.minFilter===nr&&(t.minFilter=Kt),new W_(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}const ud=new B,HS=new B,VS=new Ct;class Tr{constructor(e=new B(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=ud.subVectors(n,t).cross(HS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(ud),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||VS.getNormalMatrix(e),i=this.coplanarPoint(ud).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ys=new Xn,kc=new B;class Sl{constructor(e=new Tr,t=new Tr,n=new Tr,i=new Tr,s=new Tr,a=new Tr){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ir){const n=this.planes,i=e.elements,s=i[0],a=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],g=i[8],y=i[9],M=i[10],x=i[11],_=i[12],w=i[13],E=i[14],T=i[15];if(n[0].setComponents(u-s,m-h,x-g,T-_).normalize(),n[1].setComponents(u+s,m+h,x+g,T+_).normalize(),n[2].setComponents(u+a,m+f,x+y,T+w).normalize(),n[3].setComponents(u-a,m-f,x-y,T-w).normalize(),n[4].setComponents(u-c,m-p,x-M,T-E).normalize(),t===ir)n[5].setComponents(u+c,m+p,x+M,T+E).normalize();else if(t===nl)n[5].setComponents(c,p,M,E).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ys.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ys.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ys)}intersectsSprite(e){return ys.center.set(0,0,0),ys.radius=.7071067811865476,ys.applyMatrix4(e.matrixWorld),this.intersectsSphere(ys)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(kc.x=i.normal.x>0?e.max.x:e.min.x,kc.y=i.normal.y>0?e.max.y:e.min.y,kc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(kc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function X_(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function GS(r){const e=new WeakMap;function t(c,u){const h=c.array,f=c.usage,p=h.byteLength,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,h,f),c.onUploadCallback();let g;if(h instanceof Float32Array)g=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?g=r.HALF_FLOAT:g=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)g=r.SHORT;else if(h instanceof Uint32Array)g=r.UNSIGNED_INT;else if(h instanceof Int32Array)g=r.INT;else if(h instanceof Int8Array)g=r.BYTE;else if(h instanceof Uint8Array)g=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)g=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const f=u.array,p=u.updateRanges;if(r.bindBuffer(h,c),p.length===0)r.bufferSubData(h,0,f);else{p.sort((g,y)=>g.start-y.start);let m=0;for(let g=1;g<p.length;g++){const y=p[m],M=p[g];M.start<=y.start+y.count+1?y.count=Math.max(y.count,M.start+M.count-y.start):(++m,p[m]=M)}p.length=m+1;for(let g=0,y=p.length;g<y;g++){const M=p[g];r.bufferSubData(h,M.start*f.BYTES_PER_ELEMENT,f,M.start,M.count)}u.clearUpdateRanges()}u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function a(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const f=e.get(c);(!f||f.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:a}}class is extends Dt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,g=[],y=[],M=[],x=[];for(let _=0;_<f;_++){const w=_*m-a;for(let E=0;E<h;E++){const T=E*p-s;y.push(T,-w,0),M.push(0,0,1),x.push(E/c),x.push(1-_/u)}}for(let _=0;_<u;_++)for(let w=0;w<c;w++){const E=w+h*_,T=w+h*(_+1),N=w+1+h*(_+1),P=w+1+h*_;g.push(E,T,P),g.push(T,N,P)}this.setIndex(g),this.setAttribute("position",new ut(y,3)),this.setAttribute("normal",new ut(M,3)),this.setAttribute("uv",new ut(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new is(e.width,e.height,e.widthSegments,e.heightSegments)}}var WS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,XS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,YS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,qS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ZS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,JS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,jS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,KS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,QS=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,$S=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,e1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,t1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,n1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,i1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,r1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,s1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,o1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,a1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,l1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,c1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,u1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,h1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,f1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,d1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,p1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,m1=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,g1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,v1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,_1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,y1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,x1="gl_FragColor = linearToOutputTexel( gl_FragColor );",M1=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,S1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,w1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,E1=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,T1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,b1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,A1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,C1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,R1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,I1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,P1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,L1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,D1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,U1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,N1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,F1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,O1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,B1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,z1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,k1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,H1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,V1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,G1=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,W1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,X1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Y1=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,q1=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Z1=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,J1=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,j1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,K1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Q1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,$1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ew=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,tw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,nw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,iw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,rw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,sw=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,ow=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,aw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,lw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,cw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,uw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,hw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,fw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,dw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,pw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,mw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,gw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,vw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,_w=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,yw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,xw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Mw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Sw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ww=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Ew=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Tw=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,bw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Aw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Cw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Rw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Iw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Pw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Lw=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Dw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Uw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Nw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Fw=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Ow=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Bw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,zw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,kw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Hw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Vw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Gw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Ww=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Xw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Yw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,qw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Zw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Jw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,jw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Kw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Qw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,$w=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,eE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,tE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,nE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,iE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,rE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,oE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,lE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,uE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,hE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,pE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,_E=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yE=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ME=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,SE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Lt={alphahash_fragment:WS,alphahash_pars_fragment:XS,alphamap_fragment:YS,alphamap_pars_fragment:qS,alphatest_fragment:ZS,alphatest_pars_fragment:JS,aomap_fragment:jS,aomap_pars_fragment:KS,batching_pars_vertex:QS,batching_vertex:$S,begin_vertex:e1,beginnormal_vertex:t1,bsdfs:n1,iridescence_fragment:i1,bumpmap_pars_fragment:r1,clipping_planes_fragment:s1,clipping_planes_pars_fragment:o1,clipping_planes_pars_vertex:a1,clipping_planes_vertex:l1,color_fragment:c1,color_pars_fragment:u1,color_pars_vertex:h1,color_vertex:f1,common:d1,cube_uv_reflection_fragment:p1,defaultnormal_vertex:m1,displacementmap_pars_vertex:g1,displacementmap_vertex:v1,emissivemap_fragment:_1,emissivemap_pars_fragment:y1,colorspace_fragment:x1,colorspace_pars_fragment:M1,envmap_fragment:S1,envmap_common_pars_fragment:w1,envmap_pars_fragment:E1,envmap_pars_vertex:T1,envmap_physical_pars_fragment:F1,envmap_vertex:b1,fog_vertex:A1,fog_pars_vertex:C1,fog_fragment:R1,fog_pars_fragment:I1,gradientmap_pars_fragment:P1,lightmap_pars_fragment:L1,lights_lambert_fragment:D1,lights_lambert_pars_fragment:U1,lights_pars_begin:N1,lights_toon_fragment:O1,lights_toon_pars_fragment:B1,lights_phong_fragment:z1,lights_phong_pars_fragment:k1,lights_physical_fragment:H1,lights_physical_pars_fragment:V1,lights_fragment_begin:G1,lights_fragment_maps:W1,lights_fragment_end:X1,logdepthbuf_fragment:Y1,logdepthbuf_pars_fragment:q1,logdepthbuf_pars_vertex:Z1,logdepthbuf_vertex:J1,map_fragment:j1,map_pars_fragment:K1,map_particle_fragment:Q1,map_particle_pars_fragment:$1,metalnessmap_fragment:ew,metalnessmap_pars_fragment:tw,morphinstance_vertex:nw,morphcolor_vertex:iw,morphnormal_vertex:rw,morphtarget_pars_vertex:sw,morphtarget_vertex:ow,normal_fragment_begin:aw,normal_fragment_maps:lw,normal_pars_fragment:cw,normal_pars_vertex:uw,normal_vertex:hw,normalmap_pars_fragment:fw,clearcoat_normal_fragment_begin:dw,clearcoat_normal_fragment_maps:pw,clearcoat_pars_fragment:mw,iridescence_pars_fragment:gw,opaque_fragment:vw,packing:_w,premultiplied_alpha_fragment:yw,project_vertex:xw,dithering_fragment:Mw,dithering_pars_fragment:Sw,roughnessmap_fragment:ww,roughnessmap_pars_fragment:Ew,shadowmap_pars_fragment:Tw,shadowmap_pars_vertex:bw,shadowmap_vertex:Aw,shadowmask_pars_fragment:Cw,skinbase_vertex:Rw,skinning_pars_vertex:Iw,skinning_vertex:Pw,skinnormal_vertex:Lw,specularmap_fragment:Dw,specularmap_pars_fragment:Uw,tonemapping_fragment:Nw,tonemapping_pars_fragment:Fw,transmission_fragment:Ow,transmission_pars_fragment:Bw,uv_pars_fragment:zw,uv_pars_vertex:kw,uv_vertex:Hw,worldpos_vertex:Vw,background_vert:Gw,background_frag:Ww,backgroundCube_vert:Xw,backgroundCube_frag:Yw,cube_vert:qw,cube_frag:Zw,depth_vert:Jw,depth_frag:jw,distanceRGBA_vert:Kw,distanceRGBA_frag:Qw,equirect_vert:$w,equirect_frag:eE,linedashed_vert:tE,linedashed_frag:nE,meshbasic_vert:iE,meshbasic_frag:rE,meshlambert_vert:sE,meshlambert_frag:oE,meshmatcap_vert:aE,meshmatcap_frag:lE,meshnormal_vert:cE,meshnormal_frag:uE,meshphong_vert:hE,meshphong_frag:fE,meshphysical_vert:dE,meshphysical_frag:pE,meshtoon_vert:mE,meshtoon_frag:gE,points_vert:vE,points_frag:_E,shadow_vert:yE,shadow_frag:xE,sprite_vert:ME,sprite_frag:SE},Ye={common:{diffuse:{value:new tt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ct},alphaMap:{value:null},alphaMapTransform:{value:new Ct},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ct}},envmap:{envMap:{value:null},envMapRotation:{value:new Ct},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ct}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ct}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ct},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ct},normalScale:{value:new we(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ct},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ct}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ct}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ct}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new tt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new tt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ct},alphaTest:{value:0},uvTransform:{value:new Ct}},sprite:{diffuse:{value:new tt(16777215)},opacity:{value:1},center:{value:new we(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ct},alphaMap:{value:null},alphaMapTransform:{value:new Ct},alphaTest:{value:0}}},Gi={basic:{uniforms:Kn([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.fog]),vertexShader:Lt.meshbasic_vert,fragmentShader:Lt.meshbasic_frag},lambert:{uniforms:Kn([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,Ye.lights,{emissive:{value:new tt(0)}}]),vertexShader:Lt.meshlambert_vert,fragmentShader:Lt.meshlambert_frag},phong:{uniforms:Kn([Ye.common,Ye.specularmap,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,Ye.lights,{emissive:{value:new tt(0)},specular:{value:new tt(1118481)},shininess:{value:30}}]),vertexShader:Lt.meshphong_vert,fragmentShader:Lt.meshphong_frag},standard:{uniforms:Kn([Ye.common,Ye.envmap,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.roughnessmap,Ye.metalnessmap,Ye.fog,Ye.lights,{emissive:{value:new tt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Lt.meshphysical_vert,fragmentShader:Lt.meshphysical_frag},toon:{uniforms:Kn([Ye.common,Ye.aomap,Ye.lightmap,Ye.emissivemap,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.gradientmap,Ye.fog,Ye.lights,{emissive:{value:new tt(0)}}]),vertexShader:Lt.meshtoon_vert,fragmentShader:Lt.meshtoon_frag},matcap:{uniforms:Kn([Ye.common,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,Ye.fog,{matcap:{value:null}}]),vertexShader:Lt.meshmatcap_vert,fragmentShader:Lt.meshmatcap_frag},points:{uniforms:Kn([Ye.points,Ye.fog]),vertexShader:Lt.points_vert,fragmentShader:Lt.points_frag},dashed:{uniforms:Kn([Ye.common,Ye.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Lt.linedashed_vert,fragmentShader:Lt.linedashed_frag},depth:{uniforms:Kn([Ye.common,Ye.displacementmap]),vertexShader:Lt.depth_vert,fragmentShader:Lt.depth_frag},normal:{uniforms:Kn([Ye.common,Ye.bumpmap,Ye.normalmap,Ye.displacementmap,{opacity:{value:1}}]),vertexShader:Lt.meshnormal_vert,fragmentShader:Lt.meshnormal_frag},sprite:{uniforms:Kn([Ye.sprite,Ye.fog]),vertexShader:Lt.sprite_vert,fragmentShader:Lt.sprite_frag},background:{uniforms:{uvTransform:{value:new Ct},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Lt.background_vert,fragmentShader:Lt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Ct}},vertexShader:Lt.backgroundCube_vert,fragmentShader:Lt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Lt.cube_vert,fragmentShader:Lt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Lt.equirect_vert,fragmentShader:Lt.equirect_frag},distanceRGBA:{uniforms:Kn([Ye.common,Ye.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Lt.distanceRGBA_vert,fragmentShader:Lt.distanceRGBA_frag},shadow:{uniforms:Kn([Ye.lights,Ye.fog,{color:{value:new tt(0)},opacity:{value:1}}]),vertexShader:Lt.shadow_vert,fragmentShader:Lt.shadow_frag}};Gi.physical={uniforms:Kn([Gi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ct},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ct},clearcoatNormalScale:{value:new we(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ct},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ct},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ct},sheen:{value:0},sheenColor:{value:new tt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ct},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ct},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ct},transmissionSamplerSize:{value:new we},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ct},attenuationDistance:{value:0},attenuationColor:{value:new tt(0)},specularColor:{value:new tt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ct},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ct},anisotropyVector:{value:new we},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ct}}]),vertexShader:Lt.meshphysical_vert,fragmentShader:Lt.meshphysical_frag};const Hc={r:0,b:0,g:0},xs=new Ti,wE=new Et;function EE(r,e,t,n,i,s,a){const c=new tt(0);let u=s===!0?0:1,h,f,p=null,m=0,g=null;function y(w){let E=w.isScene===!0?w.background:null;return E&&E.isTexture&&(E=(w.backgroundBlurriness>0?t:e).get(E)),E}function M(w){let E=!1;const T=y(w);T===null?_(c,u):T&&T.isColor&&(_(T,1),E=!0);const N=r.xr.getEnvironmentBlendMode();N==="additive"?n.buffers.color.setClear(0,0,0,1,a):N==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(r.autoClear||E)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function x(w,E){const T=y(E);T&&(T.isCubeTexture||T.mapping===Qo)?(f===void 0&&(f=new fn(new Ks(1,1,1),new di({name:"BackgroundCubeMaterial",uniforms:Zo(Gi.backgroundCube.uniforms),vertexShader:Gi.backgroundCube.vertexShader,fragmentShader:Gi.backgroundCube.fragmentShader,side:ti,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(N,P,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),xs.copy(E.backgroundRotation),xs.x*=-1,xs.y*=-1,xs.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(xs.y*=-1,xs.z*=-1),f.material.uniforms.envMap.value=T,f.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=E.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=E.backgroundIntensity,f.material.uniforms.backgroundRotation.value.setFromMatrix4(wE.makeRotationFromEuler(xs)),f.material.toneMapped=Vt.getTransfer(T.colorSpace)!==jt,(p!==T||m!==T.version||g!==r.toneMapping)&&(f.material.needsUpdate=!0,p=T,m=T.version,g=r.toneMapping),f.layers.enableAll(),w.unshift(f,f.geometry,f.material,0,0,null)):T&&T.isTexture&&(h===void 0&&(h=new fn(new is(2,2),new di({name:"BackgroundMaterial",uniforms:Zo(Gi.background.uniforms),vertexShader:Gi.background.vertexShader,fragmentShader:Gi.background.fragmentShader,side:Pr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=T,h.material.uniforms.backgroundIntensity.value=E.backgroundIntensity,h.material.toneMapped=Vt.getTransfer(T.colorSpace)!==jt,T.matrixAutoUpdate===!0&&T.updateMatrix(),h.material.uniforms.uvTransform.value.copy(T.matrix),(p!==T||m!==T.version||g!==r.toneMapping)&&(h.material.needsUpdate=!0,p=T,m=T.version,g=r.toneMapping),h.layers.enableAll(),w.unshift(h,h.geometry,h.material,0,0,null))}function _(w,E){w.getRGB(Hc,V_(r)),n.buffers.color.setClear(Hc.r,Hc.g,Hc.b,E,a)}return{getClearColor:function(){return c},setClearColor:function(w,E=1){c.set(w),u=E,_(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(w){u=w,_(c,u)},render:M,addToRenderList:x}}function TE(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=m(null);let s=i,a=!1;function c(A,O,K,J,$){let he=!1;const ee=p(J,K,O);s!==ee&&(s=ee,h(s.object)),he=g(A,J,K,$),he&&y(A,J,K,$),$!==null&&e.update($,r.ELEMENT_ARRAY_BUFFER),(he||a)&&(a=!1,T(A,O,K,J),$!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get($).buffer))}function u(){return r.createVertexArray()}function h(A){return r.bindVertexArray(A)}function f(A){return r.deleteVertexArray(A)}function p(A,O,K){const J=K.wireframe===!0;let $=n[A.id];$===void 0&&($={},n[A.id]=$);let he=$[O.id];he===void 0&&(he={},$[O.id]=he);let ee=he[J];return ee===void 0&&(ee=m(u()),he[J]=ee),ee}function m(A){const O=[],K=[],J=[];for(let $=0;$<t;$++)O[$]=0,K[$]=0,J[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:K,attributeDivisors:J,object:A,attributes:{},index:null}}function g(A,O,K,J){const $=s.attributes,he=O.attributes;let ee=0;const Ee=K.getAttributes();for(const z in Ee)if(Ee[z].location>=0){const Q=$[z];let fe=he[z];if(fe===void 0&&(z==="instanceMatrix"&&A.instanceMatrix&&(fe=A.instanceMatrix),z==="instanceColor"&&A.instanceColor&&(fe=A.instanceColor)),Q===void 0||Q.attribute!==fe||fe&&Q.data!==fe.data)return!0;ee++}return s.attributesNum!==ee||s.index!==J}function y(A,O,K,J){const $={},he=O.attributes;let ee=0;const Ee=K.getAttributes();for(const z in Ee)if(Ee[z].location>=0){let Q=he[z];Q===void 0&&(z==="instanceMatrix"&&A.instanceMatrix&&(Q=A.instanceMatrix),z==="instanceColor"&&A.instanceColor&&(Q=A.instanceColor));const fe={};fe.attribute=Q,Q&&Q.data&&(fe.data=Q.data),$[z]=fe,ee++}s.attributes=$,s.attributesNum=ee,s.index=J}function M(){const A=s.newAttributes;for(let O=0,K=A.length;O<K;O++)A[O]=0}function x(A){_(A,0)}function _(A,O){const K=s.newAttributes,J=s.enabledAttributes,$=s.attributeDivisors;K[A]=1,J[A]===0&&(r.enableVertexAttribArray(A),J[A]=1),$[A]!==O&&(r.vertexAttribDivisor(A,O),$[A]=O)}function w(){const A=s.newAttributes,O=s.enabledAttributes;for(let K=0,J=O.length;K<J;K++)O[K]!==A[K]&&(r.disableVertexAttribArray(K),O[K]=0)}function E(A,O,K,J,$,he,ee){ee===!0?r.vertexAttribIPointer(A,O,K,$,he):r.vertexAttribPointer(A,O,K,J,$,he)}function T(A,O,K,J){M();const $=J.attributes,he=K.getAttributes(),ee=O.defaultAttributeValues;for(const Ee in he){const z=he[Ee];if(z.location>=0){let te=$[Ee];if(te===void 0&&(Ee==="instanceMatrix"&&A.instanceMatrix&&(te=A.instanceMatrix),Ee==="instanceColor"&&A.instanceColor&&(te=A.instanceColor)),te!==void 0){const Q=te.normalized,fe=te.itemSize,xe=e.get(te);if(xe===void 0)continue;const ze=xe.buffer,ce=xe.type,be=xe.bytesPerElement,Ae=ce===r.INT||ce===r.UNSIGNED_INT||te.gpuType===gl;if(te.isInterleavedBufferAttribute){const Re=te.data,it=Re.stride,yt=te.offset;if(Re.isInstancedInterleavedBuffer){for(let gt=0;gt<z.locationSize;gt++)_(z.location+gt,Re.meshPerAttribute);A.isInstancedMesh!==!0&&J._maxInstanceCount===void 0&&(J._maxInstanceCount=Re.meshPerAttribute*Re.count)}else for(let gt=0;gt<z.locationSize;gt++)x(z.location+gt);r.bindBuffer(r.ARRAY_BUFFER,ze);for(let gt=0;gt<z.locationSize;gt++)E(z.location+gt,fe/z.locationSize,ce,Q,it*be,(yt+fe/z.locationSize*gt)*be,Ae)}else{if(te.isInstancedBufferAttribute){for(let Re=0;Re<z.locationSize;Re++)_(z.location+Re,te.meshPerAttribute);A.isInstancedMesh!==!0&&J._maxInstanceCount===void 0&&(J._maxInstanceCount=te.meshPerAttribute*te.count)}else for(let Re=0;Re<z.locationSize;Re++)x(z.location+Re);r.bindBuffer(r.ARRAY_BUFFER,ze);for(let Re=0;Re<z.locationSize;Re++)E(z.location+Re,fe/z.locationSize,ce,Q,fe*be,fe/z.locationSize*Re*be,Ae)}}else if(ee!==void 0){const Q=ee[Ee];if(Q!==void 0)switch(Q.length){case 2:r.vertexAttrib2fv(z.location,Q);break;case 3:r.vertexAttrib3fv(z.location,Q);break;case 4:r.vertexAttrib4fv(z.location,Q);break;default:r.vertexAttrib1fv(z.location,Q)}}}}w()}function N(){L();for(const A in n){const O=n[A];for(const K in O){const J=O[K];for(const $ in J)f(J[$].object),delete J[$];delete O[K]}delete n[A]}}function P(A){if(n[A.id]===void 0)return;const O=n[A.id];for(const K in O){const J=O[K];for(const $ in J)f(J[$].object),delete J[$];delete O[K]}delete n[A.id]}function U(A){for(const O in n){const K=n[O];if(K[A.id]===void 0)continue;const J=K[A.id];for(const $ in J)f(J[$].object),delete J[$];delete K[A.id]}}function L(){R(),a=!0,s!==i&&(s=i,h(s.object))}function R(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:L,resetDefaultState:R,dispose:N,releaseStatesOfGeometry:P,releaseStatesOfProgram:U,initAttributes:M,enableAttribute:x,disableUnusedAttributes:w}}function bE(r,e,t){let n;function i(h){n=h}function s(h,f){r.drawArrays(n,h,f),t.update(f,n,1)}function a(h,f,p){p!==0&&(r.drawArraysInstanced(n,h,f,p),t.update(f,n,p))}function c(h,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,h,0,f,0,p);let g=0;for(let y=0;y<p;y++)g+=f[y];t.update(g,n,1)}function u(h,f,p,m){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let y=0;y<h.length;y++)a(h[y],f[y],m[y]);else{g.multiDrawArraysInstancedWEBGL(n,h,0,f,0,m,0,p);let y=0;for(let M=0;M<p;M++)y+=f[M]*m[M];t.update(y,n,1)}}this.setMode=i,this.render=s,this.renderInstances=a,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function AE(r,e,t,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const U=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(U){return!(U!==xn&&n.convert(U)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(U){const L=U===Un&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(U!==fi&&n.convert(U)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&U!==hn&&!L)}function u(U){if(U==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";U="mediump"}return U==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let h=t.precision!==void 0?t.precision:"highp";const f=u(h);f!==h&&(console.warn("THREE.WebGLRenderer:",h,"not supported, using",f,"instead."),h=f);const p=t.logarithmicDepthBuffer===!0,m=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),g=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),y=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),M=r.getParameter(r.MAX_TEXTURE_SIZE),x=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),_=r.getParameter(r.MAX_VERTEX_ATTRIBS),w=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),E=r.getParameter(r.MAX_VARYING_VECTORS),T=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),N=y>0,P=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:a,textureTypeReadable:c,precision:h,logarithmicDepthBuffer:p,reverseDepthBuffer:m,maxTextures:g,maxVertexTextures:y,maxTextureSize:M,maxCubemapSize:x,maxAttributes:_,maxVertexUniforms:w,maxVaryings:E,maxFragmentUniforms:T,vertexTextures:N,maxSamples:P}}function CE(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new Tr,c=new Ct,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||i;return i=m,n=p.length,g},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const y=p.clippingPlanes,M=p.clipIntersection,x=p.clipShadows,_=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const w=s?0:n,E=w*4;let T=_.clippingState||null;u.value=T,T=f(y,m,E,g);for(let N=0;N!==E;++N)T[N]=t[N];_.clippingState=T,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,g,y){const M=p!==null?p.length:0;let x=null;if(M!==0){if(x=u.value,y!==!0||x===null){const _=g+M*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<_)&&(x=new Float32Array(_));for(let E=0,T=g;E!==M;++E,T+=4)a.copy(p[E]).applyMatrix4(w,c),a.normal.toArray(x,T),x[T+3]=a.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,x}}function RE(r){let e=new WeakMap;function t(a,c){return c===Xo?a.mapping=ar:c===ja&&(a.mapping=es),a}function n(a){if(a&&a.isTexture){const c=a.mapping;if(c===Xo||c===ja)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new Cp(u.height);return h.fromEquirectangularTexture(r,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const c=a.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Ir extends xl{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,a=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,a,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const zo=4,fv=[.125,.215,.35,.446,.526,.582],Ds=20,hd=new Ir,dv=new tt;let fd=null,dd=0,pd=0,md=!1;const Ls=(1+Math.sqrt(5))/2,Co=1/Ls,pv=[new B(-Ls,Co,0),new B(Ls,Co,0),new B(-Co,0,Ls),new B(Co,0,Ls),new B(0,Ls,-Co),new B(0,Ls,Co),new B(-1,1,-1),new B(1,1,-1),new B(-1,1,1),new B(1,1,1)];class $d{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){fd=this._renderer.getRenderTarget(),dd=this._renderer.getActiveCubeFace(),pd=this._renderer.getActiveMipmapLevel(),md=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=vv(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=gv(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(fd,dd,pd),this._renderer.xr.enabled=md,e.scissorTest=!1,Vc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ar||e.mapping===es?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),fd=this._renderer.getRenderTarget(),dd=this._renderer.getActiveCubeFace(),pd=this._renderer.getActiveMipmapLevel(),md=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Kt,minFilter:Kt,generateMipmaps:!1,type:Un,format:xn,colorSpace:cr,depthBuffer:!1},i=mv(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=mv(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=IE(s)),this._blurMaterial=PE(s,e,t)}return i}_compileMaterial(e){const t=new fn(this._lodPlanes[0],e);this._renderer.compile(t,hd)}_sceneToCubeUV(e,t,n,i){const c=new yn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(dv),f.toneMapping=sr,f.autoClear=!1;const g=new Lr({name:"PMREM.Background",side:ti,depthWrite:!1,depthTest:!1}),y=new fn(new Ks,g);let M=!1;const x=e.background;x?x.isColor&&(g.color.copy(x),e.background=null,M=!0):(g.color.copy(dv),M=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):w===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const E=this._cubeSize;Vc(i,w*E,_>2?E:0,E,E),f.setRenderTarget(i),M&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ar||e.mapping===es;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=vv()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=gv());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new fn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Vc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(a,hd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=pv[(i-s-1)%pv.length];this._blur(e,s-1,s,a,c)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,c){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new fn(this._lodPlanes[i],h),m=h.uniforms,g=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*Ds-1),M=s/y,x=isFinite(s)?1+Math.floor(f*M):Ds;x>Ds&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Ds}`);const _=[];let w=0;for(let U=0;U<Ds;++U){const L=U/M,R=Math.exp(-L*L/2);_.push(R),U===0?w+=R:U<x&&(w+=2*R)}for(let U=0;U<_.length;U++)_[U]=_[U]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=_,m.latitudinal.value=a==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:E}=this;m.dTheta.value=y,m.mipInt.value=E-n;const T=this._sizeLods[i],N=3*T*(i>E-zo?i-E+zo:0),P=4*(this._cubeSize-T);Vc(t,N,P,3*T,2*T),u.setRenderTarget(t),u.render(p,hd)}}function IE(r){const e=[],t=[],n=[];let i=r;const s=r-zo+1+fv.length;for(let a=0;a<s;a++){const c=Math.pow(2,i);t.push(c);let u=1/c;a>r-zo?u=fv[a-r+zo-1]:a===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,y=6,M=3,x=2,_=1,w=new Float32Array(M*y*g),E=new Float32Array(x*y*g),T=new Float32Array(_*y*g);for(let P=0;P<g;P++){const U=P%3*2/3-1,L=P>2?0:-1,R=[U,L,0,U+2/3,L,0,U+2/3,L+1,0,U,L,0,U+2/3,L+1,0,U,L+1,0];w.set(R,M*y*P),E.set(m,x*y*P);const A=[P,P,P,P,P,P];T.set(A,_*y*P)}const N=new Dt;N.setAttribute("position",new en(w,M)),N.setAttribute("uv",new en(E,x)),N.setAttribute("faceIndex",new en(T,_)),e.push(N),i>zo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function mv(r,e,t){const n=new Ei(r,e,t);return n.texture.mapping=Qo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Vc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function PE(r,e,t){const n=new Float32Array(Ds),i=new B(0,1,0);return new di({name:"SphericalGaussianBlur",defines:{n:Ds,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function gv(){return new di({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function vv(){return new di({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:rr,depthTest:!1,depthWrite:!1})}function Rp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function LE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===Xo||u===ja,f=u===ar||u===es;if(h||f){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new $d(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const g=c.image;return h&&g&&g.height>0||f&&g&&i(g)?(t===null&&(t=new $d(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function DE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Fa("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function UE(r,e,t,n){const i={},s=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const M=m.morphAttributes[y];for(let x=0,_=M.length;x<_;x++)e.remove(M[x])}m.removeEventListener("dispose",a),delete i[m.id];const g=s.get(m);g&&(e.remove(g),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const g=p.morphAttributes;for(const y in g){const M=g[y];for(let x=0,_=M.length;x<_;x++)e.update(M[x],r.ARRAY_BUFFER)}}function h(p){const m=[],g=p.index,y=p.attributes.position;let M=0;if(g!==null){const w=g.array;M=g.version;for(let E=0,T=w.length;E<T;E+=3){const N=w[E+0],P=w[E+1],U=w[E+2];m.push(N,P,P,U,U,N)}}else if(y!==void 0){const w=y.array;M=y.version;for(let E=0,T=w.length/3-1;E<T;E+=3){const N=E+0,P=E+1,U=E+2;m.push(N,P,P,U,U,N)}}else return;const x=new(O_(m)?Ap:bp)(m,1);x.version=M;const _=s.get(p);_&&e.remove(_),s.set(p,x)}function f(p){const m=s.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function NE(r,e,t){let n;function i(m){n=m}let s,a;function c(m){s=m.type,a=m.bytesPerElement}function u(m,g){r.drawElements(n,g,s,m*a),t.update(g,n,1)}function h(m,g,y){y!==0&&(r.drawElementsInstanced(n,g,s,m*a,y),t.update(g,n,y))}function f(m,g,y){if(y===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,g,0,s,m,0,y);let x=0;for(let _=0;_<y;_++)x+=g[_];t.update(x,n,1)}function p(m,g,y,M){if(y===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let _=0;_<m.length;_++)h(m[_]/a,g[_],M[_]);else{x.multiDrawElementsInstancedWEBGL(n,g,0,s,m,0,M,0,y);let _=0;for(let w=0;w<y;w++)_+=g[w]*M[w];t.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f,this.renderMultiDrawInstances=p}function FE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,c){switch(t.calls++,a){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function OE(r,e,t){const n=new WeakMap,i=new Wt;function s(a,c,u){const h=a.morphTargetInfluences,f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let R=function(){U.dispose(),n.delete(c),c.removeEventListener("dispose",R)};m!==void 0&&m.texture.dispose();const g=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],w=c.morphAttributes.color||[];let E=0;g===!0&&(E=1),y===!0&&(E=2),M===!0&&(E=3);let T=c.attributes.position.count*E,N=1;T>e.maxTextureSize&&(N=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const P=new Float32Array(T*N*4*p),U=new vh(P,T,N,p);U.type=hn,U.needsUpdate=!0;const L=E*4;for(let A=0;A<p;A++){const O=x[A],K=_[A],J=w[A],$=T*N*4*A;for(let he=0;he<O.count;he++){const ee=he*L;g===!0&&(i.fromBufferAttribute(O,he),P[$+ee+0]=i.x,P[$+ee+1]=i.y,P[$+ee+2]=i.z,P[$+ee+3]=0),y===!0&&(i.fromBufferAttribute(K,he),P[$+ee+4]=i.x,P[$+ee+5]=i.y,P[$+ee+6]=i.z,P[$+ee+7]=0),M===!0&&(i.fromBufferAttribute(J,he),P[$+ee+8]=i.x,P[$+ee+9]=i.y,P[$+ee+10]=i.z,P[$+ee+11]=J.itemSize===4?i.w:1)}}m={count:p,texture:U,size:new we(T,N)},n.set(c,m),c.addEventListener("dispose",R)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",a.morphTexture,t);else{let g=0;for(let M=0;M<h.length;M++)g+=h[M];const y=c.morphTargetsRelative?1:1-g;u.getUniforms().setValue(r,"morphTargetBaseInfluence",y),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}return{update:s}}function BE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function a(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:a}}class Ip extends $t{constructor(e,t,n,i,s,a,c,u,h,f=Hs){if(f!==Hs&&f!==qs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Hs&&(n=lr),n===void 0&&f===qs&&(n=Ys),super(null,i,s,a,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Fn,this.minFilter=u!==void 0?u:Fn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const Y_=new $t,_v=new Ip(1,1),q_=new vh,Z_=new Tp,J_=new Ml,yv=[],xv=[],Mv=new Float32Array(16),Sv=new Float32Array(9),wv=new Float32Array(4);function $o(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=yv[i];if(s===void 0&&(s=new Float32Array(i),yv[i]=s),e!==0){n.toArray(s,0);for(let a=1,c=0;a!==e;++a)c+=t,r[a].toArray(s,c)}return s}function bn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function An(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function _h(r,e){let t=xv[e];t===void 0&&(t=new Int32Array(e),xv[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function zE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function kE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;r.uniform2fv(this.addr,e),An(t,e)}}function HE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(bn(t,e))return;r.uniform3fv(this.addr,e),An(t,e)}}function VE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;r.uniform4fv(this.addr,e),An(t,e)}}function GE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(bn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),An(t,e)}else{if(bn(t,n))return;wv.set(n),r.uniformMatrix2fv(this.addr,!1,wv),An(t,n)}}function WE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(bn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),An(t,e)}else{if(bn(t,n))return;Sv.set(n),r.uniformMatrix3fv(this.addr,!1,Sv),An(t,n)}}function XE(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(bn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),An(t,e)}else{if(bn(t,n))return;Mv.set(n),r.uniformMatrix4fv(this.addr,!1,Mv),An(t,n)}}function YE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function qE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;r.uniform2iv(this.addr,e),An(t,e)}}function ZE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(bn(t,e))return;r.uniform3iv(this.addr,e),An(t,e)}}function JE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;r.uniform4iv(this.addr,e),An(t,e)}}function jE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function KE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(bn(t,e))return;r.uniform2uiv(this.addr,e),An(t,e)}}function QE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(bn(t,e))return;r.uniform3uiv(this.addr,e),An(t,e)}}function $E(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(bn(t,e))return;r.uniform4uiv(this.addr,e),An(t,e)}}function eT(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);let s;this.type===r.SAMPLER_2D_SHADOW?(_v.compareFunction=wp,s=_v):s=Y_,t.setTexture2D(e||s,i)}function tT(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Z_,i)}function nT(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||J_,i)}function iT(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||q_,i)}function rT(r){switch(r){case 5126:return zE;case 35664:return kE;case 35665:return HE;case 35666:return VE;case 35674:return GE;case 35675:return WE;case 35676:return XE;case 5124:case 35670:return YE;case 35667:case 35671:return qE;case 35668:case 35672:return ZE;case 35669:case 35673:return JE;case 5125:return jE;case 36294:return KE;case 36295:return QE;case 36296:return $E;case 35678:case 36198:case 36298:case 36306:case 35682:return eT;case 35679:case 36299:case 36307:return tT;case 35680:case 36300:case 36308:case 36293:return nT;case 36289:case 36303:case 36311:case 36292:return iT}}function sT(r,e){r.uniform1fv(this.addr,e)}function oT(r,e){const t=$o(e,this.size,2);r.uniform2fv(this.addr,t)}function aT(r,e){const t=$o(e,this.size,3);r.uniform3fv(this.addr,t)}function lT(r,e){const t=$o(e,this.size,4);r.uniform4fv(this.addr,t)}function cT(r,e){const t=$o(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function uT(r,e){const t=$o(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function hT(r,e){const t=$o(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function fT(r,e){r.uniform1iv(this.addr,e)}function dT(r,e){r.uniform2iv(this.addr,e)}function pT(r,e){r.uniform3iv(this.addr,e)}function mT(r,e){r.uniform4iv(this.addr,e)}function gT(r,e){r.uniform1uiv(this.addr,e)}function vT(r,e){r.uniform2uiv(this.addr,e)}function _T(r,e){r.uniform3uiv(this.addr,e)}function yT(r,e){r.uniform4uiv(this.addr,e)}function xT(r,e,t){const n=this.cache,i=e.length,s=_h(t,i);bn(n,s)||(r.uniform1iv(this.addr,s),An(n,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||Y_,s[a])}function MT(r,e,t){const n=this.cache,i=e.length,s=_h(t,i);bn(n,s)||(r.uniform1iv(this.addr,s),An(n,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Z_,s[a])}function ST(r,e,t){const n=this.cache,i=e.length,s=_h(t,i);bn(n,s)||(r.uniform1iv(this.addr,s),An(n,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||J_,s[a])}function wT(r,e,t){const n=this.cache,i=e.length,s=_h(t,i);bn(n,s)||(r.uniform1iv(this.addr,s),An(n,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||q_,s[a])}function ET(r){switch(r){case 5126:return sT;case 35664:return oT;case 35665:return aT;case 35666:return lT;case 35674:return cT;case 35675:return uT;case 35676:return hT;case 5124:case 35670:return fT;case 35667:case 35671:return dT;case 35668:case 35672:return pT;case 35669:case 35673:return mT;case 5125:return gT;case 36294:return vT;case 36295:return _T;case 36296:return yT;case 35678:case 36198:case 36298:case 36306:case 35682:return xT;case 35679:case 36299:case 36307:return MT;case 35680:case 36300:case 36308:case 36293:return ST;case 36289:case 36303:case 36311:case 36292:return wT}}class TT{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=rT(t.type)}}class bT{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=ET(t.type)}}class AT{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const gd=/(\w+)(\])?(\[|\.)?/g;function Ev(r,e){r.seq.push(e),r.map[e.id]=e}function CT(r,e,t){const n=r.name,i=n.length;for(gd.lastIndex=0;;){const s=gd.exec(n),a=gd.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&a+2===i){Ev(t,h===void 0?new TT(c,r,e):new bT(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new AT(c),Ev(t,p)),t=p}}}class Mu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);CT(s,a,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,a=t.length;s!==a;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Tv(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const RT=37297;let IT=0;function PT(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const c=a+1;n.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return n.join(`
`)}const bv=new Ct;function LT(r){Vt._getMatrix(bv,Vt.workingColorSpace,r);const e=`mat3( ${bv.elements.map(t=>t.toFixed(4))} )`;switch(Vt.getTransfer(r)){case yl:return[e,"LinearTransferOETF"];case jt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function Av(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+PT(r.getShaderSource(e),a)}else return i}function DT(r,e){const t=LT(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function UT(r,e){let t;switch(e){case g_:t="Linear";break;case v_:t="Reinhard";break;case __:t="Cineon";break;case dp:t="ACESFilmic";break;case x_:t="AgX";break;case M_:t="Neutral";break;case y_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Gc=new B;function NT(){Vt.getLuminanceCoefficients(Gc);const r=Gc.x.toFixed(4),e=Gc.y.toFixed(4),t=Gc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function FT(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ba).join(`
`)}function OT(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function BT(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:c}}return t}function Ba(r){return r!==""}function Cv(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Rv(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const zT=/^[ \t]*#include +<([\w\d./]+)>/gm;function ep(r){return r.replace(zT,HT)}const kT=new Map;function HT(r,e){let t=Lt[e];if(t===void 0){const n=kT.get(e);if(n!==void 0)t=Lt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return ep(t)}const VT=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Iv(r){return r.replace(VT,GT)}function GT(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Pv(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function WT(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===ch?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===za?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Vi&&(e="SHADOWMAP_TYPE_VSM"),e}function XT(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case ar:case es:e="ENVMAP_TYPE_CUBE";break;case Qo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function YT(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case es:e="ENVMAP_MODE_REFRACTION";break}return e}function qT(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case ml:e="ENVMAP_BLENDING_MULTIPLY";break;case p_:e="ENVMAP_BLENDING_MIX";break;case m_:e="ENVMAP_BLENDING_ADD";break}return e}function ZT(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function JT(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=WT(t),h=XT(t),f=YT(t),p=qT(t),m=ZT(t),g=FT(t),y=OT(s),M=i.createProgram();let x,_,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Ba).join(`
`),x.length>0&&(x+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Ba).join(`
`),_.length>0&&(_+=`
`)):(x=[Pv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ba).join(`
`),_=[Pv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==sr?"#define TONE_MAPPING":"",t.toneMapping!==sr?Lt.tonemapping_pars_fragment:"",t.toneMapping!==sr?UT("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Lt.colorspace_pars_fragment,DT("linearToOutputTexel",t.outputColorSpace),NT(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ba).join(`
`)),a=ep(a),a=Cv(a,t),a=Rv(a,t),c=ep(c),c=Cv(c,t),c=Rv(c,t),a=Iv(a),c=Iv(c),t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,x=[g,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,_=["#define varying in",t.glslVersion===Qd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Qd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const E=w+x+a,T=w+_+c,N=Tv(i,i.VERTEX_SHADER,E),P=Tv(i,i.FRAGMENT_SHADER,T);i.attachShader(M,N),i.attachShader(M,P),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function U(O){if(r.debug.checkShaderErrors){const K=i.getProgramInfoLog(M).trim(),J=i.getShaderInfoLog(N).trim(),$=i.getShaderInfoLog(P).trim();let he=!0,ee=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(he=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,N,P);else{const Ee=Av(i,N,"vertex"),z=Av(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Material Name: `+O.name+`
Material Type: `+O.type+`

Program Info Log: `+K+`
`+Ee+`
`+z)}else K!==""?console.warn("THREE.WebGLProgram: Program Info Log:",K):(J===""||$==="")&&(ee=!1);ee&&(O.diagnostics={runnable:he,programLog:K,vertexShader:{log:J,prefix:x},fragmentShader:{log:$,prefix:_}})}i.deleteShader(N),i.deleteShader(P),L=new Mu(i,M),R=BT(i,M)}let L;this.getUniforms=function(){return L===void 0&&U(this),L};let R;this.getAttributes=function(){return R===void 0&&U(this),R};let A=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return A===!1&&(A=i.getProgramParameter(M,RT)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=IT++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=N,this.fragmentShader=P,this}let jT=0;class KT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new QT(e),t.set(e,n)),n}}class QT{constructor(e){this.id=jT++,this.code=e,this.usedTimes=0}}function $T(r,e,t,n,i,s,a){const c=new Gs,u=new KT,h=new Set,f=[],p=i.logarithmicDepthBuffer,m=i.vertexTextures;let g=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(R){return h.add(R),R===0?"uv":`uv${R}`}function x(R,A,O,K,J){const $=K.fog,he=J.geometry,ee=R.isMeshStandardMaterial?K.environment:null,Ee=(R.isMeshStandardMaterial?t:e).get(R.envMap||ee),z=Ee&&Ee.mapping===Qo?Ee.image.height:null,te=y[R.type];R.precision!==null&&(g=i.getMaxPrecision(R.precision),g!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",g,"instead."));const Q=he.morphAttributes.position||he.morphAttributes.normal||he.morphAttributes.color,fe=Q!==void 0?Q.length:0;let xe=0;he.morphAttributes.position!==void 0&&(xe=1),he.morphAttributes.normal!==void 0&&(xe=2),he.morphAttributes.color!==void 0&&(xe=3);let ze,ce,be,Ae;if(te){const Ut=Gi[te];ze=Ut.vertexShader,ce=Ut.fragmentShader}else ze=R.vertexShader,ce=R.fragmentShader,u.update(R),be=u.getVertexShaderID(R),Ae=u.getFragmentShaderID(R);const Re=r.getRenderTarget(),it=r.state.buffers.depth.getReversed(),yt=J.isInstancedMesh===!0,gt=J.isBatchedMesh===!0,St=!!R.map,Te=!!R.matcap,Ie=!!Ee,W=!!R.aoMap,lt=!!R.lightMap,Ue=!!R.bumpMap,je=!!R.normalMap,ke=!!R.displacementMap,_t=!!R.emissiveMap,Xe=!!R.metalnessMap,k=!!R.roughnessMap,D=R.anisotropy>0,se=R.clearcoat>0,ve=R.dispersion>0,Ce=R.iridescence>0,ye=R.sheen>0,rt=R.transmission>0,Ge=D&&!!R.anisotropyMap,qe=se&&!!R.clearcoatMap,Rt=se&&!!R.clearcoatNormalMap,Ne=se&&!!R.clearcoatRoughnessMap,et=Ce&&!!R.iridescenceMap,ht=Ce&&!!R.iridescenceThicknessMap,ot=ye&&!!R.sheenColorMap,Ke=ye&&!!R.sheenRoughnessMap,j=!!R.specularMap,me=!!R.specularColorMap,Fe=!!R.specularIntensityMap,q=rt&&!!R.transmissionMap,oe=rt&&!!R.thicknessMap,de=!!R.gradientMap,Me=!!R.alphaMap,Ze=R.alphaTest>0,We=!!R.alphaHash,vt=!!R.extensions;let kt=sr;R.toneMapped&&(Re===null||Re.isXRRenderTarget===!0)&&(kt=r.toneMapping);const tn={shaderID:te,shaderType:R.type,shaderName:R.name,vertexShader:ze,fragmentShader:ce,defines:R.defines,customVertexShaderID:be,customFragmentShaderID:Ae,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:g,batching:gt,batchingColor:gt&&J._colorsTexture!==null,instancing:yt,instancingColor:yt&&J.instanceColor!==null,instancingMorph:yt&&J.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:Re===null?r.outputColorSpace:Re.isXRRenderTarget===!0?Re.texture.colorSpace:cr,alphaToCoverage:!!R.alphaToCoverage,map:St,matcap:Te,envMap:Ie,envMapMode:Ie&&Ee.mapping,envMapCubeUVHeight:z,aoMap:W,lightMap:lt,bumpMap:Ue,normalMap:je,displacementMap:m&&ke,emissiveMap:_t,normalMapObjectSpace:je&&R.normalMapType===C_,normalMapTangentSpace:je&&R.normalMapType===ns,metalnessMap:Xe,roughnessMap:k,anisotropy:D,anisotropyMap:Ge,clearcoat:se,clearcoatMap:qe,clearcoatNormalMap:Rt,clearcoatRoughnessMap:Ne,dispersion:ve,iridescence:Ce,iridescenceMap:et,iridescenceThicknessMap:ht,sheen:ye,sheenColorMap:ot,sheenRoughnessMap:Ke,specularMap:j,specularColorMap:me,specularIntensityMap:Fe,transmission:rt,transmissionMap:q,thicknessMap:oe,gradientMap:de,opaque:R.transparent===!1&&R.blending===ks&&R.alphaToCoverage===!1,alphaMap:Me,alphaTest:Ze,alphaHash:We,combine:R.combine,mapUv:St&&M(R.map.channel),aoMapUv:W&&M(R.aoMap.channel),lightMapUv:lt&&M(R.lightMap.channel),bumpMapUv:Ue&&M(R.bumpMap.channel),normalMapUv:je&&M(R.normalMap.channel),displacementMapUv:ke&&M(R.displacementMap.channel),emissiveMapUv:_t&&M(R.emissiveMap.channel),metalnessMapUv:Xe&&M(R.metalnessMap.channel),roughnessMapUv:k&&M(R.roughnessMap.channel),anisotropyMapUv:Ge&&M(R.anisotropyMap.channel),clearcoatMapUv:qe&&M(R.clearcoatMap.channel),clearcoatNormalMapUv:Rt&&M(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Ne&&M(R.clearcoatRoughnessMap.channel),iridescenceMapUv:et&&M(R.iridescenceMap.channel),iridescenceThicknessMapUv:ht&&M(R.iridescenceThicknessMap.channel),sheenColorMapUv:ot&&M(R.sheenColorMap.channel),sheenRoughnessMapUv:Ke&&M(R.sheenRoughnessMap.channel),specularMapUv:j&&M(R.specularMap.channel),specularColorMapUv:me&&M(R.specularColorMap.channel),specularIntensityMapUv:Fe&&M(R.specularIntensityMap.channel),transmissionMapUv:q&&M(R.transmissionMap.channel),thicknessMapUv:oe&&M(R.thicknessMap.channel),alphaMapUv:Me&&M(R.alphaMap.channel),vertexTangents:!!he.attributes.tangent&&(je||D),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!he.attributes.color&&he.attributes.color.itemSize===4,pointsUvs:J.isPoints===!0&&!!he.attributes.uv&&(St||Me),fog:!!$,useFog:R.fog===!0,fogExp2:!!$&&$.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:p,reverseDepthBuffer:it,skinning:J.isSkinnedMesh===!0,morphTargets:he.morphAttributes.position!==void 0,morphNormals:he.morphAttributes.normal!==void 0,morphColors:he.morphAttributes.color!==void 0,morphTargetsCount:fe,morphTextureStride:xe,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numLightProbes:A.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&O.length>0,shadowMapType:r.shadowMap.type,toneMapping:kt,decodeVideoTexture:St&&R.map.isVideoTexture===!0&&Vt.getTransfer(R.map.colorSpace)===jt,decodeVideoTextureEmissive:_t&&R.emissiveMap.isVideoTexture===!0&&Vt.getTransfer(R.emissiveMap.colorSpace)===jt,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Wi,flipSided:R.side===ti,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:vt&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(vt&&R.extensions.multiDraw===!0||gt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return tn.vertexUv1s=h.has(1),tn.vertexUv2s=h.has(2),tn.vertexUv3s=h.has(3),h.clear(),tn}function _(R){const A=[];if(R.shaderID?A.push(R.shaderID):(A.push(R.customVertexShaderID),A.push(R.customFragmentShaderID)),R.defines!==void 0)for(const O in R.defines)A.push(O),A.push(R.defines[O]);return R.isRawShaderMaterial===!1&&(w(A,R),E(A,R),A.push(r.outputColorSpace)),A.push(R.customProgramCacheKey),A.join()}function w(R,A){R.push(A.precision),R.push(A.outputColorSpace),R.push(A.envMapMode),R.push(A.envMapCubeUVHeight),R.push(A.mapUv),R.push(A.alphaMapUv),R.push(A.lightMapUv),R.push(A.aoMapUv),R.push(A.bumpMapUv),R.push(A.normalMapUv),R.push(A.displacementMapUv),R.push(A.emissiveMapUv),R.push(A.metalnessMapUv),R.push(A.roughnessMapUv),R.push(A.anisotropyMapUv),R.push(A.clearcoatMapUv),R.push(A.clearcoatNormalMapUv),R.push(A.clearcoatRoughnessMapUv),R.push(A.iridescenceMapUv),R.push(A.iridescenceThicknessMapUv),R.push(A.sheenColorMapUv),R.push(A.sheenRoughnessMapUv),R.push(A.specularMapUv),R.push(A.specularColorMapUv),R.push(A.specularIntensityMapUv),R.push(A.transmissionMapUv),R.push(A.thicknessMapUv),R.push(A.combine),R.push(A.fogExp2),R.push(A.sizeAttenuation),R.push(A.morphTargetsCount),R.push(A.morphAttributeCount),R.push(A.numDirLights),R.push(A.numPointLights),R.push(A.numSpotLights),R.push(A.numSpotLightMaps),R.push(A.numHemiLights),R.push(A.numRectAreaLights),R.push(A.numDirLightShadows),R.push(A.numPointLightShadows),R.push(A.numSpotLightShadows),R.push(A.numSpotLightShadowsWithMaps),R.push(A.numLightProbes),R.push(A.shadowMapType),R.push(A.toneMapping),R.push(A.numClippingPlanes),R.push(A.numClipIntersection),R.push(A.depthPacking)}function E(R,A){c.disableAll(),A.supportsVertexTextures&&c.enable(0),A.instancing&&c.enable(1),A.instancingColor&&c.enable(2),A.instancingMorph&&c.enable(3),A.matcap&&c.enable(4),A.envMap&&c.enable(5),A.normalMapObjectSpace&&c.enable(6),A.normalMapTangentSpace&&c.enable(7),A.clearcoat&&c.enable(8),A.iridescence&&c.enable(9),A.alphaTest&&c.enable(10),A.vertexColors&&c.enable(11),A.vertexAlphas&&c.enable(12),A.vertexUv1s&&c.enable(13),A.vertexUv2s&&c.enable(14),A.vertexUv3s&&c.enable(15),A.vertexTangents&&c.enable(16),A.anisotropy&&c.enable(17),A.alphaHash&&c.enable(18),A.batching&&c.enable(19),A.dispersion&&c.enable(20),A.batchingColor&&c.enable(21),R.push(c.mask),c.disableAll(),A.fog&&c.enable(0),A.useFog&&c.enable(1),A.flatShading&&c.enable(2),A.logarithmicDepthBuffer&&c.enable(3),A.reverseDepthBuffer&&c.enable(4),A.skinning&&c.enable(5),A.morphTargets&&c.enable(6),A.morphNormals&&c.enable(7),A.morphColors&&c.enable(8),A.premultipliedAlpha&&c.enable(9),A.shadowMapEnabled&&c.enable(10),A.doubleSided&&c.enable(11),A.flipSided&&c.enable(12),A.useDepthPacking&&c.enable(13),A.dithering&&c.enable(14),A.transmission&&c.enable(15),A.sheen&&c.enable(16),A.opaque&&c.enable(17),A.pointsUvs&&c.enable(18),A.decodeVideoTexture&&c.enable(19),A.decodeVideoTextureEmissive&&c.enable(20),A.alphaToCoverage&&c.enable(21),R.push(c.mask)}function T(R){const A=y[R.type];let O;if(A){const K=Gi[A];O=G_.clone(K.uniforms)}else O=R.uniforms;return O}function N(R,A){let O;for(let K=0,J=f.length;K<J;K++){const $=f[K];if($.cacheKey===A){O=$,++O.usedTimes;break}}return O===void 0&&(O=new JT(r,A,R,s),f.push(O)),O}function P(R){if(--R.usedTimes===0){const A=f.indexOf(R);f[A]=f[f.length-1],f.pop(),R.destroy()}}function U(R){u.remove(R)}function L(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:T,acquireProgram:N,releaseProgram:P,releaseShaderCache:U,programs:f,dispose:L}}function eb(){let r=new WeakMap;function e(a){return r.has(a)}function t(a){let c=r.get(a);return c===void 0&&(c={},r.set(a,c)),c}function n(a){r.delete(a)}function i(a,c,u){r.get(a)[c]=u}function s(){r=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:s}}function tb(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Lv(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Dv(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,g,y,M,x){let _=r[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:g,groupOrder:y,renderOrder:p.renderOrder,z:M,group:x},r[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=g,_.groupOrder=y,_.renderOrder=p.renderOrder,_.z=M,_.group=x),e++,_}function c(p,m,g,y,M,x){const _=a(p,m,g,y,M,x);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function u(p,m,g,y,M,x){const _=a(p,m,g,y,M,x);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||tb),n.length>1&&n.sort(m||Lv),i.length>1&&i.sort(m||Lv)}function f(){for(let p=e,m=r.length;p<m;p++){const g=r[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function nb(){let r=new WeakMap;function e(n,i){const s=r.get(n);let a;return s===void 0?(a=new Dv,r.set(n,[a])):i>=s.length?(a=new Dv,s.push(a)):a=s[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function ib(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new B,color:new tt};break;case"SpotLight":t={position:new B,direction:new B,color:new tt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new B,color:new tt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new B,skyColor:new tt,groundColor:new tt};break;case"RectAreaLight":t={color:new tt,position:new B,halfWidth:new B,halfHeight:new B};break}return r[e.id]=t,t}}}function rb(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new we};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new we};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new we,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let sb=0;function ob(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function ab(r){const e=new ib,t=rb(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new B);const i=new B,s=new Et,a=new Et;function c(h){let f=0,p=0,m=0;for(let R=0;R<9;R++)n.probe[R].set(0,0,0);let g=0,y=0,M=0,x=0,_=0,w=0,E=0,T=0,N=0,P=0,U=0;h.sort(ob);for(let R=0,A=h.length;R<A;R++){const O=h[R],K=O.color,J=O.intensity,$=O.distance,he=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)f+=K.r*J,p+=K.g*J,m+=K.b*J;else if(O.isLightProbe){for(let ee=0;ee<9;ee++)n.probe[ee].addScaledVector(O.sh.coefficients[ee],J);U++}else if(O.isDirectionalLight){const ee=e.get(O);if(ee.color.copy(O.color).multiplyScalar(O.intensity),O.castShadow){const Ee=O.shadow,z=t.get(O);z.shadowIntensity=Ee.intensity,z.shadowBias=Ee.bias,z.shadowNormalBias=Ee.normalBias,z.shadowRadius=Ee.radius,z.shadowMapSize=Ee.mapSize,n.directionalShadow[g]=z,n.directionalShadowMap[g]=he,n.directionalShadowMatrix[g]=O.shadow.matrix,w++}n.directional[g]=ee,g++}else if(O.isSpotLight){const ee=e.get(O);ee.position.setFromMatrixPosition(O.matrixWorld),ee.color.copy(K).multiplyScalar(J),ee.distance=$,ee.coneCos=Math.cos(O.angle),ee.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),ee.decay=O.decay,n.spot[M]=ee;const Ee=O.shadow;if(O.map&&(n.spotLightMap[N]=O.map,N++,Ee.updateMatrices(O),O.castShadow&&P++),n.spotLightMatrix[M]=Ee.matrix,O.castShadow){const z=t.get(O);z.shadowIntensity=Ee.intensity,z.shadowBias=Ee.bias,z.shadowNormalBias=Ee.normalBias,z.shadowRadius=Ee.radius,z.shadowMapSize=Ee.mapSize,n.spotShadow[M]=z,n.spotShadowMap[M]=he,T++}M++}else if(O.isRectAreaLight){const ee=e.get(O);ee.color.copy(K).multiplyScalar(J),ee.halfWidth.set(O.width*.5,0,0),ee.halfHeight.set(0,O.height*.5,0),n.rectArea[x]=ee,x++}else if(O.isPointLight){const ee=e.get(O);if(ee.color.copy(O.color).multiplyScalar(O.intensity),ee.distance=O.distance,ee.decay=O.decay,O.castShadow){const Ee=O.shadow,z=t.get(O);z.shadowIntensity=Ee.intensity,z.shadowBias=Ee.bias,z.shadowNormalBias=Ee.normalBias,z.shadowRadius=Ee.radius,z.shadowMapSize=Ee.mapSize,z.shadowCameraNear=Ee.camera.near,z.shadowCameraFar=Ee.camera.far,n.pointShadow[y]=z,n.pointShadowMap[y]=he,n.pointShadowMatrix[y]=O.shadow.matrix,E++}n.point[y]=ee,y++}else if(O.isHemisphereLight){const ee=e.get(O);ee.skyColor.copy(O.color).multiplyScalar(J),ee.groundColor.copy(O.groundColor).multiplyScalar(J),n.hemi[_]=ee,_++}}x>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ye.LTC_FLOAT_1,n.rectAreaLTC2=Ye.LTC_FLOAT_2):(n.rectAreaLTC1=Ye.LTC_HALF_1,n.rectAreaLTC2=Ye.LTC_HALF_2)),n.ambient[0]=f,n.ambient[1]=p,n.ambient[2]=m;const L=n.hash;(L.directionalLength!==g||L.pointLength!==y||L.spotLength!==M||L.rectAreaLength!==x||L.hemiLength!==_||L.numDirectionalShadows!==w||L.numPointShadows!==E||L.numSpotShadows!==T||L.numSpotMaps!==N||L.numLightProbes!==U)&&(n.directional.length=g,n.spot.length=M,n.rectArea.length=x,n.point.length=y,n.hemi.length=_,n.directionalShadow.length=w,n.directionalShadowMap.length=w,n.pointShadow.length=E,n.pointShadowMap.length=E,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=w,n.pointShadowMatrix.length=E,n.spotLightMatrix.length=T+N-P,n.spotLightMap.length=N,n.numSpotLightShadowsWithMaps=P,n.numLightProbes=U,L.directionalLength=g,L.pointLength=y,L.spotLength=M,L.rectAreaLength=x,L.hemiLength=_,L.numDirectionalShadows=w,L.numPointShadows=E,L.numSpotShadows=T,L.numSpotMaps=N,L.numLightProbes=U,n.version=sb++)}function u(h,f){let p=0,m=0,g=0,y=0,M=0;const x=f.matrixWorldInverse;for(let _=0,w=h.length;_<w;_++){const E=h[_];if(E.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(E.matrixWorld),i.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),p++}else if(E.isSpotLight){const T=n.spot[g];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(x),T.direction.setFromMatrixPosition(E.matrixWorld),i.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),g++}else if(E.isRectAreaLight){const T=n.rectArea[y];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(x),a.identity(),s.copy(E.matrixWorld),s.premultiply(x),a.extractRotation(s),T.halfWidth.set(E.width*.5,0,0),T.halfHeight.set(0,E.height*.5,0),T.halfWidth.applyMatrix4(a),T.halfHeight.applyMatrix4(a),y++}else if(E.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(x),m++}else if(E.isHemisphereLight){const T=n.hemi[M];T.direction.setFromMatrixPosition(E.matrixWorld),T.direction.transformDirection(x),M++}}}return{setup:c,setupView:u,state:n}}function Uv(r){const e=new ab(r),t=[],n=[];function i(f){h.camera=f,t.length=0,n.length=0}function s(f){t.push(f)}function a(f){n.push(f)}function c(){e.setup(t)}function u(f){e.setupView(t,f)}const h={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:h,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:a}}function lb(r){let e=new WeakMap;function t(i,s=0){const a=e.get(i);let c;return a===void 0?(c=new Uv(r),e.set(i,[c])):s>=a.length?(c=new Uv(r),a.push(c)):c=a[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class Pp extends Yn{static get type(){return"MeshDepthMaterial"}constructor(e){super(),this.isMeshDepthMaterial=!0,this.depthPacking=b_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Lp extends Yn{static get type(){return"MeshDistanceMaterial"}constructor(e){super(),this.isMeshDistanceMaterial=!0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const cb=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,ub=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function hb(r,e,t){let n=new Sl;const i=new we,s=new we,a=new Wt,c=new Pp({depthPacking:A_}),u=new Lp,h={},f=t.maxTextureSize,p={[Pr]:ti,[ti]:Pr,[Wi]:Wi},m=new di({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new we},radius:{value:4}},vertexShader:cb,fragmentShader:ub}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const y=new Dt;y.setAttribute("position",new en(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new fn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ch;let _=this.type;this.render=function(P,U,L){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||P.length===0)return;const R=r.getRenderTarget(),A=r.getActiveCubeFace(),O=r.getActiveMipmapLevel(),K=r.state;K.setBlending(rr),K.buffers.color.setClear(1,1,1,1),K.buffers.depth.setTest(!0),K.setScissorTest(!1);const J=_!==Vi&&this.type===Vi,$=_===Vi&&this.type!==Vi;for(let he=0,ee=P.length;he<ee;he++){const Ee=P[he],z=Ee.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",Ee,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;i.copy(z.mapSize);const te=z.getFrameExtents();if(i.multiply(te),s.copy(z.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/te.x),i.x=s.x*te.x,z.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/te.y),i.y=s.y*te.y,z.mapSize.y=s.y)),z.map===null||J===!0||$===!0){const fe=this.type!==Vi?{minFilter:Fn,magFilter:Fn}:{};z.map!==null&&z.map.dispose(),z.map=new Ei(i.x,i.y,fe),z.map.texture.name=Ee.name+".shadowMap",z.camera.updateProjectionMatrix()}r.setRenderTarget(z.map),r.clear();const Q=z.getViewportCount();for(let fe=0;fe<Q;fe++){const xe=z.getViewport(fe);a.set(s.x*xe.x,s.y*xe.y,s.x*xe.z,s.y*xe.w),K.viewport(a),z.updateMatrices(Ee,fe),n=z.getFrustum(),T(U,L,z.camera,Ee,this.type)}z.isPointLightShadow!==!0&&this.type===Vi&&w(z,L),z.needsUpdate=!1}_=this.type,x.needsUpdate=!1,r.setRenderTarget(R,A,O)};function w(P,U){const L=e.update(M);m.defines.VSM_SAMPLES!==P.blurSamples&&(m.defines.VSM_SAMPLES=P.blurSamples,g.defines.VSM_SAMPLES=P.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new Ei(i.x,i.y)),m.uniforms.shadow_pass.value=P.map.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,r.setRenderTarget(P.mapPass),r.clear(),r.renderBufferDirect(U,null,L,m,M,null),g.uniforms.shadow_pass.value=P.mapPass.texture,g.uniforms.resolution.value=P.mapSize,g.uniforms.radius.value=P.radius,r.setRenderTarget(P.map),r.clear(),r.renderBufferDirect(U,null,L,g,M,null)}function E(P,U,L,R){let A=null;const O=L.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(O!==void 0)A=O;else if(A=L.isPointLight===!0?u:c,r.localClippingEnabled&&U.clipShadows===!0&&Array.isArray(U.clippingPlanes)&&U.clippingPlanes.length!==0||U.displacementMap&&U.displacementScale!==0||U.alphaMap&&U.alphaTest>0||U.map&&U.alphaTest>0){const K=A.uuid,J=U.uuid;let $=h[K];$===void 0&&($={},h[K]=$);let he=$[J];he===void 0&&(he=A.clone(),$[J]=he,U.addEventListener("dispose",N)),A=he}if(A.visible=U.visible,A.wireframe=U.wireframe,R===Vi?A.side=U.shadowSide!==null?U.shadowSide:U.side:A.side=U.shadowSide!==null?U.shadowSide:p[U.side],A.alphaMap=U.alphaMap,A.alphaTest=U.alphaTest,A.map=U.map,A.clipShadows=U.clipShadows,A.clippingPlanes=U.clippingPlanes,A.clipIntersection=U.clipIntersection,A.displacementMap=U.displacementMap,A.displacementScale=U.displacementScale,A.displacementBias=U.displacementBias,A.wireframeLinewidth=U.wireframeLinewidth,A.linewidth=U.linewidth,L.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const K=r.properties.get(A);K.light=L}return A}function T(P,U,L,R,A){if(P.visible===!1)return;if(P.layers.test(U.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&A===Vi)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,P.matrixWorld);const J=e.update(P),$=P.material;if(Array.isArray($)){const he=J.groups;for(let ee=0,Ee=he.length;ee<Ee;ee++){const z=he[ee],te=$[z.materialIndex];if(te&&te.visible){const Q=E(P,te,R,A);P.onBeforeShadow(r,P,U,L,J,Q,z),r.renderBufferDirect(L,null,J,Q,P,z),P.onAfterShadow(r,P,U,L,J,Q,z)}}}else if($.visible){const he=E(P,$,R,A);P.onBeforeShadow(r,P,U,L,J,he,null),r.renderBufferDirect(L,null,J,he,P,null),P.onAfterShadow(r,P,U,L,J,he,null)}}const K=P.children;for(let J=0,$=K.length;J<$;J++)T(K[J],U,L,R,A)}function N(P){P.target.removeEventListener("dispose",N);for(const L in h){const R=h[L],A=P.target.uuid;A in R&&(R[A].dispose(),delete R[A])}}}const fb={[Tu]:bu,[Au]:Iu,[Cu]:Pu,[Xs]:Ru,[bu]:Tu,[Iu]:Au,[Pu]:Cu,[Ru]:Xs};function db(r,e){function t(){let q=!1;const oe=new Wt;let de=null;const Me=new Wt(0,0,0,0);return{setMask:function(Ze){de!==Ze&&!q&&(r.colorMask(Ze,Ze,Ze,Ze),de=Ze)},setLocked:function(Ze){q=Ze},setClear:function(Ze,We,vt,kt,tn){tn===!0&&(Ze*=kt,We*=kt,vt*=kt),oe.set(Ze,We,vt,kt),Me.equals(oe)===!1&&(r.clearColor(Ze,We,vt,kt),Me.copy(oe))},reset:function(){q=!1,de=null,Me.set(-1,0,0,0)}}}function n(){let q=!1,oe=!1,de=null,Me=null,Ze=null;return{setReversed:function(We){if(oe!==We){const vt=e.get("EXT_clip_control");oe?vt.clipControlEXT(vt.LOWER_LEFT_EXT,vt.ZERO_TO_ONE_EXT):vt.clipControlEXT(vt.LOWER_LEFT_EXT,vt.NEGATIVE_ONE_TO_ONE_EXT);const kt=Ze;Ze=null,this.setClear(kt)}oe=We},getReversed:function(){return oe},setTest:function(We){We?Re(r.DEPTH_TEST):it(r.DEPTH_TEST)},setMask:function(We){de!==We&&!q&&(r.depthMask(We),de=We)},setFunc:function(We){if(oe&&(We=fb[We]),Me!==We){switch(We){case Tu:r.depthFunc(r.NEVER);break;case bu:r.depthFunc(r.ALWAYS);break;case Au:r.depthFunc(r.LESS);break;case Xs:r.depthFunc(r.LEQUAL);break;case Cu:r.depthFunc(r.EQUAL);break;case Ru:r.depthFunc(r.GEQUAL);break;case Iu:r.depthFunc(r.GREATER);break;case Pu:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Me=We}},setLocked:function(We){q=We},setClear:function(We){Ze!==We&&(oe&&(We=1-We),r.clearDepth(We),Ze=We)},reset:function(){q=!1,de=null,Me=null,Ze=null,oe=!1}}}function i(){let q=!1,oe=null,de=null,Me=null,Ze=null,We=null,vt=null,kt=null,tn=null;return{setTest:function(Ut){q||(Ut?Re(r.STENCIL_TEST):it(r.STENCIL_TEST))},setMask:function(Ut){oe!==Ut&&!q&&(r.stencilMask(Ut),oe=Ut)},setFunc:function(Ut,dn,Cn){(de!==Ut||Me!==dn||Ze!==Cn)&&(r.stencilFunc(Ut,dn,Cn),de=Ut,Me=dn,Ze=Cn)},setOp:function(Ut,dn,Cn){(We!==Ut||vt!==dn||kt!==Cn)&&(r.stencilOp(Ut,dn,Cn),We=Ut,vt=dn,kt=Cn)},setLocked:function(Ut){q=Ut},setClear:function(Ut){tn!==Ut&&(r.clearStencil(Ut),tn=Ut)},reset:function(){q=!1,oe=null,de=null,Me=null,Ze=null,We=null,vt=null,kt=null,tn=null}}}const s=new t,a=new n,c=new i,u=new WeakMap,h=new WeakMap;let f={},p={},m=new WeakMap,g=[],y=null,M=!1,x=null,_=null,w=null,E=null,T=null,N=null,P=null,U=new tt(0,0,0),L=0,R=!1,A=null,O=null,K=null,J=null,$=null;const he=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ee=!1,Ee=0;const z=r.getParameter(r.VERSION);z.indexOf("WebGL")!==-1?(Ee=parseFloat(/^WebGL (\d)/.exec(z)[1]),ee=Ee>=1):z.indexOf("OpenGL ES")!==-1&&(Ee=parseFloat(/^OpenGL ES (\d)/.exec(z)[1]),ee=Ee>=2);let te=null,Q={};const fe=r.getParameter(r.SCISSOR_BOX),xe=r.getParameter(r.VIEWPORT),ze=new Wt().fromArray(fe),ce=new Wt().fromArray(xe);function be(q,oe,de,Me){const Ze=new Uint8Array(4),We=r.createTexture();r.bindTexture(q,We),r.texParameteri(q,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(q,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let vt=0;vt<de;vt++)q===r.TEXTURE_3D||q===r.TEXTURE_2D_ARRAY?r.texImage3D(oe,0,r.RGBA,1,1,Me,0,r.RGBA,r.UNSIGNED_BYTE,Ze):r.texImage2D(oe+vt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ze);return We}const Ae={};Ae[r.TEXTURE_2D]=be(r.TEXTURE_2D,r.TEXTURE_2D,1),Ae[r.TEXTURE_CUBE_MAP]=be(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Ae[r.TEXTURE_2D_ARRAY]=be(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ae[r.TEXTURE_3D]=be(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),a.setClear(1),c.setClear(0),Re(r.DEPTH_TEST),a.setFunc(Xs),Ue(!1),je(Xd),Re(r.CULL_FACE),W(rr);function Re(q){f[q]!==!0&&(r.enable(q),f[q]=!0)}function it(q){f[q]!==!1&&(r.disable(q),f[q]=!1)}function yt(q,oe){return p[q]!==oe?(r.bindFramebuffer(q,oe),p[q]=oe,q===r.DRAW_FRAMEBUFFER&&(p[r.FRAMEBUFFER]=oe),q===r.FRAMEBUFFER&&(p[r.DRAW_FRAMEBUFFER]=oe),!0):!1}function gt(q,oe){let de=g,Me=!1;if(q){de=m.get(oe),de===void 0&&(de=[],m.set(oe,de));const Ze=q.textures;if(de.length!==Ze.length||de[0]!==r.COLOR_ATTACHMENT0){for(let We=0,vt=Ze.length;We<vt;We++)de[We]=r.COLOR_ATTACHMENT0+We;de.length=Ze.length,Me=!0}}else de[0]!==r.BACK&&(de[0]=r.BACK,Me=!0);Me&&r.drawBuffers(de)}function St(q){return y!==q?(r.useProgram(q),y=q,!0):!1}const Te={[Kr]:r.FUNC_ADD,[K0]:r.FUNC_SUBTRACT,[Q0]:r.FUNC_REVERSE_SUBTRACT};Te[$0]=r.MIN,Te[e_]=r.MAX;const Ie={[t_]:r.ZERO,[n_]:r.ONE,[i_]:r.SRC_COLOR,[wu]:r.SRC_ALPHA,[c_]:r.SRC_ALPHA_SATURATE,[a_]:r.DST_COLOR,[s_]:r.DST_ALPHA,[r_]:r.ONE_MINUS_SRC_COLOR,[Eu]:r.ONE_MINUS_SRC_ALPHA,[l_]:r.ONE_MINUS_DST_COLOR,[o_]:r.ONE_MINUS_DST_ALPHA,[u_]:r.CONSTANT_COLOR,[h_]:r.ONE_MINUS_CONSTANT_COLOR,[f_]:r.CONSTANT_ALPHA,[d_]:r.ONE_MINUS_CONSTANT_ALPHA};function W(q,oe,de,Me,Ze,We,vt,kt,tn,Ut){if(q===rr){M===!0&&(it(r.BLEND),M=!1);return}if(M===!1&&(Re(r.BLEND),M=!0),q!==j0){if(q!==x||Ut!==R){if((_!==Kr||T!==Kr)&&(r.blendEquation(r.FUNC_ADD),_=Kr,T=Kr),Ut)switch(q){case ks:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Yd:r.blendFunc(r.ONE,r.ONE);break;case qd:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Zd:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",q);break}else switch(q){case ks:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Yd:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case qd:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Zd:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",q);break}w=null,E=null,N=null,P=null,U.set(0,0,0),L=0,x=q,R=Ut}return}Ze=Ze||oe,We=We||de,vt=vt||Me,(oe!==_||Ze!==T)&&(r.blendEquationSeparate(Te[oe],Te[Ze]),_=oe,T=Ze),(de!==w||Me!==E||We!==N||vt!==P)&&(r.blendFuncSeparate(Ie[de],Ie[Me],Ie[We],Ie[vt]),w=de,E=Me,N=We,P=vt),(kt.equals(U)===!1||tn!==L)&&(r.blendColor(kt.r,kt.g,kt.b,tn),U.copy(kt),L=tn),x=q,R=!1}function lt(q,oe){q.side===Wi?it(r.CULL_FACE):Re(r.CULL_FACE);let de=q.side===ti;oe&&(de=!de),Ue(de),q.blending===ks&&q.transparent===!1?W(rr):W(q.blending,q.blendEquation,q.blendSrc,q.blendDst,q.blendEquationAlpha,q.blendSrcAlpha,q.blendDstAlpha,q.blendColor,q.blendAlpha,q.premultipliedAlpha),a.setFunc(q.depthFunc),a.setTest(q.depthTest),a.setMask(q.depthWrite),s.setMask(q.colorWrite);const Me=q.stencilWrite;c.setTest(Me),Me&&(c.setMask(q.stencilWriteMask),c.setFunc(q.stencilFunc,q.stencilRef,q.stencilFuncMask),c.setOp(q.stencilFail,q.stencilZFail,q.stencilZPass)),_t(q.polygonOffset,q.polygonOffsetFactor,q.polygonOffsetUnits),q.alphaToCoverage===!0?Re(r.SAMPLE_ALPHA_TO_COVERAGE):it(r.SAMPLE_ALPHA_TO_COVERAGE)}function Ue(q){A!==q&&(q?r.frontFace(r.CW):r.frontFace(r.CCW),A=q)}function je(q){q!==q0?(Re(r.CULL_FACE),q!==O&&(q===Xd?r.cullFace(r.BACK):q===Z0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):it(r.CULL_FACE),O=q}function ke(q){q!==K&&(ee&&r.lineWidth(q),K=q)}function _t(q,oe,de){q?(Re(r.POLYGON_OFFSET_FILL),(J!==oe||$!==de)&&(r.polygonOffset(oe,de),J=oe,$=de)):it(r.POLYGON_OFFSET_FILL)}function Xe(q){q?Re(r.SCISSOR_TEST):it(r.SCISSOR_TEST)}function k(q){q===void 0&&(q=r.TEXTURE0+he-1),te!==q&&(r.activeTexture(q),te=q)}function D(q,oe,de){de===void 0&&(te===null?de=r.TEXTURE0+he-1:de=te);let Me=Q[de];Me===void 0&&(Me={type:void 0,texture:void 0},Q[de]=Me),(Me.type!==q||Me.texture!==oe)&&(te!==de&&(r.activeTexture(de),te=de),r.bindTexture(q,oe||Ae[q]),Me.type=q,Me.texture=oe)}function se(){const q=Q[te];q!==void 0&&q.type!==void 0&&(r.bindTexture(q.type,null),q.type=void 0,q.texture=void 0)}function ve(){try{r.compressedTexImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function Ce(){try{r.compressedTexImage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function ye(){try{r.texSubImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function rt(){try{r.texSubImage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function Ge(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function qe(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function Rt(){try{r.texStorage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function Ne(){try{r.texStorage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function et(){try{r.texImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function ht(){try{r.texImage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function ot(q){ze.equals(q)===!1&&(r.scissor(q.x,q.y,q.z,q.w),ze.copy(q))}function Ke(q){ce.equals(q)===!1&&(r.viewport(q.x,q.y,q.z,q.w),ce.copy(q))}function j(q,oe){let de=h.get(oe);de===void 0&&(de=new WeakMap,h.set(oe,de));let Me=de.get(q);Me===void 0&&(Me=r.getUniformBlockIndex(oe,q.name),de.set(q,Me))}function me(q,oe){const Me=h.get(oe).get(q);u.get(oe)!==Me&&(r.uniformBlockBinding(oe,Me,q.__bindingPointIndex),u.set(oe,Me))}function Fe(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),a.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},te=null,Q={},p={},m=new WeakMap,g=[],y=null,M=!1,x=null,_=null,w=null,E=null,T=null,N=null,P=null,U=new tt(0,0,0),L=0,R=!1,A=null,O=null,K=null,J=null,$=null,ze.set(0,0,r.canvas.width,r.canvas.height),ce.set(0,0,r.canvas.width,r.canvas.height),s.reset(),a.reset(),c.reset()}return{buffers:{color:s,depth:a,stencil:c},enable:Re,disable:it,bindFramebuffer:yt,drawBuffers:gt,useProgram:St,setBlending:W,setMaterial:lt,setFlipSided:Ue,setCullFace:je,setLineWidth:ke,setPolygonOffset:_t,setScissorTest:Xe,activeTexture:k,bindTexture:D,unbindTexture:se,compressedTexImage2D:ve,compressedTexImage3D:Ce,texImage2D:et,texImage3D:ht,updateUBOMapping:j,uniformBlockBinding:me,texStorage2D:Rt,texStorage3D:Ne,texSubImage2D:ye,texSubImage3D:rt,compressedTexSubImage2D:Ge,compressedTexSubImage3D:qe,scissor:ot,viewport:Ke,reset:Fe}}function pb(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function mb(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function gb(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function tp(r,e,t,n){const i=vb(n);switch(t){case gp:return r*e;case _p:return r*e;case yp:return r*e*2;case vl:return r*e/i.components*i.byteLength;case _l:return r*e/i.components*i.byteLength;case xp:return r*e*2/i.components*i.byteLength;case ph:return r*e*2/i.components*i.byteLength;case vp:return r*e*3/i.components*i.byteLength;case xn:return r*e*4/i.components*i.byteLength;case mh:return r*e*4/i.components*i.byteLength;case Ha:case Va:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Ga:case Wa:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Du:case Nu:return Math.max(r,16)*Math.max(e,8)/4;case Lu:case Uu:return Math.max(r,8)*Math.max(e,8)/2;case Fu:case Ou:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Bu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case zu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case ku:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case Hu:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case Vu:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Gu:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Wu:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Xu:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Yu:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case qu:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Zu:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Ju:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case ju:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Ku:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Qu:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case Xa:case $u:case eh:return Math.ceil(r/4)*Math.ceil(e/4)*16;case Mp:case th:return Math.ceil(r/4)*Math.ceil(e/4)*8;case nh:case ih:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function vb(r){switch(r){case fi:case uh:return{byteLength:1,components:1};case Yo:case hh:case Un:return{byteLength:2,components:1};case fh:case dh:return{byteLength:2,components:4};case lr:case gl:case hn:return{byteLength:4,components:1};case mp:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}const _b={contain:pb,cover:mb,fill:gb,getByteLength:tp};function yb(r,e,t,n,i,s,a){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new we,f=new WeakMap;let p;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(k,D){return g?new OffscreenCanvas(k,D):il("canvas")}function M(k,D,se){let ve=1;const Ce=Xe(k);if((Ce.width>se||Ce.height>se)&&(ve=se/Math.max(Ce.width,Ce.height)),ve<1)if(typeof HTMLImageElement<"u"&&k instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&k instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&k instanceof ImageBitmap||typeof VideoFrame<"u"&&k instanceof VideoFrame){const ye=Math.floor(ve*Ce.width),rt=Math.floor(ve*Ce.height);p===void 0&&(p=y(ye,rt));const Ge=D?y(ye,rt):p;return Ge.width=ye,Ge.height=rt,Ge.getContext("2d").drawImage(k,0,0,ye,rt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+Ce.width+"x"+Ce.height+") to ("+ye+"x"+rt+")."),Ge}else return"data"in k&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+Ce.width+"x"+Ce.height+")."),k;return k}function x(k){return k.generateMipmaps}function _(k){r.generateMipmap(k)}function w(k){return k.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:k.isWebGL3DRenderTarget?r.TEXTURE_3D:k.isWebGLArrayRenderTarget||k.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function E(k,D,se,ve,Ce=!1){if(k!==null){if(r[k]!==void 0)return r[k];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+k+"'")}let ye=D;if(D===r.RED&&(se===r.FLOAT&&(ye=r.R32F),se===r.HALF_FLOAT&&(ye=r.R16F),se===r.UNSIGNED_BYTE&&(ye=r.R8)),D===r.RED_INTEGER&&(se===r.UNSIGNED_BYTE&&(ye=r.R8UI),se===r.UNSIGNED_SHORT&&(ye=r.R16UI),se===r.UNSIGNED_INT&&(ye=r.R32UI),se===r.BYTE&&(ye=r.R8I),se===r.SHORT&&(ye=r.R16I),se===r.INT&&(ye=r.R32I)),D===r.RG&&(se===r.FLOAT&&(ye=r.RG32F),se===r.HALF_FLOAT&&(ye=r.RG16F),se===r.UNSIGNED_BYTE&&(ye=r.RG8)),D===r.RG_INTEGER&&(se===r.UNSIGNED_BYTE&&(ye=r.RG8UI),se===r.UNSIGNED_SHORT&&(ye=r.RG16UI),se===r.UNSIGNED_INT&&(ye=r.RG32UI),se===r.BYTE&&(ye=r.RG8I),se===r.SHORT&&(ye=r.RG16I),se===r.INT&&(ye=r.RG32I)),D===r.RGB_INTEGER&&(se===r.UNSIGNED_BYTE&&(ye=r.RGB8UI),se===r.UNSIGNED_SHORT&&(ye=r.RGB16UI),se===r.UNSIGNED_INT&&(ye=r.RGB32UI),se===r.BYTE&&(ye=r.RGB8I),se===r.SHORT&&(ye=r.RGB16I),se===r.INT&&(ye=r.RGB32I)),D===r.RGBA_INTEGER&&(se===r.UNSIGNED_BYTE&&(ye=r.RGBA8UI),se===r.UNSIGNED_SHORT&&(ye=r.RGBA16UI),se===r.UNSIGNED_INT&&(ye=r.RGBA32UI),se===r.BYTE&&(ye=r.RGBA8I),se===r.SHORT&&(ye=r.RGBA16I),se===r.INT&&(ye=r.RGBA32I)),D===r.RGB&&se===r.UNSIGNED_INT_5_9_9_9_REV&&(ye=r.RGB9_E5),D===r.RGBA){const rt=Ce?yl:Vt.getTransfer(ve);se===r.FLOAT&&(ye=r.RGBA32F),se===r.HALF_FLOAT&&(ye=r.RGBA16F),se===r.UNSIGNED_BYTE&&(ye=rt===jt?r.SRGB8_ALPHA8:r.RGBA8),se===r.UNSIGNED_SHORT_4_4_4_4&&(ye=r.RGBA4),se===r.UNSIGNED_SHORT_5_5_5_1&&(ye=r.RGB5_A1)}return(ye===r.R16F||ye===r.R32F||ye===r.RG16F||ye===r.RG32F||ye===r.RGBA16F||ye===r.RGBA32F)&&e.get("EXT_color_buffer_float"),ye}function T(k,D){let se;return k?D===null||D===lr||D===Ys?se=r.DEPTH24_STENCIL8:D===hn?se=r.DEPTH32F_STENCIL8:D===Yo&&(se=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):D===null||D===lr||D===Ys?se=r.DEPTH_COMPONENT24:D===hn?se=r.DEPTH_COMPONENT32F:D===Yo&&(se=r.DEPTH_COMPONENT16),se}function N(k,D){return x(k)===!0||k.isFramebufferTexture&&k.minFilter!==Fn&&k.minFilter!==Kt?Math.log2(Math.max(D.width,D.height))+1:k.mipmaps!==void 0&&k.mipmaps.length>0?k.mipmaps.length:k.isCompressedTexture&&Array.isArray(k.image)?D.mipmaps.length:1}function P(k){const D=k.target;D.removeEventListener("dispose",P),L(D),D.isVideoTexture&&f.delete(D)}function U(k){const D=k.target;D.removeEventListener("dispose",U),A(D)}function L(k){const D=n.get(k);if(D.__webglInit===void 0)return;const se=k.source,ve=m.get(se);if(ve){const Ce=ve[D.__cacheKey];Ce.usedTimes--,Ce.usedTimes===0&&R(k),Object.keys(ve).length===0&&m.delete(se)}n.remove(k)}function R(k){const D=n.get(k);r.deleteTexture(D.__webglTexture);const se=k.source,ve=m.get(se);delete ve[D.__cacheKey],a.memory.textures--}function A(k){const D=n.get(k);if(k.depthTexture&&(k.depthTexture.dispose(),n.remove(k.depthTexture)),k.isWebGLCubeRenderTarget)for(let ve=0;ve<6;ve++){if(Array.isArray(D.__webglFramebuffer[ve]))for(let Ce=0;Ce<D.__webglFramebuffer[ve].length;Ce++)r.deleteFramebuffer(D.__webglFramebuffer[ve][Ce]);else r.deleteFramebuffer(D.__webglFramebuffer[ve]);D.__webglDepthbuffer&&r.deleteRenderbuffer(D.__webglDepthbuffer[ve])}else{if(Array.isArray(D.__webglFramebuffer))for(let ve=0;ve<D.__webglFramebuffer.length;ve++)r.deleteFramebuffer(D.__webglFramebuffer[ve]);else r.deleteFramebuffer(D.__webglFramebuffer);if(D.__webglDepthbuffer&&r.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&r.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer)for(let ve=0;ve<D.__webglColorRenderbuffer.length;ve++)D.__webglColorRenderbuffer[ve]&&r.deleteRenderbuffer(D.__webglColorRenderbuffer[ve]);D.__webglDepthRenderbuffer&&r.deleteRenderbuffer(D.__webglDepthRenderbuffer)}const se=k.textures;for(let ve=0,Ce=se.length;ve<Ce;ve++){const ye=n.get(se[ve]);ye.__webglTexture&&(r.deleteTexture(ye.__webglTexture),a.memory.textures--),n.remove(se[ve])}n.remove(k)}let O=0;function K(){O=0}function J(){const k=O;return k>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+k+" texture units while this GPU supports only "+i.maxTextures),O+=1,k}function $(k){const D=[];return D.push(k.wrapS),D.push(k.wrapT),D.push(k.wrapR||0),D.push(k.magFilter),D.push(k.minFilter),D.push(k.anisotropy),D.push(k.internalFormat),D.push(k.format),D.push(k.type),D.push(k.generateMipmaps),D.push(k.premultiplyAlpha),D.push(k.flipY),D.push(k.unpackAlignment),D.push(k.colorSpace),D.join()}function he(k,D){const se=n.get(k);if(k.isVideoTexture&&ke(k),k.isRenderTargetTexture===!1&&k.version>0&&se.__version!==k.version){const ve=k.image;if(ve===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ve.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ce(se,k,D);return}}t.bindTexture(r.TEXTURE_2D,se.__webglTexture,r.TEXTURE0+D)}function ee(k,D){const se=n.get(k);if(k.version>0&&se.__version!==k.version){ce(se,k,D);return}t.bindTexture(r.TEXTURE_2D_ARRAY,se.__webglTexture,r.TEXTURE0+D)}function Ee(k,D){const se=n.get(k);if(k.version>0&&se.__version!==k.version){ce(se,k,D);return}t.bindTexture(r.TEXTURE_3D,se.__webglTexture,r.TEXTURE0+D)}function z(k,D){const se=n.get(k);if(k.version>0&&se.__version!==k.version){be(se,k,D);return}t.bindTexture(r.TEXTURE_CUBE_MAP,se.__webglTexture,r.TEXTURE0+D)}const te={[Ka]:r.REPEAT,[En]:r.CLAMP_TO_EDGE,[Qa]:r.MIRRORED_REPEAT},Q={[Fn]:r.NEAREST,[pp]:r.NEAREST_MIPMAP_NEAREST,[Oo]:r.NEAREST_MIPMAP_LINEAR,[Kt]:r.LINEAR,[ka]:r.LINEAR_MIPMAP_NEAREST,[nr]:r.LINEAR_MIPMAP_LINEAR},fe={[R_]:r.NEVER,[N_]:r.ALWAYS,[I_]:r.LESS,[wp]:r.LEQUAL,[P_]:r.EQUAL,[U_]:r.GEQUAL,[L_]:r.GREATER,[D_]:r.NOTEQUAL};function xe(k,D){if(D.type===hn&&e.has("OES_texture_float_linear")===!1&&(D.magFilter===Kt||D.magFilter===ka||D.magFilter===Oo||D.magFilter===nr||D.minFilter===Kt||D.minFilter===ka||D.minFilter===Oo||D.minFilter===nr)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(k,r.TEXTURE_WRAP_S,te[D.wrapS]),r.texParameteri(k,r.TEXTURE_WRAP_T,te[D.wrapT]),(k===r.TEXTURE_3D||k===r.TEXTURE_2D_ARRAY)&&r.texParameteri(k,r.TEXTURE_WRAP_R,te[D.wrapR]),r.texParameteri(k,r.TEXTURE_MAG_FILTER,Q[D.magFilter]),r.texParameteri(k,r.TEXTURE_MIN_FILTER,Q[D.minFilter]),D.compareFunction&&(r.texParameteri(k,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(k,r.TEXTURE_COMPARE_FUNC,fe[D.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(D.magFilter===Fn||D.minFilter!==Oo&&D.minFilter!==nr||D.type===hn&&e.has("OES_texture_float_linear")===!1)return;if(D.anisotropy>1||n.get(D).__currentAnisotropy){const se=e.get("EXT_texture_filter_anisotropic");r.texParameterf(k,se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,i.getMaxAnisotropy())),n.get(D).__currentAnisotropy=D.anisotropy}}}function ze(k,D){let se=!1;k.__webglInit===void 0&&(k.__webglInit=!0,D.addEventListener("dispose",P));const ve=D.source;let Ce=m.get(ve);Ce===void 0&&(Ce={},m.set(ve,Ce));const ye=$(D);if(ye!==k.__cacheKey){Ce[ye]===void 0&&(Ce[ye]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,se=!0),Ce[ye].usedTimes++;const rt=Ce[k.__cacheKey];rt!==void 0&&(Ce[k.__cacheKey].usedTimes--,rt.usedTimes===0&&R(D)),k.__cacheKey=ye,k.__webglTexture=Ce[ye].texture}return se}function ce(k,D,se){let ve=r.TEXTURE_2D;(D.isDataArrayTexture||D.isCompressedArrayTexture)&&(ve=r.TEXTURE_2D_ARRAY),D.isData3DTexture&&(ve=r.TEXTURE_3D);const Ce=ze(k,D),ye=D.source;t.bindTexture(ve,k.__webglTexture,r.TEXTURE0+se);const rt=n.get(ye);if(ye.version!==rt.__version||Ce===!0){t.activeTexture(r.TEXTURE0+se);const Ge=Vt.getPrimaries(Vt.workingColorSpace),qe=D.colorSpace===br?null:Vt.getPrimaries(D.colorSpace),Rt=D.colorSpace===br||Ge===qe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,D.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,D.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Rt);let Ne=M(D.image,!1,i.maxTextureSize);Ne=_t(D,Ne);const et=s.convert(D.format,D.colorSpace),ht=s.convert(D.type);let ot=E(D.internalFormat,et,ht,D.colorSpace,D.isVideoTexture);xe(ve,D);let Ke;const j=D.mipmaps,me=D.isVideoTexture!==!0,Fe=rt.__version===void 0||Ce===!0,q=ye.dataReady,oe=N(D,Ne);if(D.isDepthTexture)ot=T(D.format===qs,D.type),Fe&&(me?t.texStorage2D(r.TEXTURE_2D,1,ot,Ne.width,Ne.height):t.texImage2D(r.TEXTURE_2D,0,ot,Ne.width,Ne.height,0,et,ht,null));else if(D.isDataTexture)if(j.length>0){me&&Fe&&t.texStorage2D(r.TEXTURE_2D,oe,ot,j[0].width,j[0].height);for(let de=0,Me=j.length;de<Me;de++)Ke=j[de],me?q&&t.texSubImage2D(r.TEXTURE_2D,de,0,0,Ke.width,Ke.height,et,ht,Ke.data):t.texImage2D(r.TEXTURE_2D,de,ot,Ke.width,Ke.height,0,et,ht,Ke.data);D.generateMipmaps=!1}else me?(Fe&&t.texStorage2D(r.TEXTURE_2D,oe,ot,Ne.width,Ne.height),q&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ne.width,Ne.height,et,ht,Ne.data)):t.texImage2D(r.TEXTURE_2D,0,ot,Ne.width,Ne.height,0,et,ht,Ne.data);else if(D.isCompressedTexture)if(D.isCompressedArrayTexture){me&&Fe&&t.texStorage3D(r.TEXTURE_2D_ARRAY,oe,ot,j[0].width,j[0].height,Ne.depth);for(let de=0,Me=j.length;de<Me;de++)if(Ke=j[de],D.format!==xn)if(et!==null)if(me){if(q)if(D.layerUpdates.size>0){const Ze=tp(Ke.width,Ke.height,D.format,D.type);for(const We of D.layerUpdates){const vt=Ke.data.subarray(We*Ze/Ke.data.BYTES_PER_ELEMENT,(We+1)*Ze/Ke.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,de,0,0,We,Ke.width,Ke.height,1,et,vt)}D.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,de,0,0,0,Ke.width,Ke.height,Ne.depth,et,Ke.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,de,ot,Ke.width,Ke.height,Ne.depth,0,Ke.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else me?q&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,de,0,0,0,Ke.width,Ke.height,Ne.depth,et,ht,Ke.data):t.texImage3D(r.TEXTURE_2D_ARRAY,de,ot,Ke.width,Ke.height,Ne.depth,0,et,ht,Ke.data)}else{me&&Fe&&t.texStorage2D(r.TEXTURE_2D,oe,ot,j[0].width,j[0].height);for(let de=0,Me=j.length;de<Me;de++)Ke=j[de],D.format!==xn?et!==null?me?q&&t.compressedTexSubImage2D(r.TEXTURE_2D,de,0,0,Ke.width,Ke.height,et,Ke.data):t.compressedTexImage2D(r.TEXTURE_2D,de,ot,Ke.width,Ke.height,0,Ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):me?q&&t.texSubImage2D(r.TEXTURE_2D,de,0,0,Ke.width,Ke.height,et,ht,Ke.data):t.texImage2D(r.TEXTURE_2D,de,ot,Ke.width,Ke.height,0,et,ht,Ke.data)}else if(D.isDataArrayTexture)if(me){if(Fe&&t.texStorage3D(r.TEXTURE_2D_ARRAY,oe,ot,Ne.width,Ne.height,Ne.depth),q)if(D.layerUpdates.size>0){const de=tp(Ne.width,Ne.height,D.format,D.type);for(const Me of D.layerUpdates){const Ze=Ne.data.subarray(Me*de/Ne.data.BYTES_PER_ELEMENT,(Me+1)*de/Ne.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,Me,Ne.width,Ne.height,1,et,ht,Ze)}D.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Ne.width,Ne.height,Ne.depth,et,ht,Ne.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,ot,Ne.width,Ne.height,Ne.depth,0,et,ht,Ne.data);else if(D.isData3DTexture)me?(Fe&&t.texStorage3D(r.TEXTURE_3D,oe,ot,Ne.width,Ne.height,Ne.depth),q&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Ne.width,Ne.height,Ne.depth,et,ht,Ne.data)):t.texImage3D(r.TEXTURE_3D,0,ot,Ne.width,Ne.height,Ne.depth,0,et,ht,Ne.data);else if(D.isFramebufferTexture){if(Fe)if(me)t.texStorage2D(r.TEXTURE_2D,oe,ot,Ne.width,Ne.height);else{let de=Ne.width,Me=Ne.height;for(let Ze=0;Ze<oe;Ze++)t.texImage2D(r.TEXTURE_2D,Ze,ot,de,Me,0,et,ht,null),de>>=1,Me>>=1}}else if(j.length>0){if(me&&Fe){const de=Xe(j[0]);t.texStorage2D(r.TEXTURE_2D,oe,ot,de.width,de.height)}for(let de=0,Me=j.length;de<Me;de++)Ke=j[de],me?q&&t.texSubImage2D(r.TEXTURE_2D,de,0,0,et,ht,Ke):t.texImage2D(r.TEXTURE_2D,de,ot,et,ht,Ke);D.generateMipmaps=!1}else if(me){if(Fe){const de=Xe(Ne);t.texStorage2D(r.TEXTURE_2D,oe,ot,de.width,de.height)}q&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,et,ht,Ne)}else t.texImage2D(r.TEXTURE_2D,0,ot,et,ht,Ne);x(D)&&_(ve),rt.__version=ye.version,D.onUpdate&&D.onUpdate(D)}k.__version=D.version}function be(k,D,se){if(D.image.length!==6)return;const ve=ze(k,D),Ce=D.source;t.bindTexture(r.TEXTURE_CUBE_MAP,k.__webglTexture,r.TEXTURE0+se);const ye=n.get(Ce);if(Ce.version!==ye.__version||ve===!0){t.activeTexture(r.TEXTURE0+se);const rt=Vt.getPrimaries(Vt.workingColorSpace),Ge=D.colorSpace===br?null:Vt.getPrimaries(D.colorSpace),qe=D.colorSpace===br||rt===Ge?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,D.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,D.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,qe);const Rt=D.isCompressedTexture||D.image[0].isCompressedTexture,Ne=D.image[0]&&D.image[0].isDataTexture,et=[];for(let Me=0;Me<6;Me++)!Rt&&!Ne?et[Me]=M(D.image[Me],!0,i.maxCubemapSize):et[Me]=Ne?D.image[Me].image:D.image[Me],et[Me]=_t(D,et[Me]);const ht=et[0],ot=s.convert(D.format,D.colorSpace),Ke=s.convert(D.type),j=E(D.internalFormat,ot,Ke,D.colorSpace),me=D.isVideoTexture!==!0,Fe=ye.__version===void 0||ve===!0,q=Ce.dataReady;let oe=N(D,ht);xe(r.TEXTURE_CUBE_MAP,D);let de;if(Rt){me&&Fe&&t.texStorage2D(r.TEXTURE_CUBE_MAP,oe,j,ht.width,ht.height);for(let Me=0;Me<6;Me++){de=et[Me].mipmaps;for(let Ze=0;Ze<de.length;Ze++){const We=de[Ze];D.format!==xn?ot!==null?me?q&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze,0,0,We.width,We.height,ot,We.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze,j,We.width,We.height,0,We.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):me?q&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze,0,0,We.width,We.height,ot,Ke,We.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze,j,We.width,We.height,0,ot,Ke,We.data)}}}else{if(de=D.mipmaps,me&&Fe){de.length>0&&oe++;const Me=Xe(et[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,oe,j,Me.width,Me.height)}for(let Me=0;Me<6;Me++)if(Ne){me?q&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,0,0,et[Me].width,et[Me].height,ot,Ke,et[Me].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,j,et[Me].width,et[Me].height,0,ot,Ke,et[Me].data);for(let Ze=0;Ze<de.length;Ze++){const vt=de[Ze].image[Me].image;me?q&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze+1,0,0,vt.width,vt.height,ot,Ke,vt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze+1,j,vt.width,vt.height,0,ot,Ke,vt.data)}}else{me?q&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,0,0,ot,Ke,et[Me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0,j,ot,Ke,et[Me]);for(let Ze=0;Ze<de.length;Ze++){const We=de[Ze];me?q&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze+1,0,0,ot,Ke,We.image[Me]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ze+1,j,ot,Ke,We.image[Me])}}}x(D)&&_(r.TEXTURE_CUBE_MAP),ye.__version=Ce.version,D.onUpdate&&D.onUpdate(D)}k.__version=D.version}function Ae(k,D,se,ve,Ce,ye){const rt=s.convert(se.format,se.colorSpace),Ge=s.convert(se.type),qe=E(se.internalFormat,rt,Ge,se.colorSpace),Rt=n.get(D),Ne=n.get(se);if(Ne.__renderTarget=D,!Rt.__hasExternalTextures){const et=Math.max(1,D.width>>ye),ht=Math.max(1,D.height>>ye);Ce===r.TEXTURE_3D||Ce===r.TEXTURE_2D_ARRAY?t.texImage3D(Ce,ye,qe,et,ht,D.depth,0,rt,Ge,null):t.texImage2D(Ce,ye,qe,et,ht,0,rt,Ge,null)}t.bindFramebuffer(r.FRAMEBUFFER,k),je(D)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ve,Ce,Ne.__webglTexture,0,Ue(D)):(Ce===r.TEXTURE_2D||Ce>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&Ce<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ve,Ce,Ne.__webglTexture,ye),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Re(k,D,se){if(r.bindRenderbuffer(r.RENDERBUFFER,k),D.depthBuffer){const ve=D.depthTexture,Ce=ve&&ve.isDepthTexture?ve.type:null,ye=T(D.stencilBuffer,Ce),rt=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ge=Ue(D);je(D)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ge,ye,D.width,D.height):se?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ge,ye,D.width,D.height):r.renderbufferStorage(r.RENDERBUFFER,ye,D.width,D.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,rt,r.RENDERBUFFER,k)}else{const ve=D.textures;for(let Ce=0;Ce<ve.length;Ce++){const ye=ve[Ce],rt=s.convert(ye.format,ye.colorSpace),Ge=s.convert(ye.type),qe=E(ye.internalFormat,rt,Ge,ye.colorSpace),Rt=Ue(D);se&&je(D)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Rt,qe,D.width,D.height):je(D)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Rt,qe,D.width,D.height):r.renderbufferStorage(r.RENDERBUFFER,qe,D.width,D.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function it(k,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,k),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ve=n.get(D.depthTexture);ve.__renderTarget=D,(!ve.__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),he(D.depthTexture,0);const Ce=ve.__webglTexture,ye=Ue(D);if(D.depthTexture.format===Hs)je(D)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Ce,0,ye):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Ce,0);else if(D.depthTexture.format===qs)je(D)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Ce,0,ye):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Ce,0);else throw new Error("Unknown depthTexture format")}function yt(k){const D=n.get(k),se=k.isWebGLCubeRenderTarget===!0;if(D.__boundDepthTexture!==k.depthTexture){const ve=k.depthTexture;if(D.__depthDisposeCallback&&D.__depthDisposeCallback(),ve){const Ce=()=>{delete D.__boundDepthTexture,delete D.__depthDisposeCallback,ve.removeEventListener("dispose",Ce)};ve.addEventListener("dispose",Ce),D.__depthDisposeCallback=Ce}D.__boundDepthTexture=ve}if(k.depthTexture&&!D.__autoAllocateDepthBuffer){if(se)throw new Error("target.depthTexture not supported in Cube render targets");it(D.__webglFramebuffer,k)}else if(se){D.__webglDepthbuffer=[];for(let ve=0;ve<6;ve++)if(t.bindFramebuffer(r.FRAMEBUFFER,D.__webglFramebuffer[ve]),D.__webglDepthbuffer[ve]===void 0)D.__webglDepthbuffer[ve]=r.createRenderbuffer(),Re(D.__webglDepthbuffer[ve],k,!1);else{const Ce=k.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,ye=D.__webglDepthbuffer[ve];r.bindRenderbuffer(r.RENDERBUFFER,ye),r.framebufferRenderbuffer(r.FRAMEBUFFER,Ce,r.RENDERBUFFER,ye)}}else if(t.bindFramebuffer(r.FRAMEBUFFER,D.__webglFramebuffer),D.__webglDepthbuffer===void 0)D.__webglDepthbuffer=r.createRenderbuffer(),Re(D.__webglDepthbuffer,k,!1);else{const ve=k.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ce=D.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,Ce),r.framebufferRenderbuffer(r.FRAMEBUFFER,ve,r.RENDERBUFFER,Ce)}t.bindFramebuffer(r.FRAMEBUFFER,null)}function gt(k,D,se){const ve=n.get(k);D!==void 0&&Ae(ve.__webglFramebuffer,k,k.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),se!==void 0&&yt(k)}function St(k){const D=k.texture,se=n.get(k),ve=n.get(D);k.addEventListener("dispose",U);const Ce=k.textures,ye=k.isWebGLCubeRenderTarget===!0,rt=Ce.length>1;if(rt||(ve.__webglTexture===void 0&&(ve.__webglTexture=r.createTexture()),ve.__version=D.version,a.memory.textures++),ye){se.__webglFramebuffer=[];for(let Ge=0;Ge<6;Ge++)if(D.mipmaps&&D.mipmaps.length>0){se.__webglFramebuffer[Ge]=[];for(let qe=0;qe<D.mipmaps.length;qe++)se.__webglFramebuffer[Ge][qe]=r.createFramebuffer()}else se.__webglFramebuffer[Ge]=r.createFramebuffer()}else{if(D.mipmaps&&D.mipmaps.length>0){se.__webglFramebuffer=[];for(let Ge=0;Ge<D.mipmaps.length;Ge++)se.__webglFramebuffer[Ge]=r.createFramebuffer()}else se.__webglFramebuffer=r.createFramebuffer();if(rt)for(let Ge=0,qe=Ce.length;Ge<qe;Ge++){const Rt=n.get(Ce[Ge]);Rt.__webglTexture===void 0&&(Rt.__webglTexture=r.createTexture(),a.memory.textures++)}if(k.samples>0&&je(k)===!1){se.__webglMultisampledFramebuffer=r.createFramebuffer(),se.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,se.__webglMultisampledFramebuffer);for(let Ge=0;Ge<Ce.length;Ge++){const qe=Ce[Ge];se.__webglColorRenderbuffer[Ge]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,se.__webglColorRenderbuffer[Ge]);const Rt=s.convert(qe.format,qe.colorSpace),Ne=s.convert(qe.type),et=E(qe.internalFormat,Rt,Ne,qe.colorSpace,k.isXRRenderTarget===!0),ht=Ue(k);r.renderbufferStorageMultisample(r.RENDERBUFFER,ht,et,k.width,k.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ge,r.RENDERBUFFER,se.__webglColorRenderbuffer[Ge])}r.bindRenderbuffer(r.RENDERBUFFER,null),k.depthBuffer&&(se.__webglDepthRenderbuffer=r.createRenderbuffer(),Re(se.__webglDepthRenderbuffer,k,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ye){t.bindTexture(r.TEXTURE_CUBE_MAP,ve.__webglTexture),xe(r.TEXTURE_CUBE_MAP,D);for(let Ge=0;Ge<6;Ge++)if(D.mipmaps&&D.mipmaps.length>0)for(let qe=0;qe<D.mipmaps.length;qe++)Ae(se.__webglFramebuffer[Ge][qe],k,D,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ge,qe);else Ae(se.__webglFramebuffer[Ge],k,D,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ge,0);x(D)&&_(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(rt){for(let Ge=0,qe=Ce.length;Ge<qe;Ge++){const Rt=Ce[Ge],Ne=n.get(Rt);t.bindTexture(r.TEXTURE_2D,Ne.__webglTexture),xe(r.TEXTURE_2D,Rt),Ae(se.__webglFramebuffer,k,Rt,r.COLOR_ATTACHMENT0+Ge,r.TEXTURE_2D,0),x(Rt)&&_(r.TEXTURE_2D)}t.unbindTexture()}else{let Ge=r.TEXTURE_2D;if((k.isWebGL3DRenderTarget||k.isWebGLArrayRenderTarget)&&(Ge=k.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(Ge,ve.__webglTexture),xe(Ge,D),D.mipmaps&&D.mipmaps.length>0)for(let qe=0;qe<D.mipmaps.length;qe++)Ae(se.__webglFramebuffer[qe],k,D,r.COLOR_ATTACHMENT0,Ge,qe);else Ae(se.__webglFramebuffer,k,D,r.COLOR_ATTACHMENT0,Ge,0);x(D)&&_(Ge),t.unbindTexture()}k.depthBuffer&&yt(k)}function Te(k){const D=k.textures;for(let se=0,ve=D.length;se<ve;se++){const Ce=D[se];if(x(Ce)){const ye=w(k),rt=n.get(Ce).__webglTexture;t.bindTexture(ye,rt),_(ye),t.unbindTexture()}}}const Ie=[],W=[];function lt(k){if(k.samples>0){if(je(k)===!1){const D=k.textures,se=k.width,ve=k.height;let Ce=r.COLOR_BUFFER_BIT;const ye=k.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,rt=n.get(k),Ge=D.length>1;if(Ge)for(let qe=0;qe<D.length;qe++)t.bindFramebuffer(r.FRAMEBUFFER,rt.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,rt.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,rt.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,rt.__webglFramebuffer);for(let qe=0;qe<D.length;qe++){if(k.resolveDepthBuffer&&(k.depthBuffer&&(Ce|=r.DEPTH_BUFFER_BIT),k.stencilBuffer&&k.resolveStencilBuffer&&(Ce|=r.STENCIL_BUFFER_BIT)),Ge){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,rt.__webglColorRenderbuffer[qe]);const Rt=n.get(D[qe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Rt,0)}r.blitFramebuffer(0,0,se,ve,0,0,se,ve,Ce,r.NEAREST),u===!0&&(Ie.length=0,W.length=0,Ie.push(r.COLOR_ATTACHMENT0+qe),k.depthBuffer&&k.resolveDepthBuffer===!1&&(Ie.push(ye),W.push(ye),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,W)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Ie))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Ge)for(let qe=0;qe<D.length;qe++){t.bindFramebuffer(r.FRAMEBUFFER,rt.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.RENDERBUFFER,rt.__webglColorRenderbuffer[qe]);const Rt=n.get(D[qe]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,rt.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+qe,r.TEXTURE_2D,Rt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,rt.__webglMultisampledFramebuffer)}else if(k.depthBuffer&&k.resolveDepthBuffer===!1&&u){const D=k.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[D])}}}function Ue(k){return Math.min(i.maxSamples,k.samples)}function je(k){const D=n.get(k);return k.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&D.__useRenderToTexture!==!1}function ke(k){const D=a.render.frame;f.get(k)!==D&&(f.set(k,D),k.update())}function _t(k,D){const se=k.colorSpace,ve=k.format,Ce=k.type;return k.isCompressedTexture===!0||k.isVideoTexture===!0||se!==cr&&se!==br&&(Vt.getTransfer(se)===jt?(ve!==xn||Ce!==fi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",se)),D}function Xe(k){return typeof HTMLImageElement<"u"&&k instanceof HTMLImageElement?(h.width=k.naturalWidth||k.width,h.height=k.naturalHeight||k.height):typeof VideoFrame<"u"&&k instanceof VideoFrame?(h.width=k.displayWidth,h.height=k.displayHeight):(h.width=k.width,h.height=k.height),h}this.allocateTextureUnit=J,this.resetTextureUnits=K,this.setTexture2D=he,this.setTexture2DArray=ee,this.setTexture3D=Ee,this.setTextureCube=z,this.rebindTextures=gt,this.setupRenderTarget=St,this.updateRenderTargetMipmap=Te,this.updateMultisampleRenderTarget=lt,this.setupDepthRenderbuffer=yt,this.setupFrameBufferTexture=Ae,this.useMultisampledRTT=je}function j_(r,e){function t(n,i=br){let s;const a=Vt.getTransfer(i);if(n===fi)return r.UNSIGNED_BYTE;if(n===fh)return r.UNSIGNED_SHORT_4_4_4_4;if(n===dh)return r.UNSIGNED_SHORT_5_5_5_1;if(n===mp)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===uh)return r.BYTE;if(n===hh)return r.SHORT;if(n===Yo)return r.UNSIGNED_SHORT;if(n===gl)return r.INT;if(n===lr)return r.UNSIGNED_INT;if(n===hn)return r.FLOAT;if(n===Un)return r.HALF_FLOAT;if(n===gp)return r.ALPHA;if(n===vp)return r.RGB;if(n===xn)return r.RGBA;if(n===_p)return r.LUMINANCE;if(n===yp)return r.LUMINANCE_ALPHA;if(n===Hs)return r.DEPTH_COMPONENT;if(n===qs)return r.DEPTH_STENCIL;if(n===vl)return r.RED;if(n===_l)return r.RED_INTEGER;if(n===xp)return r.RG;if(n===ph)return r.RG_INTEGER;if(n===mh)return r.RGBA_INTEGER;if(n===Ha||n===Va||n===Ga||n===Wa)if(a===jt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Ha)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Va)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ga)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Wa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Ha)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Va)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ga)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Wa)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Lu||n===Du||n===Uu||n===Nu)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Lu)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Du)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Uu)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Nu)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Fu||n===Ou||n===Bu)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Fu||n===Ou)return a===jt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Bu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===zu||n===ku||n===Hu||n===Vu||n===Gu||n===Wu||n===Xu||n===Yu||n===qu||n===Zu||n===Ju||n===ju||n===Ku||n===Qu)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===zu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===ku)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Hu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Vu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Gu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Wu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Xu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Yu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===qu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Zu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ju)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===ju)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Ku)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Qu)return a===jt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Xa||n===$u||n===eh)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Xa)return a===jt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===$u)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===eh)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Mp||n===th||n===nh||n===ih)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Xa)return s.COMPRESSED_RED_RGTC1_EXT;if(n===th)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===nh)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===ih)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Ys?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}class K_ extends yn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ko extends Xt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const xb={type:"move"};class vd{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ko,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ko,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ko,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const M of e.hand.values()){const x=t.getJointPose(M,n),_=this._getHandJoint(h,M);x!==null&&(_.matrix.fromArray(x.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=x.radius),_.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,y=.005;h.inputState.pinching&&m>g+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(xb)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ko;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const Mb=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,Sb=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class wb{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new $t,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new di({vertexShader:Mb,fragmentShader:Sb,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new fn(new is(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Eb extends ur{constructor(e,t){super();const n=this;let i=null,s=1,a=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,g=null,y=null;const M=new wb,x=t.getContextAttributes();let _=null,w=null;const E=[],T=[],N=new we;let P=null;const U=new yn;U.viewport=new Wt;const L=new yn;L.viewport=new Wt;const R=[U,L],A=new K_;let O=null,K=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ce){let be=E[ce];return be===void 0&&(be=new vd,E[ce]=be),be.getTargetRaySpace()},this.getControllerGrip=function(ce){let be=E[ce];return be===void 0&&(be=new vd,E[ce]=be),be.getGripSpace()},this.getHand=function(ce){let be=E[ce];return be===void 0&&(be=new vd,E[ce]=be),be.getHandSpace()};function J(ce){const be=T.indexOf(ce.inputSource);if(be===-1)return;const Ae=E[be];Ae!==void 0&&(Ae.update(ce.inputSource,ce.frame,h||a),Ae.dispatchEvent({type:ce.type,data:ce.inputSource}))}function $(){i.removeEventListener("select",J),i.removeEventListener("selectstart",J),i.removeEventListener("selectend",J),i.removeEventListener("squeeze",J),i.removeEventListener("squeezestart",J),i.removeEventListener("squeezeend",J),i.removeEventListener("end",$),i.removeEventListener("inputsourceschange",he);for(let ce=0;ce<E.length;ce++){const be=T[ce];be!==null&&(T[ce]=null,E[ce].disconnect(be))}O=null,K=null,M.reset(),e.setRenderTarget(_),g=null,m=null,p=null,i=null,w=null,ze.stop(),n.isPresenting=!1,e.setPixelRatio(P),e.setSize(N.width,N.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ce){s=ce,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ce){c=ce,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(ce){h=ce},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(ce){if(i=ce,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",J),i.addEventListener("selectstart",J),i.addEventListener("selectend",J),i.addEventListener("squeeze",J),i.addEventListener("squeezestart",J),i.addEventListener("squeezeend",J),i.addEventListener("end",$),i.addEventListener("inputsourceschange",he),x.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(N),i.renderState.layers===void 0){const be={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(i,t,be),i.updateRenderState({baseLayer:g}),e.setPixelRatio(1),e.setSize(g.framebufferWidth,g.framebufferHeight,!1),w=new Ei(g.framebufferWidth,g.framebufferHeight,{format:xn,type:fi,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let be=null,Ae=null,Re=null;x.depth&&(Re=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,be=x.stencil?qs:Hs,Ae=x.stencil?Ys:lr);const it={colorFormat:t.RGBA8,depthFormat:Re,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(it),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),w=new Ei(m.textureWidth,m.textureHeight,{format:xn,type:fi,depthTexture:new Ip(m.textureWidth,m.textureHeight,Ae,void 0,void 0,void 0,void 0,void 0,void 0,be),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0,resolveDepthBuffer:m.ignoreDepthValues===!1})}w.isXRRenderTarget=!0,this.setFoveation(u),h=null,a=await i.requestReferenceSpace(c),ze.setContext(i),ze.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return M.getDepthTexture()};function he(ce){for(let be=0;be<ce.removed.length;be++){const Ae=ce.removed[be],Re=T.indexOf(Ae);Re>=0&&(T[Re]=null,E[Re].disconnect(Ae))}for(let be=0;be<ce.added.length;be++){const Ae=ce.added[be];let Re=T.indexOf(Ae);if(Re===-1){for(let yt=0;yt<E.length;yt++)if(yt>=T.length){T.push(Ae),Re=yt;break}else if(T[yt]===null){T[yt]=Ae,Re=yt;break}if(Re===-1)break}const it=E[Re];it&&it.connect(Ae)}}const ee=new B,Ee=new B;function z(ce,be,Ae){ee.setFromMatrixPosition(be.matrixWorld),Ee.setFromMatrixPosition(Ae.matrixWorld);const Re=ee.distanceTo(Ee),it=be.projectionMatrix.elements,yt=Ae.projectionMatrix.elements,gt=it[14]/(it[10]-1),St=it[14]/(it[10]+1),Te=(it[9]+1)/it[5],Ie=(it[9]-1)/it[5],W=(it[8]-1)/it[0],lt=(yt[8]+1)/yt[0],Ue=gt*W,je=gt*lt,ke=Re/(-W+lt),_t=ke*-W;if(be.matrixWorld.decompose(ce.position,ce.quaternion,ce.scale),ce.translateX(_t),ce.translateZ(ke),ce.matrixWorld.compose(ce.position,ce.quaternion,ce.scale),ce.matrixWorldInverse.copy(ce.matrixWorld).invert(),it[10]===-1)ce.projectionMatrix.copy(be.projectionMatrix),ce.projectionMatrixInverse.copy(be.projectionMatrixInverse);else{const Xe=gt+ke,k=St+ke,D=Ue-_t,se=je+(Re-_t),ve=Te*St/k*Xe,Ce=Ie*St/k*Xe;ce.projectionMatrix.makePerspective(D,se,ve,Ce,Xe,k),ce.projectionMatrixInverse.copy(ce.projectionMatrix).invert()}}function te(ce,be){be===null?ce.matrixWorld.copy(ce.matrix):ce.matrixWorld.multiplyMatrices(be.matrixWorld,ce.matrix),ce.matrixWorldInverse.copy(ce.matrixWorld).invert()}this.updateCamera=function(ce){if(i===null)return;let be=ce.near,Ae=ce.far;M.texture!==null&&(M.depthNear>0&&(be=M.depthNear),M.depthFar>0&&(Ae=M.depthFar)),A.near=L.near=U.near=be,A.far=L.far=U.far=Ae,(O!==A.near||K!==A.far)&&(i.updateRenderState({depthNear:A.near,depthFar:A.far}),O=A.near,K=A.far),U.layers.mask=ce.layers.mask|2,L.layers.mask=ce.layers.mask|4,A.layers.mask=U.layers.mask|L.layers.mask;const Re=ce.parent,it=A.cameras;te(A,Re);for(let yt=0;yt<it.length;yt++)te(it[yt],Re);it.length===2?z(A,U,L):A.projectionMatrix.copy(U.projectionMatrix),Q(ce,A,Re)};function Q(ce,be,Ae){Ae===null?ce.matrix.copy(be.matrixWorld):(ce.matrix.copy(Ae.matrixWorld),ce.matrix.invert(),ce.matrix.multiply(be.matrixWorld)),ce.matrix.decompose(ce.position,ce.quaternion,ce.scale),ce.updateMatrixWorld(!0),ce.projectionMatrix.copy(be.projectionMatrix),ce.projectionMatrixInverse.copy(be.projectionMatrixInverse),ce.isPerspectiveCamera&&(ce.fov=qo*2*Math.atan(1/ce.projectionMatrix.elements[5]),ce.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(m===null&&g===null))return u},this.setFoveation=function(ce){u=ce,m!==null&&(m.fixedFoveation=ce),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=ce)},this.hasDepthSensing=function(){return M.texture!==null},this.getDepthSensingMesh=function(){return M.getMesh(A)};let fe=null;function xe(ce,be){if(f=be.getViewerPose(h||a),y=be,f!==null){const Ae=f.views;g!==null&&(e.setRenderTargetFramebuffer(w,g.framebuffer),e.setRenderTarget(w));let Re=!1;Ae.length!==A.cameras.length&&(A.cameras.length=0,Re=!0);for(let yt=0;yt<Ae.length;yt++){const gt=Ae[yt];let St=null;if(g!==null)St=g.getViewport(gt);else{const Ie=p.getViewSubImage(m,gt);St=Ie.viewport,yt===0&&(e.setRenderTargetTextures(w,Ie.colorTexture,m.ignoreDepthValues?void 0:Ie.depthStencilTexture),e.setRenderTarget(w))}let Te=R[yt];Te===void 0&&(Te=new yn,Te.layers.enable(yt),Te.viewport=new Wt,R[yt]=Te),Te.matrix.fromArray(gt.transform.matrix),Te.matrix.decompose(Te.position,Te.quaternion,Te.scale),Te.projectionMatrix.fromArray(gt.projectionMatrix),Te.projectionMatrixInverse.copy(Te.projectionMatrix).invert(),Te.viewport.set(St.x,St.y,St.width,St.height),yt===0&&(A.matrix.copy(Te.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),Re===!0&&A.cameras.push(Te)}const it=i.enabledFeatures;if(it&&it.includes("depth-sensing")){const yt=p.getDepthInformation(Ae[0]);yt&&yt.isValid&&yt.texture&&M.init(e,yt,i.renderState)}}for(let Ae=0;Ae<E.length;Ae++){const Re=T[Ae],it=E[Ae];Re!==null&&it!==void 0&&it.update(Re,be,h||a)}fe&&fe(ce,be),be.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:be}),y=null}const ze=new X_;ze.setAnimationLoop(xe),this.setAnimationLoop=function(ce){fe=ce},this.dispose=function(){}}}const Ms=new Ti,Tb=new Et;function bb(r,e){function t(x,_){x.matrixAutoUpdate===!0&&x.updateMatrix(),_.value.copy(x.matrix)}function n(x,_){_.color.getRGB(x.fogColor.value,V_(r)),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function i(x,_,w,E,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(x,_):_.isMeshToonMaterial?(s(x,_),p(x,_)):_.isMeshPhongMaterial?(s(x,_),f(x,_)):_.isMeshStandardMaterial?(s(x,_),m(x,_),_.isMeshPhysicalMaterial&&g(x,_,T)):_.isMeshMatcapMaterial?(s(x,_),y(x,_)):_.isMeshDepthMaterial?s(x,_):_.isMeshDistanceMaterial?(s(x,_),M(x,_)):_.isMeshNormalMaterial?s(x,_):_.isLineBasicMaterial?(a(x,_),_.isLineDashedMaterial&&c(x,_)):_.isPointsMaterial?u(x,_,w,E):_.isSpriteMaterial?h(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.bumpMap&&(x.bumpMap.value=_.bumpMap,t(_.bumpMap,x.bumpMapTransform),x.bumpScale.value=_.bumpScale,_.side===ti&&(x.bumpScale.value*=-1)),_.normalMap&&(x.normalMap.value=_.normalMap,t(_.normalMap,x.normalMapTransform),x.normalScale.value.copy(_.normalScale),_.side===ti&&x.normalScale.value.negate()),_.displacementMap&&(x.displacementMap.value=_.displacementMap,t(_.displacementMap,x.displacementMapTransform),x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,x.emissiveMapTransform)),_.specularMap&&(x.specularMap.value=_.specularMap,t(_.specularMap,x.specularMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const w=e.get(_),E=w.envMap,T=w.envMapRotation;E&&(x.envMap.value=E,Ms.copy(T),Ms.x*=-1,Ms.y*=-1,Ms.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(Ms.y*=-1,Ms.z*=-1),x.envMapRotation.value.setFromMatrix4(Tb.makeRotationFromEuler(Ms)),x.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap&&(x.lightMap.value=_.lightMap,x.lightMapIntensity.value=_.lightMapIntensity,t(_.lightMap,x.lightMapTransform)),_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,x.aoMapTransform))}function a(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform))}function c(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function u(x,_,w,E){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*w,x.scale.value=E*.5,_.map&&(x.map.value=_.map,t(_.map,x.uvTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function h(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map,t(_.map,x.mapTransform)),_.alphaMap&&(x.alphaMap.value=_.alphaMap,t(_.alphaMap,x.alphaMapTransform)),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest)}function f(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function p(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function m(x,_){x.metalness.value=_.metalness,_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,x.metalnessMapTransform)),x.roughness.value=_.roughness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,x.roughnessMapTransform)),_.envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function g(x,_,w){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,x.sheenColorMapTransform)),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,x.sheenRoughnessMapTransform))),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,x.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(x.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===ti&&x.clearcoatNormalScale.value.negate())),_.dispersion>0&&(x.dispersion.value=_.dispersion),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,x.iridescenceMapTransform)),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,x.transmissionMapTransform)),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(x.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(x.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,x.specularColorMapTransform)),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,_){_.matcap&&(x.matcap.value=_.matcap)}function M(x,_){const w=e.get(_).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Ab(r,e,t,n){let i={},s={},a=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(w,E){const T=E.program;n.uniformBlockBinding(w,T)}function h(w,E){let T=i[w.id];T===void 0&&(y(w),T=f(w),i[w.id]=T,w.addEventListener("dispose",x));const N=E.program;n.updateUBOMapping(w,N);const P=e.render.frame;s[w.id]!==P&&(m(w),s[w.id]=P)}function f(w){const E=p();w.__bindingPointIndex=E;const T=r.createBuffer(),N=w.__size,P=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,T),r.bufferData(r.UNIFORM_BUFFER,N,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,E,T),T}function p(){for(let w=0;w<c;w++)if(a.indexOf(w)===-1)return a.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const E=i[w.id],T=w.uniforms,N=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,E);for(let P=0,U=T.length;P<U;P++){const L=Array.isArray(T[P])?T[P]:[T[P]];for(let R=0,A=L.length;R<A;R++){const O=L[R];if(g(O,P,R,N)===!0){const K=O.__offset,J=Array.isArray(O.value)?O.value:[O.value];let $=0;for(let he=0;he<J.length;he++){const ee=J[he],Ee=M(ee);typeof ee=="number"||typeof ee=="boolean"?(O.__data[0]=ee,r.bufferSubData(r.UNIFORM_BUFFER,K+$,O.__data)):ee.isMatrix3?(O.__data[0]=ee.elements[0],O.__data[1]=ee.elements[1],O.__data[2]=ee.elements[2],O.__data[3]=0,O.__data[4]=ee.elements[3],O.__data[5]=ee.elements[4],O.__data[6]=ee.elements[5],O.__data[7]=0,O.__data[8]=ee.elements[6],O.__data[9]=ee.elements[7],O.__data[10]=ee.elements[8],O.__data[11]=0):(ee.toArray(O.__data,$),$+=Ee.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,K,O.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function g(w,E,T,N){const P=w.value,U=E+"_"+T;if(N[U]===void 0)return typeof P=="number"||typeof P=="boolean"?N[U]=P:N[U]=P.clone(),!0;{const L=N[U];if(typeof P=="number"||typeof P=="boolean"){if(L!==P)return N[U]=P,!0}else if(L.equals(P)===!1)return L.copy(P),!0}return!1}function y(w){const E=w.uniforms;let T=0;const N=16;for(let U=0,L=E.length;U<L;U++){const R=Array.isArray(E[U])?E[U]:[E[U]];for(let A=0,O=R.length;A<O;A++){const K=R[A],J=Array.isArray(K.value)?K.value:[K.value];for(let $=0,he=J.length;$<he;$++){const ee=J[$],Ee=M(ee),z=T%N,te=z%Ee.boundary,Q=z+te;T+=te,Q!==0&&N-Q<Ee.storage&&(T+=N-Q),K.__data=new Float32Array(Ee.storage/Float32Array.BYTES_PER_ELEMENT),K.__offset=T,T+=Ee.storage}}}const P=T%N;return P>0&&(T+=N-P),w.__size=T,w.__cache={},this}function M(w){const E={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(E.boundary=4,E.storage=4):w.isVector2?(E.boundary=8,E.storage=8):w.isVector3||w.isColor?(E.boundary=16,E.storage=12):w.isVector4?(E.boundary=16,E.storage=16):w.isMatrix3?(E.boundary=48,E.storage=48):w.isMatrix4?(E.boundary=64,E.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),E}function x(w){const E=w.target;E.removeEventListener("dispose",x);const T=a.indexOf(E.__bindingPointIndex);a.splice(T,1),r.deleteBuffer(i[E.id]),delete i[E.id],delete s[E.id]}function _(){for(const w in i)r.deleteBuffer(i[w]);a=[],i={},s={}}return{bind:u,update:h,dispose:_}}class Dp{constructor(e={}){const{canvas:t=B_(),context:n=null,depth:i=!0,stencil:s=!1,alpha:a=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:m=!1}=e;this.isWebGLRenderer=!0;let g;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");g=n.getContextAttributes().alpha}else g=a;const y=new Uint32Array(4),M=new Int32Array(4);let x=null,_=null;const w=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=$n,this.toneMapping=sr,this.toneMappingExposure=1;const T=this;let N=!1,P=0,U=0,L=null,R=-1,A=null;const O=new Wt,K=new Wt;let J=null;const $=new tt(0);let he=0,ee=t.width,Ee=t.height,z=1,te=null,Q=null;const fe=new Wt(0,0,ee,Ee),xe=new Wt(0,0,ee,Ee);let ze=!1;const ce=new Sl;let be=!1,Ae=!1;const Re=new Et,it=new Et,yt=new B,gt=new Wt,St={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Te=!1;function Ie(){return L===null?z:1}let W=n;function lt(C,H){return t.getContext(C,H)}try{const C={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${pl}`),t.addEventListener("webglcontextlost",Me,!1),t.addEventListener("webglcontextrestored",Ze,!1),t.addEventListener("webglcontextcreationerror",We,!1),W===null){const H="webgl2";if(W=lt(H,C),W===null)throw lt(H)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Ue,je,ke,_t,Xe,k,D,se,ve,Ce,ye,rt,Ge,qe,Rt,Ne,et,ht,ot,Ke,j,me,Fe,q;function oe(){Ue=new DE(W),Ue.init(),me=new j_(W,Ue),je=new AE(W,Ue,e,me),ke=new db(W,Ue),je.reverseDepthBuffer&&m&&ke.buffers.depth.setReversed(!0),_t=new FE(W),Xe=new eb,k=new yb(W,Ue,ke,Xe,je,me,_t),D=new RE(T),se=new LE(T),ve=new GS(W),Fe=new TE(W,ve),Ce=new UE(W,ve,_t,Fe),ye=new BE(W,Ce,ve,_t),ot=new OE(W,je,k),Ne=new CE(Xe),rt=new $T(T,D,se,Ue,je,Fe,Ne),Ge=new bb(T,Xe),qe=new nb,Rt=new lb(Ue),ht=new EE(T,D,se,ke,ye,g,u),et=new hb(T,ye,je),q=new Ab(W,_t,je,ke),Ke=new bE(W,Ue,_t),j=new NE(W,Ue,_t),_t.programs=rt.programs,T.capabilities=je,T.extensions=Ue,T.properties=Xe,T.renderLists=qe,T.shadowMap=et,T.state=ke,T.info=_t}oe();const de=new Eb(T,W);this.xr=de,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const C=Ue.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Ue.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(C){C!==void 0&&(z=C,this.setSize(ee,Ee,!1))},this.getSize=function(C){return C.set(ee,Ee)},this.setSize=function(C,H,X=!0){if(de.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ee=C,Ee=H,t.width=Math.floor(C*z),t.height=Math.floor(H*z),X===!0&&(t.style.width=C+"px",t.style.height=H+"px"),this.setViewport(0,0,C,H)},this.getDrawingBufferSize=function(C){return C.set(ee*z,Ee*z).floor()},this.setDrawingBufferSize=function(C,H,X){ee=C,Ee=H,z=X,t.width=Math.floor(C*X),t.height=Math.floor(H*X),this.setViewport(0,0,C,H)},this.getCurrentViewport=function(C){return C.copy(O)},this.getViewport=function(C){return C.copy(fe)},this.setViewport=function(C,H,X,Y){C.isVector4?fe.set(C.x,C.y,C.z,C.w):fe.set(C,H,X,Y),ke.viewport(O.copy(fe).multiplyScalar(z).round())},this.getScissor=function(C){return C.copy(xe)},this.setScissor=function(C,H,X,Y){C.isVector4?xe.set(C.x,C.y,C.z,C.w):xe.set(C,H,X,Y),ke.scissor(K.copy(xe).multiplyScalar(z).round())},this.getScissorTest=function(){return ze},this.setScissorTest=function(C){ke.setScissorTest(ze=C)},this.setOpaqueSort=function(C){te=C},this.setTransparentSort=function(C){Q=C},this.getClearColor=function(C){return C.copy(ht.getClearColor())},this.setClearColor=function(){ht.setClearColor.apply(ht,arguments)},this.getClearAlpha=function(){return ht.getClearAlpha()},this.setClearAlpha=function(){ht.setClearAlpha.apply(ht,arguments)},this.clear=function(C=!0,H=!0,X=!0){let Y=0;if(C){let G=!1;if(L!==null){const re=L.texture.format;G=re===mh||re===ph||re===_l}if(G){const re=L.texture.type,ae=re===fi||re===lr||re===Yo||re===Ys||re===fh||re===dh,Oe=ht.getClearColor(),Se=ht.getClearAlpha(),Pe=Oe.r,He=Oe.g,Le=Oe.b;ae?(y[0]=Pe,y[1]=He,y[2]=Le,y[3]=Se,W.clearBufferuiv(W.COLOR,0,y)):(M[0]=Pe,M[1]=He,M[2]=Le,M[3]=Se,W.clearBufferiv(W.COLOR,0,M))}else Y|=W.COLOR_BUFFER_BIT}H&&(Y|=W.DEPTH_BUFFER_BIT),X&&(Y|=W.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),W.clear(Y)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Me,!1),t.removeEventListener("webglcontextrestored",Ze,!1),t.removeEventListener("webglcontextcreationerror",We,!1),qe.dispose(),Rt.dispose(),Xe.dispose(),D.dispose(),se.dispose(),ye.dispose(),Fe.dispose(),q.dispose(),rt.dispose(),de.dispose(),de.removeEventListener("sessionstart",to),de.removeEventListener("sessionend",no),qn.stop()};function Me(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function Ze(){console.log("THREE.WebGLRenderer: Context Restored."),N=!1;const C=_t.autoReset,H=et.enabled,X=et.autoUpdate,Y=et.needsUpdate,G=et.type;oe(),_t.autoReset=C,et.enabled=H,et.autoUpdate=X,et.needsUpdate=Y,et.type=G}function We(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function vt(C){const H=C.target;H.removeEventListener("dispose",vt),kt(H)}function kt(C){tn(C),Xe.remove(C)}function tn(C){const H=Xe.get(C).programs;H!==void 0&&(H.forEach(function(X){rt.releaseProgram(X)}),C.isShaderMaterial&&rt.releaseShaderCache(C))}this.renderBufferDirect=function(C,H,X,Y,G,re){H===null&&(H=St);const ae=G.isMesh&&G.matrixWorld.determinant()<0,Oe=Z(C,H,X,Y,G);ke.setMaterial(Y,ae);let Se=X.index,Pe=1;if(Y.wireframe===!0){if(Se=Ce.getWireframeAttribute(X),Se===void 0)return;Pe=2}const He=X.drawRange,Le=X.attributes.position;let nt=He.start*Pe,ct=(He.start+He.count)*Pe;re!==null&&(nt=Math.max(nt,re.start*Pe),ct=Math.min(ct,(re.start+re.count)*Pe)),Se!==null?(nt=Math.max(nt,0),ct=Math.min(ct,Se.count)):Le!=null&&(nt=Math.max(nt,0),ct=Math.min(ct,Le.count));const $e=ct-nt;if($e<0||$e===1/0)return;Fe.setup(G,Y,Oe,X,Se);let dt,st=Ke;if(Se!==null&&(dt=ve.get(Se),st=j,st.setIndex(dt)),G.isMesh)Y.wireframe===!0?(ke.setLineWidth(Y.wireframeLinewidth*Ie()),st.setMode(W.LINES)):st.setMode(W.TRIANGLES);else if(G.isLine){let Ve=Y.linewidth;Ve===void 0&&(Ve=1),ke.setLineWidth(Ve*Ie()),G.isLineSegments?st.setMode(W.LINES):G.isLineLoop?st.setMode(W.LINE_LOOP):st.setMode(W.LINE_STRIP)}else G.isPoints?st.setMode(W.POINTS):G.isSprite&&st.setMode(W.TRIANGLES);if(G.isBatchedMesh)if(G._multiDrawInstances!==null)st.renderMultiDrawInstances(G._multiDrawStarts,G._multiDrawCounts,G._multiDrawCount,G._multiDrawInstances);else if(Ue.get("WEBGL_multi_draw"))st.renderMultiDraw(G._multiDrawStarts,G._multiDrawCounts,G._multiDrawCount);else{const Ve=G._multiDrawStarts,wt=G._multiDrawCounts,pt=G._multiDrawCount,Qt=Se?ve.get(Se).bytesPerElement:1,nn=Xe.get(Y).currentProgram.getUniforms();for(let Jt=0;Jt<pt;Jt++)nn.setValue(W,"_gl_DrawID",Jt),st.render(Ve[Jt]/Qt,wt[Jt])}else if(G.isInstancedMesh)st.renderInstances(nt,$e,G.count);else if(X.isInstancedBufferGeometry){const Ve=X._maxInstanceCount!==void 0?X._maxInstanceCount:1/0,wt=Math.min(X.instanceCount,Ve);st.renderInstances(nt,$e,wt)}else st.render(nt,$e)};function Ut(C,H,X){C.transparent===!0&&C.side===Wi&&C.forceSinglePass===!1?(C.side=ti,C.needsUpdate=!0,Dr(C,H,X),C.side=Pr,C.needsUpdate=!0,Dr(C,H,X),C.side=Wi):Dr(C,H,X)}this.compile=function(C,H,X=null){X===null&&(X=C),_=Rt.get(X),_.init(H),E.push(_),X.traverseVisible(function(G){G.isLight&&G.layers.test(H.layers)&&(_.pushLight(G),G.castShadow&&_.pushShadow(G))}),C!==X&&C.traverseVisible(function(G){G.isLight&&G.layers.test(H.layers)&&(_.pushLight(G),G.castShadow&&_.pushShadow(G))}),_.setupLights();const Y=new Set;return C.traverse(function(G){if(!(G.isMesh||G.isPoints||G.isLine||G.isSprite))return;const re=G.material;if(re)if(Array.isArray(re))for(let ae=0;ae<re.length;ae++){const Oe=re[ae];Ut(Oe,X,G),Y.add(Oe)}else Ut(re,X,G),Y.add(re)}),E.pop(),_=null,Y},this.compileAsync=function(C,H,X=null){const Y=this.compile(C,H,X);return new Promise(G=>{function re(){if(Y.forEach(function(ae){Xe.get(ae).currentProgram.isReady()&&Y.delete(ae)}),Y.size===0){G(C);return}setTimeout(re,10)}Ue.get("KHR_parallel_shader_compile")!==null?re():setTimeout(re,10)})};let dn=null;function Cn(C){dn&&dn(C)}function to(){qn.stop()}function no(){qn.start()}const qn=new X_;qn.setAnimationLoop(Cn),typeof self<"u"&&qn.setContext(self),this.setAnimationLoop=function(C){dn=C,de.setAnimationLoop(C),C===null?qn.stop():qn.start()},de.addEventListener("sessionstart",to),de.addEventListener("sessionend",no),this.render=function(C,H){if(H!==void 0&&H.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(N===!0)return;if(C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),H.parent===null&&H.matrixWorldAutoUpdate===!0&&H.updateMatrixWorld(),de.enabled===!0&&de.isPresenting===!0&&(de.cameraAutoUpdate===!0&&de.updateCamera(H),H=de.getCamera()),C.isScene===!0&&C.onBeforeRender(T,C,H,L),_=Rt.get(C,E.length),_.init(H),E.push(_),it.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),ce.setFromProjectionMatrix(it),Ae=this.localClippingEnabled,be=Ne.init(this.clippingPlanes,Ae),x=qe.get(C,w.length),x.init(),w.push(x),de.enabled===!0&&de.isPresenting===!0){const re=T.xr.getDepthSensingMesh();re!==null&&fr(re,H,-1/0,T.sortObjects)}fr(C,H,0,T.sortObjects),x.finish(),T.sortObjects===!0&&x.sort(te,Q),Te=de.enabled===!1||de.isPresenting===!1||de.hasDepthSensing()===!1,Te&&ht.addToRenderList(x,C),this.info.render.frame++,be===!0&&Ne.beginShadows();const X=_.state.shadowsArray;et.render(X,C,H),be===!0&&Ne.endShadows(),this.info.autoReset===!0&&this.info.reset();const Y=x.opaque,G=x.transmissive;if(_.setupLights(),H.isArrayCamera){const re=H.cameras;if(G.length>0)for(let ae=0,Oe=re.length;ae<Oe;ae++){const Se=re[ae];si(Y,G,C,Se)}Te&&ht.render(C);for(let ae=0,Oe=re.length;ae<Oe;ae++){const Se=re[ae];Zi(x,C,Se,Se.viewport)}}else G.length>0&&si(Y,G,C,H),Te&&ht.render(C),Zi(x,C,H);L!==null&&(k.updateMultisampleRenderTarget(L),k.updateRenderTargetMipmap(L)),C.isScene===!0&&C.onAfterRender(T,C,H),Fe.resetDefaultState(),R=-1,A=null,E.pop(),E.length>0?(_=E[E.length-1],be===!0&&Ne.setGlobalState(T.clippingPlanes,_.state.camera)):_=null,w.pop(),w.length>0?x=w[w.length-1]:x=null};function fr(C,H,X,Y){if(C.visible===!1)return;if(C.layers.test(H.layers)){if(C.isGroup)X=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(H);else if(C.isLight)_.pushLight(C),C.castShadow&&_.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||ce.intersectsSprite(C)){Y&&gt.setFromMatrixPosition(C.matrixWorld).applyMatrix4(it);const ae=ye.update(C),Oe=C.material;Oe.visible&&x.push(C,ae,Oe,X,gt.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||ce.intersectsObject(C))){const ae=ye.update(C),Oe=C.material;if(Y&&(C.boundingSphere!==void 0?(C.boundingSphere===null&&C.computeBoundingSphere(),gt.copy(C.boundingSphere.center)):(ae.boundingSphere===null&&ae.computeBoundingSphere(),gt.copy(ae.boundingSphere.center)),gt.applyMatrix4(C.matrixWorld).applyMatrix4(it)),Array.isArray(Oe)){const Se=ae.groups;for(let Pe=0,He=Se.length;Pe<He;Pe++){const Le=Se[Pe],nt=Oe[Le.materialIndex];nt&&nt.visible&&x.push(C,ae,nt,X,gt.z,Le)}}else Oe.visible&&x.push(C,ae,Oe,X,gt.z,null)}}const re=C.children;for(let ae=0,Oe=re.length;ae<Oe;ae++)fr(re[ae],H,X,Y)}function Zi(C,H,X,Y){const G=C.opaque,re=C.transmissive,ae=C.transparent;_.setupLightsView(X),be===!0&&Ne.setGlobalState(T.clippingPlanes,X),Y&&ke.viewport(O.copy(Y)),G.length>0&&It(G,H,X),re.length>0&&It(re,H,X),ae.length>0&&It(ae,H,X),ke.buffers.depth.setTest(!0),ke.buffers.depth.setMask(!0),ke.buffers.color.setMask(!0),ke.setPolygonOffset(!1)}function si(C,H,X,Y){if((X.isScene===!0?X.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[Y.id]===void 0&&(_.state.transmissionRenderTarget[Y.id]=new Ei(1,1,{generateMipmaps:!0,type:Ue.has("EXT_color_buffer_half_float")||Ue.has("EXT_color_buffer_float")?Un:fi,minFilter:nr,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Vt.workingColorSpace}));const re=_.state.transmissionRenderTarget[Y.id],ae=Y.viewport||O;re.setSize(ae.z,ae.w);const Oe=T.getRenderTarget();T.setRenderTarget(re),T.getClearColor($),he=T.getClearAlpha(),he<1&&T.setClearColor(16777215,.5),T.clear(),Te&&ht.render(X);const Se=T.toneMapping;T.toneMapping=sr;const Pe=Y.viewport;if(Y.viewport!==void 0&&(Y.viewport=void 0),_.setupLightsView(Y),be===!0&&Ne.setGlobalState(T.clippingPlanes,Y),It(C,X,Y),k.updateMultisampleRenderTarget(re),k.updateRenderTargetMipmap(re),Ue.has("WEBGL_multisampled_render_to_texture")===!1){let He=!1;for(let Le=0,nt=H.length;Le<nt;Le++){const ct=H[Le],$e=ct.object,dt=ct.geometry,st=ct.material,Ve=ct.group;if(st.side===Wi&&$e.layers.test(Y.layers)){const wt=st.side;st.side=ti,st.needsUpdate=!0,os($e,X,Y,dt,st,Ve),st.side=wt,st.needsUpdate=!0,He=!0}}He===!0&&(k.updateMultisampleRenderTarget(re),k.updateRenderTargetMipmap(re))}T.setRenderTarget(Oe),T.setClearColor($,he),Pe!==void 0&&(Y.viewport=Pe),T.toneMapping=Se}function It(C,H,X){const Y=H.isScene===!0?H.overrideMaterial:null;for(let G=0,re=C.length;G<re;G++){const ae=C[G],Oe=ae.object,Se=ae.geometry,Pe=Y===null?ae.material:Y,He=ae.group;Oe.layers.test(X.layers)&&os(Oe,H,X,Se,Pe,He)}}function os(C,H,X,Y,G,re){C.onBeforeRender(T,H,X,Y,G,re),C.modelViewMatrix.multiplyMatrices(X.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),G.onBeforeRender(T,H,X,Y,C,re),G.transparent===!0&&G.side===Wi&&G.forceSinglePass===!1?(G.side=ti,G.needsUpdate=!0,T.renderBufferDirect(X,H,Y,G,C,re),G.side=Pr,G.needsUpdate=!0,T.renderBufferDirect(X,H,Y,G,C,re),G.side=Wi):T.renderBufferDirect(X,H,Y,G,C,re),C.onAfterRender(T,H,X,Y,G,re)}function Dr(C,H,X){H.isScene!==!0&&(H=St);const Y=Xe.get(C),G=_.state.lights,re=_.state.shadowsArray,ae=G.state.version,Oe=rt.getParameters(C,G.state,re,H,X),Se=rt.getProgramCacheKey(Oe);let Pe=Y.programs;Y.environment=C.isMeshStandardMaterial?H.environment:null,Y.fog=H.fog,Y.envMap=(C.isMeshStandardMaterial?se:D).get(C.envMap||Y.environment),Y.envMapRotation=Y.environment!==null&&C.envMap===null?H.environmentRotation:C.envMapRotation,Pe===void 0&&(C.addEventListener("dispose",vt),Pe=new Map,Y.programs=Pe);let He=Pe.get(Se);if(He!==void 0){if(Y.currentProgram===He&&Y.lightsStateVersion===ae)return F(C,Oe),He}else Oe.uniforms=rt.getUniforms(C),C.onBeforeCompile(Oe,T),He=rt.acquireProgram(Oe,Se),Pe.set(Se,He),Y.uniforms=Oe.uniforms;const Le=Y.uniforms;return(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(Le.clippingPlanes=Ne.uniform),F(C,Oe),Y.needsLights=ge(C),Y.lightsStateVersion=ae,Y.needsLights&&(Le.ambientLightColor.value=G.state.ambient,Le.lightProbe.value=G.state.probe,Le.directionalLights.value=G.state.directional,Le.directionalLightShadows.value=G.state.directionalShadow,Le.spotLights.value=G.state.spot,Le.spotLightShadows.value=G.state.spotShadow,Le.rectAreaLights.value=G.state.rectArea,Le.ltc_1.value=G.state.rectAreaLTC1,Le.ltc_2.value=G.state.rectAreaLTC2,Le.pointLights.value=G.state.point,Le.pointLightShadows.value=G.state.pointShadow,Le.hemisphereLights.value=G.state.hemi,Le.directionalShadowMap.value=G.state.directionalShadowMap,Le.directionalShadowMatrix.value=G.state.directionalShadowMatrix,Le.spotShadowMap.value=G.state.spotShadowMap,Le.spotLightMatrix.value=G.state.spotLightMatrix,Le.spotLightMap.value=G.state.spotLightMap,Le.pointShadowMap.value=G.state.pointShadowMap,Le.pointShadowMatrix.value=G.state.pointShadowMatrix),Y.currentProgram=He,Y.uniformsList=null,He}function I(C){if(C.uniformsList===null){const H=C.currentProgram.getUniforms();C.uniformsList=Mu.seqWithValue(H.seq,C.uniforms)}return C.uniformsList}function F(C,H){const X=Xe.get(C);X.outputColorSpace=H.outputColorSpace,X.batching=H.batching,X.batchingColor=H.batchingColor,X.instancing=H.instancing,X.instancingColor=H.instancingColor,X.instancingMorph=H.instancingMorph,X.skinning=H.skinning,X.morphTargets=H.morphTargets,X.morphNormals=H.morphNormals,X.morphColors=H.morphColors,X.morphTargetsCount=H.morphTargetsCount,X.numClippingPlanes=H.numClippingPlanes,X.numIntersection=H.numClipIntersection,X.vertexAlphas=H.vertexAlphas,X.vertexTangents=H.vertexTangents,X.toneMapping=H.toneMapping}function Z(C,H,X,Y,G){H.isScene!==!0&&(H=St),k.resetTextureUnits();const re=H.fog,ae=Y.isMeshStandardMaterial?H.environment:null,Oe=L===null?T.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:cr,Se=(Y.isMeshStandardMaterial?se:D).get(Y.envMap||ae),Pe=Y.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,He=!!X.attributes.tangent&&(!!Y.normalMap||Y.anisotropy>0),Le=!!X.morphAttributes.position,nt=!!X.morphAttributes.normal,ct=!!X.morphAttributes.color;let $e=sr;Y.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&($e=T.toneMapping);const dt=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,st=dt!==void 0?dt.length:0,Ve=Xe.get(Y),wt=_.state.lights;if(be===!0&&(Ae===!0||C!==A)){const zt=C===A&&Y.id===R;Ne.setState(Y,C,zt)}let pt=!1;Y.version===Ve.__version?(Ve.needsLights&&Ve.lightsStateVersion!==wt.state.version||Ve.outputColorSpace!==Oe||G.isBatchedMesh&&Ve.batching===!1||!G.isBatchedMesh&&Ve.batching===!0||G.isBatchedMesh&&Ve.batchingColor===!0&&G.colorTexture===null||G.isBatchedMesh&&Ve.batchingColor===!1&&G.colorTexture!==null||G.isInstancedMesh&&Ve.instancing===!1||!G.isInstancedMesh&&Ve.instancing===!0||G.isSkinnedMesh&&Ve.skinning===!1||!G.isSkinnedMesh&&Ve.skinning===!0||G.isInstancedMesh&&Ve.instancingColor===!0&&G.instanceColor===null||G.isInstancedMesh&&Ve.instancingColor===!1&&G.instanceColor!==null||G.isInstancedMesh&&Ve.instancingMorph===!0&&G.morphTexture===null||G.isInstancedMesh&&Ve.instancingMorph===!1&&G.morphTexture!==null||Ve.envMap!==Se||Y.fog===!0&&Ve.fog!==re||Ve.numClippingPlanes!==void 0&&(Ve.numClippingPlanes!==Ne.numPlanes||Ve.numIntersection!==Ne.numIntersection)||Ve.vertexAlphas!==Pe||Ve.vertexTangents!==He||Ve.morphTargets!==Le||Ve.morphNormals!==nt||Ve.morphColors!==ct||Ve.toneMapping!==$e||Ve.morphTargetsCount!==st)&&(pt=!0):(pt=!0,Ve.__version=Y.version);let Qt=Ve.currentProgram;pt===!0&&(Qt=Dr(Y,H,G));let nn=!1,Jt=!1,Ht=!1;const Tt=Qt.getUniforms(),Nt=Ve.uniforms;if(ke.useProgram(Qt.program)&&(nn=!0,Jt=!0,Ht=!0),Y.id!==R&&(R=Y.id,Jt=!0),nn||A!==C){ke.buffers.depth.getReversed()?(Re.copy(C.projectionMatrix),mS(Re),gS(Re),Tt.setValue(W,"projectionMatrix",Re)):Tt.setValue(W,"projectionMatrix",C.projectionMatrix),Tt.setValue(W,"viewMatrix",C.matrixWorldInverse);const Rn=Tt.map.cameraPosition;Rn!==void 0&&Rn.setValue(W,yt.setFromMatrixPosition(C.matrixWorld)),je.logarithmicDepthBuffer&&Tt.setValue(W,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&Tt.setValue(W,"isOrthographic",C.isOrthographicCamera===!0),A!==C&&(A=C,Jt=!0,Ht=!0)}if(G.isSkinnedMesh){Tt.setOptional(W,G,"bindMatrix"),Tt.setOptional(W,G,"bindMatrixInverse");const zt=G.skeleton;zt&&(zt.boneTexture===null&&zt.computeBoneTexture(),Tt.setValue(W,"boneTexture",zt.boneTexture,k))}G.isBatchedMesh&&(Tt.setOptional(W,G,"batchingTexture"),Tt.setValue(W,"batchingTexture",G._matricesTexture,k),Tt.setOptional(W,G,"batchingIdTexture"),Tt.setValue(W,"batchingIdTexture",G._indirectTexture,k),Tt.setOptional(W,G,"batchingColorTexture"),G._colorsTexture!==null&&Tt.setValue(W,"batchingColorTexture",G._colorsTexture,k));const Bt=X.morphAttributes;if((Bt.position!==void 0||Bt.normal!==void 0||Bt.color!==void 0)&&ot.update(G,X,Qt),(Jt||Ve.receiveShadow!==G.receiveShadow)&&(Ve.receiveShadow=G.receiveShadow,Tt.setValue(W,"receiveShadow",G.receiveShadow)),Y.isMeshGouraudMaterial&&Y.envMap!==null&&(Nt.envMap.value=Se,Nt.flipEnvMap.value=Se.isCubeTexture&&Se.isRenderTargetTexture===!1?-1:1),Y.isMeshStandardMaterial&&Y.envMap===null&&H.environment!==null&&(Nt.envMapIntensity.value=H.environmentIntensity),Jt&&(Tt.setValue(W,"toneMappingExposure",T.toneMappingExposure),Ve.needsLights&&ue(Nt,Ht),re&&Y.fog===!0&&Ge.refreshFogUniforms(Nt,re),Ge.refreshMaterialUniforms(Nt,Y,z,Ee,_.state.transmissionRenderTarget[C.id]),Mu.upload(W,I(Ve),Nt,k)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(Mu.upload(W,I(Ve),Nt,k),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&Tt.setValue(W,"center",G.center),Tt.setValue(W,"modelViewMatrix",G.modelViewMatrix),Tt.setValue(W,"normalMatrix",G.normalMatrix),Tt.setValue(W,"modelMatrix",G.matrixWorld),Y.isShaderMaterial||Y.isRawShaderMaterial){const zt=Y.uniformsGroups;for(let Rn=0,an=zt.length;Rn<an;Rn++){const pi=zt[Rn];q.update(pi,Qt),q.bind(pi,Qt)}}return Qt}function ue(C,H){C.ambientLightColor.needsUpdate=H,C.lightProbe.needsUpdate=H,C.directionalLights.needsUpdate=H,C.directionalLightShadows.needsUpdate=H,C.pointLights.needsUpdate=H,C.pointLightShadows.needsUpdate=H,C.spotLights.needsUpdate=H,C.spotLightShadows.needsUpdate=H,C.rectAreaLights.needsUpdate=H,C.hemisphereLights.needsUpdate=H}function ge(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return P},this.getActiveMipmapLevel=function(){return U},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(C,H,X){Xe.get(C.texture).__webglTexture=H,Xe.get(C.depthTexture).__webglTexture=X;const Y=Xe.get(C);Y.__hasExternalTextures=!0,Y.__autoAllocateDepthBuffer=X===void 0,Y.__autoAllocateDepthBuffer||Ue.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Y.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(C,H){const X=Xe.get(C);X.__webglFramebuffer=H,X.__useDefaultFramebuffer=H===void 0},this.setRenderTarget=function(C,H=0,X=0){L=C,P=H,U=X;let Y=!0,G=null,re=!1,ae=!1;if(C){const Se=Xe.get(C);if(Se.__useDefaultFramebuffer!==void 0)ke.bindFramebuffer(W.FRAMEBUFFER,null),Y=!1;else if(Se.__webglFramebuffer===void 0)k.setupRenderTarget(C);else if(Se.__hasExternalTextures)k.rebindTextures(C,Xe.get(C.texture).__webglTexture,Xe.get(C.depthTexture).__webglTexture);else if(C.depthBuffer){const Le=C.depthTexture;if(Se.__boundDepthTexture!==Le){if(Le!==null&&Xe.has(Le)&&(C.width!==Le.image.width||C.height!==Le.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");k.setupDepthRenderbuffer(C)}}const Pe=C.texture;(Pe.isData3DTexture||Pe.isDataArrayTexture||Pe.isCompressedArrayTexture)&&(ae=!0);const He=Xe.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Array.isArray(He[H])?G=He[H][X]:G=He[H],re=!0):C.samples>0&&k.useMultisampledRTT(C)===!1?G=Xe.get(C).__webglMultisampledFramebuffer:Array.isArray(He)?G=He[X]:G=He,O.copy(C.viewport),K.copy(C.scissor),J=C.scissorTest}else O.copy(fe).multiplyScalar(z).floor(),K.copy(xe).multiplyScalar(z).floor(),J=ze;if(ke.bindFramebuffer(W.FRAMEBUFFER,G)&&Y&&ke.drawBuffers(C,G),ke.viewport(O),ke.scissor(K),ke.setScissorTest(J),re){const Se=Xe.get(C.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+H,Se.__webglTexture,X)}else if(ae){const Se=Xe.get(C.texture),Pe=H||0;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,Se.__webglTexture,X||0,Pe)}R=-1},this.readRenderTargetPixels=function(C,H,X,Y,G,re,ae){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Oe=Xe.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&ae!==void 0&&(Oe=Oe[ae]),Oe){ke.bindFramebuffer(W.FRAMEBUFFER,Oe);try{const Se=C.texture,Pe=Se.format,He=Se.type;if(!je.textureFormatReadable(Pe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!je.textureTypeReadable(He)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}H>=0&&H<=C.width-Y&&X>=0&&X<=C.height-G&&W.readPixels(H,X,Y,G,me.convert(Pe),me.convert(He),re)}finally{const Se=L!==null?Xe.get(L).__webglFramebuffer:null;ke.bindFramebuffer(W.FRAMEBUFFER,Se)}}},this.readRenderTargetPixelsAsync=async function(C,H,X,Y,G,re,ae){if(!(C&&C.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Oe=Xe.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&ae!==void 0&&(Oe=Oe[ae]),Oe){const Se=C.texture,Pe=Se.format,He=Se.type;if(!je.textureFormatReadable(Pe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!je.textureTypeReadable(He))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(H>=0&&H<=C.width-Y&&X>=0&&X<=C.height-G){ke.bindFramebuffer(W.FRAMEBUFFER,Oe);const Le=W.createBuffer();W.bindBuffer(W.PIXEL_PACK_BUFFER,Le),W.bufferData(W.PIXEL_PACK_BUFFER,re.byteLength,W.STREAM_READ),W.readPixels(H,X,Y,G,me.convert(Pe),me.convert(He),0);const nt=L!==null?Xe.get(L).__webglFramebuffer:null;ke.bindFramebuffer(W.FRAMEBUFFER,nt);const ct=W.fenceSync(W.SYNC_GPU_COMMANDS_COMPLETE,0);return W.flush(),await pS(W,ct,4),W.bindBuffer(W.PIXEL_PACK_BUFFER,Le),W.getBufferSubData(W.PIXEL_PACK_BUFFER,0,re),W.deleteBuffer(Le),W.deleteSync(ct),re}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(C,H=null,X=0){C.isTexture!==!0&&(Fa("WebGLRenderer: copyFramebufferToTexture function signature has changed."),H=arguments[0]||null,C=arguments[1]);const Y=Math.pow(2,-X),G=Math.floor(C.image.width*Y),re=Math.floor(C.image.height*Y),ae=H!==null?H.x:0,Oe=H!==null?H.y:0;k.setTexture2D(C,0),W.copyTexSubImage2D(W.TEXTURE_2D,X,0,0,ae,Oe,G,re),ke.unbindTexture()},this.copyTextureToTexture=function(C,H,X=null,Y=null,G=0){C.isTexture!==!0&&(Fa("WebGLRenderer: copyTextureToTexture function signature has changed."),Y=arguments[0]||null,C=arguments[1],H=arguments[2],G=arguments[3]||0,X=null);let re,ae,Oe,Se,Pe,He,Le,nt,ct;const $e=C.isCompressedTexture?C.mipmaps[G]:C.image;X!==null?(re=X.max.x-X.min.x,ae=X.max.y-X.min.y,Oe=X.isBox3?X.max.z-X.min.z:1,Se=X.min.x,Pe=X.min.y,He=X.isBox3?X.min.z:0):(re=$e.width,ae=$e.height,Oe=$e.depth||1,Se=0,Pe=0,He=0),Y!==null?(Le=Y.x,nt=Y.y,ct=Y.z):(Le=0,nt=0,ct=0);const dt=me.convert(H.format),st=me.convert(H.type);let Ve;H.isData3DTexture?(k.setTexture3D(H,0),Ve=W.TEXTURE_3D):H.isDataArrayTexture||H.isCompressedArrayTexture?(k.setTexture2DArray(H,0),Ve=W.TEXTURE_2D_ARRAY):(k.setTexture2D(H,0),Ve=W.TEXTURE_2D),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,H.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,H.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,H.unpackAlignment);const wt=W.getParameter(W.UNPACK_ROW_LENGTH),pt=W.getParameter(W.UNPACK_IMAGE_HEIGHT),Qt=W.getParameter(W.UNPACK_SKIP_PIXELS),nn=W.getParameter(W.UNPACK_SKIP_ROWS),Jt=W.getParameter(W.UNPACK_SKIP_IMAGES);W.pixelStorei(W.UNPACK_ROW_LENGTH,$e.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,$e.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,Se),W.pixelStorei(W.UNPACK_SKIP_ROWS,Pe),W.pixelStorei(W.UNPACK_SKIP_IMAGES,He);const Ht=C.isDataArrayTexture||C.isData3DTexture,Tt=H.isDataArrayTexture||H.isData3DTexture;if(C.isRenderTargetTexture||C.isDepthTexture){const Nt=Xe.get(C),Bt=Xe.get(H),zt=Xe.get(Nt.__renderTarget),Rn=Xe.get(Bt.__renderTarget);ke.bindFramebuffer(W.READ_FRAMEBUFFER,zt.__webglFramebuffer),ke.bindFramebuffer(W.DRAW_FRAMEBUFFER,Rn.__webglFramebuffer);for(let an=0;an<Oe;an++)Ht&&W.framebufferTextureLayer(W.READ_FRAMEBUFFER,W.COLOR_ATTACHMENT0,Xe.get(C).__webglTexture,G,He+an),C.isDepthTexture?(Tt&&W.framebufferTextureLayer(W.DRAW_FRAMEBUFFER,W.COLOR_ATTACHMENT0,Xe.get(H).__webglTexture,G,ct+an),W.blitFramebuffer(Se,Pe,re,ae,Le,nt,re,ae,W.DEPTH_BUFFER_BIT,W.NEAREST)):Tt?W.copyTexSubImage3D(Ve,G,Le,nt,ct+an,Se,Pe,re,ae):W.copyTexSubImage2D(Ve,G,Le,nt,ct+an,Se,Pe,re,ae);ke.bindFramebuffer(W.READ_FRAMEBUFFER,null),ke.bindFramebuffer(W.DRAW_FRAMEBUFFER,null)}else Tt?C.isDataTexture||C.isData3DTexture?W.texSubImage3D(Ve,G,Le,nt,ct,re,ae,Oe,dt,st,$e.data):H.isCompressedArrayTexture?W.compressedTexSubImage3D(Ve,G,Le,nt,ct,re,ae,Oe,dt,$e.data):W.texSubImage3D(Ve,G,Le,nt,ct,re,ae,Oe,dt,st,$e):C.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,G,Le,nt,re,ae,dt,st,$e.data):C.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,G,Le,nt,$e.width,$e.height,dt,$e.data):W.texSubImage2D(W.TEXTURE_2D,G,Le,nt,re,ae,dt,st,$e);W.pixelStorei(W.UNPACK_ROW_LENGTH,wt),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,pt),W.pixelStorei(W.UNPACK_SKIP_PIXELS,Qt),W.pixelStorei(W.UNPACK_SKIP_ROWS,nn),W.pixelStorei(W.UNPACK_SKIP_IMAGES,Jt),G===0&&H.generateMipmaps&&W.generateMipmap(Ve),ke.unbindTexture()},this.copyTextureToTexture3D=function(C,H,X=null,Y=null,G=0){return C.isTexture!==!0&&(Fa("WebGLRenderer: copyTextureToTexture3D function signature has changed."),X=arguments[0]||null,Y=arguments[1]||null,C=arguments[2],H=arguments[3],G=arguments[4]||0),Fa('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(C,H,X,Y,G)},this.initRenderTarget=function(C){Xe.get(C).__webglFramebuffer===void 0&&k.setupRenderTarget(C)},this.initTexture=function(C){C.isCubeTexture?k.setTextureCube(C,0):C.isData3DTexture?k.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?k.setTexture2DArray(C,0):k.setTexture2D(C,0),ke.unbindTexture()},this.resetState=function(){P=0,U=0,L=null,ke.reset(),Fe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ir}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=Vt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Vt._getUnpackColorSpace()}}class yh{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new tt(e),this.density=t}clone(){return new yh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class xh{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new tt(e),this.near=t,this.far=n}clone(){return new xh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class wl extends Xt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ti,this.environmentIntensity=1,this.environmentRotation=new Ti,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Mh{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=tl,this.updateRanges=[],this.version=0,this.uuid=Si()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Si()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const jn=new B;class Zs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)jn.fromBufferAttribute(this,t),jn.applyMatrix4(e),this.setXYZ(t,jn.x,jn.y,jn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)jn.fromBufferAttribute(this,t),jn.applyNormalMatrix(e),this.setXYZ(t,jn.x,jn.y,jn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)jn.fromBufferAttribute(this,t),jn.transformDirection(e),this.setXYZ(t,jn.x,jn.y,jn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=ei(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Pt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Pt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ei(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ei(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ei(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ei(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Pt(t,this.array),n=Pt(n,this.array),i=Pt(i,this.array),s=Pt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new en(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Zs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Up extends Yn{static get type(){return"SpriteMaterial"}constructor(e){super(),this.isSpriteMaterial=!0,this.color=new tt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ro;const Ea=new B,Io=new B,Po=new B,Lo=new we,Ta=new we,Q_=new Et,Wc=new B,ba=new B,Xc=new B,Nv=new we,_d=new we,Fv=new we;class $_ extends Xt{constructor(e=new Up){if(super(),this.isSprite=!0,this.type="Sprite",Ro===void 0){Ro=new Dt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Mh(t,5);Ro.setIndex([0,1,2,0,2,3]),Ro.setAttribute("position",new Zs(n,3,0,!1)),Ro.setAttribute("uv",new Zs(n,2,3,!1))}this.geometry=Ro,this.material=e,this.center=new we(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Io.setFromMatrixScale(this.matrixWorld),Q_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Po.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Io.multiplyScalar(-Po.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;Yc(Wc.set(-.5,-.5,0),Po,a,Io,i,s),Yc(ba.set(.5,-.5,0),Po,a,Io,i,s),Yc(Xc.set(.5,.5,0),Po,a,Io,i,s),Nv.set(0,0),_d.set(1,0),Fv.set(1,1);let c=e.ray.intersectTriangle(Wc,ba,Xc,!1,Ea);if(c===null&&(Yc(ba.set(-.5,.5,0),Po,a,Io,i,s),_d.set(0,1),c=e.ray.intersectTriangle(Wc,Xc,ba,!1,Ea),c===null))return;const u=e.ray.origin.distanceTo(Ea);u<e.near||u>e.far||t.push({distance:u,point:Ea.clone(),uv:hi.getInterpolation(Ea,Wc,ba,Xc,Nv,_d,Fv,new we),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Yc(r,e,t,n,i,s){Lo.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Ta.x=s*Lo.x-i*Lo.y,Ta.y=i*Lo.x+s*Lo.y):Ta.copy(Lo),r.copy(e),r.x+=Ta.x,r.y+=Ta.y,r.applyMatrix4(Q_)}const qc=new B,Ov=new B;class ey extends Xt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){qc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(qc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){qc.setFromMatrixPosition(e.matrixWorld),Ov.setFromMatrixPosition(this.matrixWorld);const n=qc.distanceTo(Ov)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Bv=new B,zv=new Wt,kv=new Wt,Cb=new B,Hv=new Et,Zc=new B,yd=new Xn,Vv=new Et,xd=new js;class ty extends fn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Jd,this.bindMatrix=new Et,this.bindMatrixInverse=new Et,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new ni),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Zc),this.boundingBox.expandByPoint(Zc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Xn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Zc),this.boundingSphere.expandByPoint(Zc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),yd.copy(this.boundingSphere),yd.applyMatrix4(i),e.ray.intersectsSphere(yd)!==!1&&(Vv.copy(i).invert(),xd.copy(e.ray).applyMatrix4(Vv),!(this.boundingBox!==null&&xd.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,xd)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Wt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Jd?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===S_?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;zv.fromBufferAttribute(i.attributes.skinIndex,e),kv.fromBufferAttribute(i.attributes.skinWeight,e),Bv.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=kv.getComponent(s);if(a!==0){const c=zv.getComponent(s);Hv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(Cb.copy(Bv).applyMatrix4(Hv),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Np extends Xt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Xi extends $t{constructor(e=null,t=1,n=1,i,s,a,c,u,h=Fn,f=Fn,p,m){super(null,a,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Gv=new Et,Rb=new Et;class Sh{constructor(e=[],t=[]){this.uuid=Si(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Et)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Et;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const c=e[s]?e[s].matrixWorld:Rb;Gv.multiplyMatrices(c,t[s]),Gv.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Sh(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Xi(t,e,e,xn,hn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new Np),this.bones.push(a),this.boneInverses.push(new Et().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const a=t[i];e.bones.push(a.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Jo extends en{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Do=new Et,Wv=new Et,Jc=[],Xv=new ni,Ib=new Et,Aa=new fn,Ca=new Xn;class ny extends fn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Jo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Ib)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new ni),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Do),Xv.copy(e.boundingBox).applyMatrix4(Do),this.boundingBox.union(Xv)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Xn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Do),Ca.copy(e.boundingSphere).applyMatrix4(Do),this.boundingSphere.union(Ca)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,a=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[a+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Aa.geometry=this.geometry,Aa.material=this.material,Aa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ca.copy(this.boundingSphere),Ca.applyMatrix4(n),e.ray.intersectsSphere(Ca)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Do),Wv.multiplyMatrices(n,Do),Aa.matrixWorld=Wv,Aa.raycast(e,Jc);for(let a=0,c=Jc.length;a<c;a++){const u=Jc[a];u.instanceId=s,u.object=this,t.push(u)}Jc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Jo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Xi(new Float32Array(i*this.count),i,this.count,vl,hn));const s=this.morphTexture.source.data.data;let a=0;for(let h=0;h<n.length;h++)a+=n[h];const c=this.geometry.morphTargetsRelative?1:1-a,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function Md(r,e){return r-e}function Pb(r,e){return r.z-e.z}function Lb(r,e){return e.z-r.z}class Db{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const s=this.pool,a=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const c=s[this.index];a.push(c),this.index++,c.start=e,c.count=t,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const ci=new Et,Ub=new tt(1,1,1),Sd=new Sl,jc=new ni,Ss=new Xn,Ra=new B,Yv=new B,Nb=new B,wd=new Db,Gn=new fn,Kc=[];function Fb(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let a=0;a<n;a++)e.setComponent(s+t,a,r.getComponent(s,a))}else e.array.set(r.array,t*n);e.needsUpdate=!0}function ws(r,e){if(r.constructor!==e.constructor){const t=Math.min(r.length,e.length);for(let n=0;n<t;n++)e[n]=r[n]}else{const t=Math.min(r.length,e.length);e.set(new r.constructor(r.buffer,0,t))}}class iy extends fn{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,n=t*2,i){super(new Dt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Xi(t,e,e,xn,hn);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new Xi(t,e,e,_l,lr);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new Xi(t,e,e,xn,hn);n.colorSpace=Vt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const a=e.getAttribute(s),{array:c,itemSize:u,normalized:h}=a,f=new c.constructor(n*u),p=new en(f,u,h);t.setAttribute(s,p)}if(e.getIndex()!==null){const s=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new en(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ni);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,ci),this.getBoundingBoxAt(s,jc).applyMatrix4(ci),e.union(jc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Xn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,ci),this.getBoundingSphereAt(s,Ss).applyMatrix4(ci),e.union(Ss)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Md),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;ci.identity().toArray(s.image.data,i*16),s.needsUpdate=!0;const a=this._colorsTexture;return a&&(Ub.toArray(a.image.data,i*4),a.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const a=e.getIndex();if(a!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?a.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");let u;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Md),u=this._availableGeometryIds.shift(),s[u]=i):(u=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(u,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,u}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),a=t.getIndex(),c=this._geometryInfo[e];if(i&&a.count>c.reservedIndexCount||t.attributes.position.count>c.reservedVertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.reservedVertexCount;c.vertexCount=t.getAttribute("position").count;for(const f in n.attributes){const p=t.getAttribute(f),m=n.getAttribute(f);Fb(p,m,u);const g=p.itemSize;for(let y=p.count,M=h;y<M;y++){const x=u+y;for(let _=0;_<g;_++)m.setComponent(x,_,0)}m.needsUpdate=!0,m.addUpdateRange(u*g,h*g)}if(i){const f=c.indexStart,p=c.reservedIndexCount;c.indexCount=t.getIndex().count;for(let m=0;m<a.count;m++)s.setX(f+m,u+a.getX(m));for(let m=a.count,g=p;m<g;m++)s.setX(f+m,u);s.needsUpdate=!0,s.addUpdateRange(f,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,t.boundingBox!==null&&(c.boundingBox=t.boundingBox.clone()),c.boundingSphere=null,t.boundingSphere!==null&&(c.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,s=n.length;i<s;i++)n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?this:(t[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this)}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((a,c)=>c).sort((a,c)=>n[a].vertexStart-n[c].vertexStart),s=this.geometry;for(let a=0,c=n.length;a<c;a++){const u=i[a],h=n[u];if(h.active!==!1){if(s.index!==null){if(h.indexStart!==t){const{indexStart:f,vertexStart:p,reservedIndexCount:m}=h,g=s.index,y=g.array,M=e-p;for(let x=f;x<f+m;x++)y[x]=y[x]+M;g.array.copyWithin(t,f,f+m),g.addUpdateRange(t,m),h.indexStart=t}t+=h.reservedIndexCount}if(h.vertexStart!==e){const{vertexStart:f,reservedVertexCount:p}=h,m=s.attributes;for(const g in m){const y=m[g],{array:M,itemSize:x}=y;M.copyWithin(e*x,f*x,(f+p)*x),y.addUpdateRange(e*x,p*x)}h.vertexStart=e}e+=h.reservedVertexCount,h.start=s.index?h.indexStart:h.vertexStart,this._nextIndexStart=s.index?h.indexStart+h.reservedIndexCount:0,this._nextVertexStart=h.vertexStart+h.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const s=new ni,a=n.index,c=n.attributes.position;for(let u=i.start,h=i.start+i.count;u<h;u++){let f=u;a&&(f=a.getX(f)),s.expandByPoint(Ra.fromBufferAttribute(c,f))}i.boundingBox=s}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const s=new Xn;this.getBoundingBoxAt(e,jc),jc.getCenter(s.center);const a=n.index,c=n.attributes.position;let u=0;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;a&&(p=a.getX(p)),Ra.fromBufferAttribute(c,p),u=Math.max(u,s.center.distanceToSquared(Ra))}s.radius=Math.sqrt(u),i.boundingSphere=s}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){const n=this._instanceInfo,i=this._matricesTexture,s=this._matricesTexture.image.data;return e>=n.length||n[e].active===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._instanceInfo,i=this._matricesTexture.image.data;return e>=n.length||n[e].active===!1?null:t.fromArray(i,e*16)}setColorAt(e,t){this._colorsTexture===null&&this._initColorsTexture();const n=this._colorsTexture,i=this._colorsTexture.image.data,s=this._instanceInfo;return e>=s.length||s[e].active===!1?this:(t.toArray(i,e*4),n.needsUpdate=!0,this)}getColorAt(e,t){const n=this._colorsTexture.image.data,i=this._instanceInfo;return e>=i.length||i[e].active===!1?null:t.fromArray(n,e*4)}setVisibleAt(e,t){const n=this._instanceInfo;return e>=n.length||n[e].active===!1||n[e].visible===t?this:(n[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?!1:t[e].visible}setGeometryIdAt(e,t){const n=this._instanceInfo,i=this._geometryInfo;return e>=n.length||n[e].active===!1||t>=i.length||i[t].active===!1?null:(n[e].geometryIndex=t,this)}getGeometryIdAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?-1:t[e].geometryIndex}getGeometryRangeAt(e,t={}){if(e<0||e>=this._geometryCount)return null;const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Md);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),s=new Int32Array(e);ws(this._multiDrawCounts,i),ws(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=e;const a=this._indirectTexture,c=this._matricesTexture,u=this._colorsTexture;a.dispose(),this._initIndirectTexture(),ws(a.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),ws(c.image.data,this._matricesTexture.image.data),u&&(u.dispose(),this._initColorsTexture(),ws(u.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(u=>u.indexStart+u.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Dt,this._initializeGeometry(s));const a=this.geometry;s.index&&ws(s.index.array,a.index.array);for(const c in s.attributes)ws(s.attributes[c].array,a.attributes[c].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,a=this.geometry;Gn.material=this.material,Gn.geometry.index=a.index,Gn.geometry.attributes=a.attributes,Gn.geometry.boundingBox===null&&(Gn.geometry.boundingBox=new ni),Gn.geometry.boundingSphere===null&&(Gn.geometry.boundingSphere=new Xn);for(let c=0,u=n.length;c<u;c++){if(!n[c].visible||!n[c].active)continue;const h=n[c].geometryIndex,f=i[h];Gn.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(c,Gn.matrixWorld).premultiply(s),this.getBoundingBoxAt(h,Gn.geometry.boundingBox),this.getBoundingSphereAt(h,Gn.geometry.boundingSphere),Gn.raycast(e,Kc);for(let p=0,m=Kc.length;p<m;p++){const g=Kc[p];g.object=this,g.batchId=c,t.push(g)}Kc.length=0}Gn.material=null,Gn.geometry.index=null,Gn.geometry.attributes={},Gn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),c=a===null?1:a.array.BYTES_PER_ELEMENT,u=this._instanceInfo,h=this._multiDrawStarts,f=this._multiDrawCounts,p=this._geometryInfo,m=this.perObjectFrustumCulled,g=this._indirectTexture,y=g.image.data;m&&(ci.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Sd.setFromProjectionMatrix(ci,e.coordinateSystem));let M=0;if(this.sortObjects){ci.copy(this.matrixWorld).invert(),Ra.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ci),Yv.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ci);for(let w=0,E=u.length;w<E;w++)if(u[w].visible&&u[w].active){const T=u[w].geometryIndex;this.getMatrixAt(w,ci),this.getBoundingSphereAt(T,Ss).applyMatrix4(ci);let N=!1;if(m&&(N=!Sd.intersectsSphere(Ss)),!N){const P=p[T],U=Nb.subVectors(Ss.center,Ra).dot(Yv);wd.push(P.start,P.count,U,w)}}const x=wd.list,_=this.customSort;_===null?x.sort(s.transparent?Lb:Pb):_.call(this,x,n);for(let w=0,E=x.length;w<E;w++){const T=x[w];h[M]=T.start*c,f[M]=T.count,y[M]=T.index,M++}wd.reset()}else for(let x=0,_=u.length;x<_;x++)if(u[x].visible&&u[x].active){const w=u[x].geometryIndex;let E=!1;if(m&&(this.getMatrixAt(x,ci),this.getBoundingSphereAt(w,Ss).applyMatrix4(ci),E=!Sd.intersectsSphere(Ss)),!E){const T=p[w];h[M]=T.start*c,f[M]=T.count,y[M]=x,M++}}g.needsUpdate=!0,this._multiDrawCount=M,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,a){this.onBeforeRender(e,null,i,s,a)}}class ii extends Yn{static get type(){return"LineBasicMaterial"}constructor(e){super(),this.isLineBasicMaterial=!0,this.color=new tt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const sh=new B,oh=new B,qv=new Et,Ia=new js,Qc=new Xn,Ed=new B,Zv=new B;class ts extends Xt{constructor(e=new Dt,t=new ii){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)sh.fromBufferAttribute(t,i-1),oh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=sh.distanceTo(oh);e.setAttribute("lineDistance",new ut(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Qc.copy(n.boundingSphere),Qc.applyMatrix4(i),Qc.radius+=s,e.ray.intersectsSphere(Qc)===!1)return;qv.copy(i).invert(),Ia.copy(e.ray).applyMatrix4(qv);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=this.isLineSegments?2:1,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,a.start),y=Math.min(f.count,a.start+a.count);for(let M=g,x=y-1;M<x;M+=h){const _=f.getX(M),w=f.getX(M+1),E=$c(this,e,Ia,u,_,w);E&&t.push(E)}if(this.isLineLoop){const M=f.getX(y-1),x=f.getX(g),_=$c(this,e,Ia,u,M,x);_&&t.push(_)}}else{const g=Math.max(0,a.start),y=Math.min(m.count,a.start+a.count);for(let M=g,x=y-1;M<x;M+=h){const _=$c(this,e,Ia,u,M,M+1);_&&t.push(_)}if(this.isLineLoop){const M=$c(this,e,Ia,u,y-1,g);M&&t.push(M)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function $c(r,e,t,n,i,s){const a=r.geometry.attributes.position;if(sh.fromBufferAttribute(a,i),oh.fromBufferAttribute(a,s),t.distanceSqToSegment(sh,oh,Ed,Zv)>n)return;Ed.applyMatrix4(r.matrixWorld);const u=e.ray.origin.distanceTo(Ed);if(!(u<e.near||u>e.far))return{distance:u,point:Zv.clone().applyMatrix4(r.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:r}}const Jv=new B,jv=new B;class hr extends ts{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Jv.fromBufferAttribute(t,i),jv.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Jv.distanceTo(jv);e.setAttribute("lineDistance",new ut(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class ry extends ts{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Fp extends Yn{static get type(){return"PointsMaterial"}constructor(e){super(),this.isPointsMaterial=!0,this.color=new tt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Kv=new Et,np=new js,eu=new Xn,tu=new B;class sy extends Xt{constructor(e=new Dt,t=new Fp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),eu.copy(n.boundingSphere),eu.applyMatrix4(i),eu.radius+=s,e.ray.intersectsSphere(eu)===!1)return;Kv.copy(i).invert(),np.copy(e.ray).applyMatrix4(Kv);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),g=Math.min(h.count,a.start+a.count);for(let y=m,M=g;y<M;y++){const x=h.getX(y);tu.fromBufferAttribute(p,x),Qv(tu,x,u,i,e,t,this)}}else{const m=Math.max(0,a.start),g=Math.min(p.count,a.start+a.count);for(let y=m,M=g;y<M;y++)tu.fromBufferAttribute(p,y),Qv(tu,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Qv(r,e,t,n,i,s,a){const c=np.distanceSqToPoint(r);if(c<t){const u=new B;np.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class Ob extends $t{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Kt,this.magFilter=s!==void 0?s:Kt,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Bb extends $t{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Fn,this.minFilter=Fn,this.generateMipmaps=!1,this.needsUpdate=!0}}class wh extends $t{constructor(e,t,n,i,s,a,c,u,h,f,p,m){super(null,a,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class zb extends wh{constructor(e,t,n,i,s,a){super(e,t,n,s,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=En,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class kb extends wh{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ar),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Hb extends $t{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Yi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-a,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(s-1);const f=n[i],m=n[i+1]-f,g=(a-f)/m;return(i+g)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),c=this.getPoint(s),u=t||(a.isVector2?new we:new B);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new B,i=[],s=[],a=[],c=new B,u=new Et;for(let g=0;g<=e;g++){const y=g/e;i[g]=this.getTangentAt(y,new B)}s[0]=new B,a[0]=new B;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),a[0].crossVectors(i[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),a[g]=a[g-1].clone(),c.crossVectors(i[g-1],i[g]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(gn(i[g-1].dot(i[g]),-1,1));s[g].applyMatrix4(u.makeRotationAxis(c,y))}a[g].crossVectors(i[g],s[g])}if(t===!0){let g=Math.acos(gn(s[0].dot(s[e]),-1,1));g/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(g=-g);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],g*y)),a[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Eh extends Yi{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new we){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,g=h-this.aY;u=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class oy extends Eh{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Op(){let r=0,e=0,t=0,n=0;function i(s,a,c,u){r=s,e=c,t=-3*s+3*a-2*c-u,n=2*s-2*a+c+u}return{initCatmullRom:function(s,a,c,u,h){i(a,c,h*(c-s),h*(u-a))},initNonuniformCatmullRom:function(s,a,c,u,h,f,p){let m=(a-s)/h-(c-s)/(h+f)+(c-a)/f,g=(c-a)/f-(u-a)/(f+p)+(u-c)/p;m*=f,g*=f,i(a,c,m,g)},calc:function(s){const a=s*s,c=a*s;return r+e*s+t*a+n*c}}}const nu=new B,Td=new Op,bd=new Op,Ad=new Op;class ay extends Yi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new B){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(nu.subVectors(i[0],i[1]).add(i[0]),h=nu);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(nu.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=nu),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),g),M=Math.pow(p.distanceToSquared(m),g),x=Math.pow(m.distanceToSquared(f),g);M<1e-4&&(M=1),y<1e-4&&(y=M),x<1e-4&&(x=M),Td.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,M,x),bd.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,M,x),Ad.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,M,x)}else this.curveType==="catmullrom"&&(Td.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),bd.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),Ad.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(Td.calc(u),bd.calc(u),Ad.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new B().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function $v(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+a)*u+(-3*t+3*n-2*s-a)*c+s*r+t}function Vb(r,e){const t=1-r;return t*t*e}function Gb(r,e){return 2*(1-r)*r*e}function Wb(r,e){return r*r*e}function qa(r,e,t,n){return Vb(r,e)+Gb(r,t)+Wb(r,n)}function Xb(r,e){const t=1-r;return t*t*t*e}function Yb(r,e){const t=1-r;return 3*t*t*r*e}function qb(r,e){return 3*(1-r)*r*r*e}function Zb(r,e){return r*r*r*e}function Za(r,e,t,n,i){return Xb(r,e)+Yb(r,t)+qb(r,n)+Zb(r,i)}class Bp extends Yi{constructor(e=new we,t=new we,n=new we,i=new we){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new we){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(Za(e,i.x,s.x,a.x,c.x),Za(e,i.y,s.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ly extends Yi{constructor(e=new B,t=new B,n=new B,i=new B){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new B){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(Za(e,i.x,s.x,a.x,c.x),Za(e,i.y,s.y,a.y,c.y),Za(e,i.z,s.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class zp extends Yi{constructor(e=new we,t=new we){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new we){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new we){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cy extends Yi{constructor(e=new B,t=new B){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new B){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new B){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class kp extends Yi{constructor(e=new we,t=new we,n=new we){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new we){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(qa(e,i.x,s.x,a.x),qa(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Hp extends Yi{constructor(e=new B,t=new B,n=new B){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new B){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(qa(e,i.x,s.x,a.x),qa(e,i.y,s.y,a.y),qa(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Vp extends Yi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new we){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),c=s-a,u=i[a===0?a:a-1],h=i[a],f=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set($v(c,u.x,h.x,f.x,p.x),$v(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new we().fromArray(i))}return this}}var ah=Object.freeze({__proto__:null,ArcCurve:oy,CatmullRomCurve3:ay,CubicBezierCurve:Bp,CubicBezierCurve3:ly,EllipseCurve:Eh,LineCurve:zp,LineCurve3:cy,QuadraticBezierCurve:kp,QuadraticBezierCurve3:Hp,SplineCurve:Vp});class uy extends Yi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new ah[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-a/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new ah[i.type]().fromJSON(i))}return this}}class rl extends uy{constructor(e){super(),this.type="Path",this.currentPoint=new we,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new zp(this.currentPoint.clone(),new we(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new kp(this.currentPoint.clone(),new we(e,t),new we(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const c=new Bp(this.currentPoint.clone(),new we(e,t),new we(n,i),new we(s,a));return this.curves.push(c),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Vp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,a,c,u),this}absellipse(e,t,n,i,s,a,c,u){const h=new Eh(e,t,n,i,s,a,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class El extends Dt{constructor(e=[new we(0,-.5),new we(.5,0),new we(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=gn(i,0,Math.PI*2);const s=[],a=[],c=[],u=[],h=[],f=1/t,p=new B,m=new we,g=new B,y=new B,M=new B;let x=0,_=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,g.x=_*1,g.y=-x,g.z=_*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:x=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,g.x=_*1,g.y=-x,g.z=_*0,y.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(y)}for(let w=0;w<=t;w++){const E=n+w*f*i,T=Math.sin(E),N=Math.cos(E);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*T,p.y=e[P].y,p.z=e[P].x*N,a.push(p.x,p.y,p.z),m.x=w/t,m.y=P/(e.length-1),c.push(m.x,m.y);const U=u[3*P+0]*T,L=u[3*P+1],R=u[3*P+0]*N;h.push(U,L,R)}}for(let w=0;w<t;w++)for(let E=0;E<e.length-1;E++){const T=E+w*e.length,N=T,P=T+e.length,U=T+e.length+1,L=T+1;s.push(N,P,L),s.push(U,L,P)}this.setIndex(s),this.setAttribute("position",new ut(a,3)),this.setAttribute("uv",new ut(c,2)),this.setAttribute("normal",new ut(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new El(e.points,e.segments,e.phiStart,e.phiLength)}}class Th extends El{constructor(e=1,t=1,n=4,i=8){const s=new rl;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Th(e.radius,e.length,e.capSegments,e.radialSegments)}}class bh extends Dt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],a=[],c=[],u=[],h=new B,f=new we;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),a.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(a[m]/e+1)/2,f.y=(a[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ut(a,3)),this.setAttribute("normal",new ut(c,3)),this.setAttribute("uv",new ut(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new bh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ea extends Dt{constructor(e=1,t=1,n=1,i=32,s=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:a,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],g=[];let y=0;const M=[],x=n/2;let _=0;w(),a===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(f),this.setAttribute("position",new ut(p,3)),this.setAttribute("normal",new ut(m,3)),this.setAttribute("uv",new ut(g,2));function w(){const T=new B,N=new B;let P=0;const U=(t-e)/n;for(let L=0;L<=s;L++){const R=[],A=L/s,O=A*(t-e)+e;for(let K=0;K<=i;K++){const J=K/i,$=J*u+c,he=Math.sin($),ee=Math.cos($);N.x=O*he,N.y=-A*n+x,N.z=O*ee,p.push(N.x,N.y,N.z),T.set(he,U,ee).normalize(),m.push(T.x,T.y,T.z),g.push(J,1-A),R.push(y++)}M.push(R)}for(let L=0;L<i;L++)for(let R=0;R<s;R++){const A=M[R][L],O=M[R+1][L],K=M[R+1][L+1],J=M[R][L+1];(e>0||R!==0)&&(f.push(A,O,J),P+=3),(t>0||R!==s-1)&&(f.push(O,K,J),P+=3)}h.addGroup(_,P,0),_+=P}function E(T){const N=y,P=new we,U=new B;let L=0;const R=T===!0?e:t,A=T===!0?1:-1;for(let K=1;K<=i;K++)p.push(0,x*A,0),m.push(0,A,0),g.push(.5,.5),y++;const O=y;for(let K=0;K<=i;K++){const $=K/i*u+c,he=Math.cos($),ee=Math.sin($);U.x=R*ee,U.y=x*A,U.z=R*he,p.push(U.x,U.y,U.z),m.push(0,A,0),P.x=he*.5+.5,P.y=ee*.5*A+.5,g.push(P.x,P.y),y++}for(let K=0;K<i;K++){const J=N+K,$=O+K;T===!0?f.push($,$+1,J):f.push($+1,$,J),L+=3}h.addGroup(_,L,T===!0?1:2),_+=L}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ea(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ah extends ea{constructor(e=1,t=1,n=32,i=1,s=!1,a=0,c=Math.PI*2){super(0,e,t,n,i,s,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:c}}static fromJSON(e){return new Ah(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class rs extends Dt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],a=[];c(i),h(n),f(),this.setAttribute("position",new ut(s,3)),this.setAttribute("normal",new ut(s.slice(),3)),this.setAttribute("uv",new ut(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const E=new B,T=new B,N=new B;for(let P=0;P<t.length;P+=3)g(t[P+0],E),g(t[P+1],T),g(t[P+2],N),u(E,T,N,w)}function u(w,E,T,N){const P=N+1,U=[];for(let L=0;L<=P;L++){U[L]=[];const R=w.clone().lerp(T,L/P),A=E.clone().lerp(T,L/P),O=P-L;for(let K=0;K<=O;K++)K===0&&L===P?U[L][K]=R:U[L][K]=R.clone().lerp(A,K/O)}for(let L=0;L<P;L++)for(let R=0;R<2*(P-L)-1;R++){const A=Math.floor(R/2);R%2===0?(m(U[L][A+1]),m(U[L+1][A]),m(U[L][A])):(m(U[L][A+1]),m(U[L+1][A+1]),m(U[L+1][A]))}}function h(w){const E=new B;for(let T=0;T<s.length;T+=3)E.x=s[T+0],E.y=s[T+1],E.z=s[T+2],E.normalize().multiplyScalar(w),s[T+0]=E.x,s[T+1]=E.y,s[T+2]=E.z}function f(){const w=new B;for(let E=0;E<s.length;E+=3){w.x=s[E+0],w.y=s[E+1],w.z=s[E+2];const T=x(w)/2/Math.PI+.5,N=_(w)/Math.PI+.5;a.push(T,1-N)}y(),p()}function p(){for(let w=0;w<a.length;w+=6){const E=a[w+0],T=a[w+2],N=a[w+4],P=Math.max(E,T,N),U=Math.min(E,T,N);P>.9&&U<.1&&(E<.2&&(a[w+0]+=1),T<.2&&(a[w+2]+=1),N<.2&&(a[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function g(w,E){const T=w*3;E.x=e[T+0],E.y=e[T+1],E.z=e[T+2]}function y(){const w=new B,E=new B,T=new B,N=new B,P=new we,U=new we,L=new we;for(let R=0,A=0;R<s.length;R+=9,A+=6){w.set(s[R+0],s[R+1],s[R+2]),E.set(s[R+3],s[R+4],s[R+5]),T.set(s[R+6],s[R+7],s[R+8]),P.set(a[A+0],a[A+1]),U.set(a[A+2],a[A+3]),L.set(a[A+4],a[A+5]),N.copy(w).add(E).add(T).divideScalar(3);const O=x(N);M(P,A+0,w,O),M(U,A+2,E,O),M(L,A+4,T,O)}}function M(w,E,T,N){N<0&&w.x===1&&(a[E]=w.x-1),T.x===0&&T.z===0&&(a[E]=N/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function _(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rs(e.vertices,e.indices,e.radius,e.details)}}class Ch extends rs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ch(e.radius,e.detail)}}const iu=new B,ru=new B,Cd=new B,su=new hi;class hy extends Dt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Vs*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let y=0;y<u;y+=3){a?(h[0]=a.getX(y),h[1]=a.getX(y+1),h[2]=a.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:M,b:x,c:_}=su;if(M.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),su.getNormal(Cd),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const E=(w+1)%3,T=p[w],N=p[E],P=su[f[w]],U=su[f[E]],L=`${T}_${N}`,R=`${N}_${T}`;R in m&&m[R]?(Cd.dot(m[R].normal)<=s&&(g.push(P.x,P.y,P.z),g.push(U.x,U.y,U.z)),m[R]=null):L in m||(m[L]={index0:h[w],index1:h[E],normal:Cd.clone()})}}for(const y in m)if(m[y]){const{index0:M,index1:x}=m[y];iu.fromBufferAttribute(c,M),ru.fromBufferAttribute(c,x),g.push(iu.x,iu.y,iu.z),g.push(ru.x,ru.y,ru.z)}this.setAttribute("position",new ut(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ws extends rl{constructor(e){super(e),this.uuid=Si(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new rl().fromJSON(i))}return this}}const Jb={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=fy(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let c,u,h,f,p,m,g;if(n&&(s=eA(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);g=Math.max(h-c,f-u),g=g!==0?32767/g:0}return sl(s,a,t,c,u,g,0),a}};function fy(r,e,t,n,i){let s,a;if(i===hA(r,e,t,n)>0)for(s=e;s<t;s+=n)a=e0(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=e0(s,r[s],r[s+1],a);return a&&Rh(a,a.next)&&(al(a),a=a.next),a}function Js(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Rh(t,t.next)||un(t.prev,t,t.next)===0)){if(al(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function sl(r,e,t,n,i,s,a){if(!r)return;!a&&s&&sA(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?Kb(r,n,i,s):jb(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),al(r),r=h.next,c=h.next;continue}if(r=h,r===c){a?a===1?(r=Qb(Js(r),e,t),sl(r,e,t,n,i,s,2)):a===2&&$b(r,e,t,n,i,s):sl(Js(r),e,t,n,i,s,1);break}}}function jb(r){const e=r.prev,t=r,n=r.next;if(un(e,t,n)>=0)return!1;const i=e.x,s=t.x,a=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<a?i:a:s<a?s:a,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>a?i:a:s>a?s:a,g=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&Ho(i,c,s,u,a,h,y.x,y.y)&&un(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function Kb(r,e,t,n){const i=r.prev,s=r,a=r.next;if(un(i,s,a)>=0)return!1;const c=i.x,u=s.x,h=a.x,f=i.y,p=s.y,m=a.y,g=c<u?c<h?c:h:u<h?u:h,y=f<p?f<m?f:m:p<m?p:m,M=c>u?c>h?c:h:u>h?u:h,x=f>p?f>m?f:m:p>m?p:m,_=ip(g,y,e,t,n),w=ip(M,x,e,t,n);let E=r.prevZ,T=r.nextZ;for(;E&&E.z>=_&&T&&T.z<=w;){if(E.x>=g&&E.x<=M&&E.y>=y&&E.y<=x&&E!==i&&E!==a&&Ho(c,f,u,p,h,m,E.x,E.y)&&un(E.prev,E,E.next)>=0||(E=E.prevZ,T.x>=g&&T.x<=M&&T.y>=y&&T.y<=x&&T!==i&&T!==a&&Ho(c,f,u,p,h,m,T.x,T.y)&&un(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;E&&E.z>=_;){if(E.x>=g&&E.x<=M&&E.y>=y&&E.y<=x&&E!==i&&E!==a&&Ho(c,f,u,p,h,m,E.x,E.y)&&un(E.prev,E,E.next)>=0)return!1;E=E.prevZ}for(;T&&T.z<=w;){if(T.x>=g&&T.x<=M&&T.y>=y&&T.y<=x&&T!==i&&T!==a&&Ho(c,f,u,p,h,m,T.x,T.y)&&un(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function Qb(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Rh(i,s)&&dy(i,n,n.next,s)&&ol(i,s)&&ol(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),al(n),al(n.next),n=r=s),n=n.next}while(n!==r);return Js(n)}function $b(r,e,t,n,i,s){let a=r;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&lA(a,c)){let u=py(a,c);a=Js(a,a.next),u=Js(u,u.next),sl(a,e,t,n,i,s,0),sl(u,e,t,n,i,s,0);return}c=c.next}a=a.next}while(a!==r)}function eA(r,e,t,n){const i=[];let s,a,c,u,h;for(s=0,a=e.length;s<a;s++)c=e[s]*n,u=s<a-1?e[s+1]*n:r.length,h=fy(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(aA(h));for(i.sort(tA),s=0;s<i.length;s++)t=nA(i[s],t);return t}function tA(r,e){return r.x-e.x}function nA(r,e){const t=iA(r,e);if(!t)return e;const n=py(t,r);return Js(n,n.next),Js(t,t.next)}function iA(r,e){let t=e,n=-1/0,i;const s=r.x,a=r.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&Ho(a<h?s:n,a,u,h,a<h?n:s,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(s-t.x),ol(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&rA(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function rA(r,e){return un(r.prev,r,e.prev)<0&&un(e.next,r,r.next)<0}function sA(r,e,t,n){let i=r;do i.z===0&&(i.z=ip(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,oA(i)}function oA(r){let e,t,n,i,s,a,c,u,h=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(a>1);return r}function ip(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function aA(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Ho(r,e,t,n,i,s,a,c){return(i-a)*(e-c)>=(r-a)*(s-c)&&(r-a)*(n-c)>=(t-a)*(e-c)&&(t-a)*(s-c)>=(i-a)*(n-c)}function lA(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!cA(r,e)&&(ol(r,e)&&ol(e,r)&&uA(r,e)&&(un(r.prev,r,e.prev)||un(r,e.prev,e))||Rh(r,e)&&un(r.prev,r,r.next)>0&&un(e.prev,e,e.next)>0)}function un(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Rh(r,e){return r.x===e.x&&r.y===e.y}function dy(r,e,t,n){const i=au(un(r,e,t)),s=au(un(r,e,n)),a=au(un(t,n,r)),c=au(un(t,n,e));return!!(i!==s&&a!==c||i===0&&ou(r,t,e)||s===0&&ou(r,n,e)||a===0&&ou(t,r,n)||c===0&&ou(t,e,n))}function ou(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function au(r){return r>0?1:r<0?-1:0}function cA(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&dy(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function ol(r,e){return un(r.prev,r,r.next)<0?un(r,e,r.next)>=0&&un(r,r.prev,e)>=0:un(r,e,r.prev)<0||un(r,r.next,e)<0}function uA(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function py(r,e){const t=new rp(r.i,r.x,r.y),n=new rp(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function e0(r,e,t,n){const i=new rp(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function al(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function rp(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function hA(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class or{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return or.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];t0(e),n0(n,e);let a=e.length;t.forEach(t0);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,n0(n,t[u]);const c=Jb.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function t0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function n0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Ih extends Dt{constructor(e=new Ws([new we(.5,.5),new we(-.5,.5),new we(-.5,-.5),new we(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];a(h)}this.setAttribute("position",new ut(i,3)),this.setAttribute("uv",new ut(s,2)),this.computeVertexNormals();function a(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:fA;let E,T=!1,N,P,U,L;_&&(E=_.getSpacedPoints(f),T=!0,m=!1,N=_.computeFrenetFrames(f,!1),P=new B,U=new B,L=new B),m||(x=0,g=0,y=0,M=0);const R=c.extractPoints(h);let A=R.shape;const O=R.holes;if(!or.isClockWise(A)){A=A.reverse();for(let Te=0,Ie=O.length;Te<Ie;Te++){const W=O[Te];or.isClockWise(W)&&(O[Te]=W.reverse())}}const J=or.triangulateShape(A,O),$=A;for(let Te=0,Ie=O.length;Te<Ie;Te++){const W=O[Te];A=A.concat(W)}function he(Te,Ie,W){return Ie||console.error("THREE.ExtrudeGeometry: vec does not exist"),Te.clone().addScaledVector(Ie,W)}const ee=A.length,Ee=J.length;function z(Te,Ie,W){let lt,Ue,je;const ke=Te.x-Ie.x,_t=Te.y-Ie.y,Xe=W.x-Te.x,k=W.y-Te.y,D=ke*ke+_t*_t,se=ke*k-_t*Xe;if(Math.abs(se)>Number.EPSILON){const ve=Math.sqrt(D),Ce=Math.sqrt(Xe*Xe+k*k),ye=Ie.x-_t/ve,rt=Ie.y+ke/ve,Ge=W.x-k/Ce,qe=W.y+Xe/Ce,Rt=((Ge-ye)*k-(qe-rt)*Xe)/(ke*k-_t*Xe);lt=ye+ke*Rt-Te.x,Ue=rt+_t*Rt-Te.y;const Ne=lt*lt+Ue*Ue;if(Ne<=2)return new we(lt,Ue);je=Math.sqrt(Ne/2)}else{let ve=!1;ke>Number.EPSILON?Xe>Number.EPSILON&&(ve=!0):ke<-Number.EPSILON?Xe<-Number.EPSILON&&(ve=!0):Math.sign(_t)===Math.sign(k)&&(ve=!0),ve?(lt=-_t,Ue=ke,je=Math.sqrt(D)):(lt=ke,Ue=_t,je=Math.sqrt(D/2))}return new we(lt/je,Ue/je)}const te=[];for(let Te=0,Ie=$.length,W=Ie-1,lt=Te+1;Te<Ie;Te++,W++,lt++)W===Ie&&(W=0),lt===Ie&&(lt=0),te[Te]=z($[Te],$[W],$[lt]);const Q=[];let fe,xe=te.concat();for(let Te=0,Ie=O.length;Te<Ie;Te++){const W=O[Te];fe=[];for(let lt=0,Ue=W.length,je=Ue-1,ke=lt+1;lt<Ue;lt++,je++,ke++)je===Ue&&(je=0),ke===Ue&&(ke=0),fe[lt]=z(W[lt],W[je],W[ke]);Q.push(fe),xe=xe.concat(fe)}for(let Te=0;Te<x;Te++){const Ie=Te/x,W=g*Math.cos(Ie*Math.PI/2),lt=y*Math.sin(Ie*Math.PI/2)+M;for(let Ue=0,je=$.length;Ue<je;Ue++){const ke=he($[Ue],te[Ue],lt);Re(ke.x,ke.y,-W)}for(let Ue=0,je=O.length;Ue<je;Ue++){const ke=O[Ue];fe=Q[Ue];for(let _t=0,Xe=ke.length;_t<Xe;_t++){const k=he(ke[_t],fe[_t],lt);Re(k.x,k.y,-W)}}}const ze=y+M;for(let Te=0;Te<ee;Te++){const Ie=m?he(A[Te],xe[Te],ze):A[Te];T?(U.copy(N.normals[0]).multiplyScalar(Ie.x),P.copy(N.binormals[0]).multiplyScalar(Ie.y),L.copy(E[0]).add(U).add(P),Re(L.x,L.y,L.z)):Re(Ie.x,Ie.y,0)}for(let Te=1;Te<=f;Te++)for(let Ie=0;Ie<ee;Ie++){const W=m?he(A[Ie],xe[Ie],ze):A[Ie];T?(U.copy(N.normals[Te]).multiplyScalar(W.x),P.copy(N.binormals[Te]).multiplyScalar(W.y),L.copy(E[Te]).add(U).add(P),Re(L.x,L.y,L.z)):Re(W.x,W.y,p/f*Te)}for(let Te=x-1;Te>=0;Te--){const Ie=Te/x,W=g*Math.cos(Ie*Math.PI/2),lt=y*Math.sin(Ie*Math.PI/2)+M;for(let Ue=0,je=$.length;Ue<je;Ue++){const ke=he($[Ue],te[Ue],lt);Re(ke.x,ke.y,p+W)}for(let Ue=0,je=O.length;Ue<je;Ue++){const ke=O[Ue];fe=Q[Ue];for(let _t=0,Xe=ke.length;_t<Xe;_t++){const k=he(ke[_t],fe[_t],lt);T?Re(k.x,k.y+E[f-1].y,E[f-1].x+W):Re(k.x,k.y,p+W)}}}ce(),be();function ce(){const Te=i.length/3;if(m){let Ie=0,W=ee*Ie;for(let lt=0;lt<Ee;lt++){const Ue=J[lt];it(Ue[2]+W,Ue[1]+W,Ue[0]+W)}Ie=f+x*2,W=ee*Ie;for(let lt=0;lt<Ee;lt++){const Ue=J[lt];it(Ue[0]+W,Ue[1]+W,Ue[2]+W)}}else{for(let Ie=0;Ie<Ee;Ie++){const W=J[Ie];it(W[2],W[1],W[0])}for(let Ie=0;Ie<Ee;Ie++){const W=J[Ie];it(W[0]+ee*f,W[1]+ee*f,W[2]+ee*f)}}n.addGroup(Te,i.length/3-Te,0)}function be(){const Te=i.length/3;let Ie=0;Ae($,Ie),Ie+=$.length;for(let W=0,lt=O.length;W<lt;W++){const Ue=O[W];Ae(Ue,Ie),Ie+=Ue.length}n.addGroup(Te,i.length/3-Te,1)}function Ae(Te,Ie){let W=Te.length;for(;--W>=0;){const lt=W;let Ue=W-1;Ue<0&&(Ue=Te.length-1);for(let je=0,ke=f+x*2;je<ke;je++){const _t=ee*je,Xe=ee*(je+1),k=Ie+lt+_t,D=Ie+Ue+_t,se=Ie+Ue+Xe,ve=Ie+lt+Xe;yt(k,D,se,ve)}}}function Re(Te,Ie,W){u.push(Te),u.push(Ie),u.push(W)}function it(Te,Ie,W){gt(Te),gt(Ie),gt(W);const lt=i.length/3,Ue=w.generateTopUV(n,i,lt-3,lt-2,lt-1);St(Ue[0]),St(Ue[1]),St(Ue[2])}function yt(Te,Ie,W,lt){gt(Te),gt(Ie),gt(lt),gt(Ie),gt(W),gt(lt);const Ue=i.length/3,je=w.generateSideWallUV(n,i,Ue-6,Ue-3,Ue-2,Ue-1);St(je[0]),St(je[1]),St(je[3]),St(je[1]),St(je[2]),St(je[3])}function gt(Te){i.push(u[Te*3+0]),i.push(u[Te*3+1]),i.push(u[Te*3+2])}function St(Te){s.push(Te.x),s.push(Te.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return dA(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new ah[i.type]().fromJSON(i)),new Ih(n,e.options)}}const fA={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new we(s,a),new we(c,u),new we(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],g=e[i*3+1],y=e[i*3+2],M=e[s*3],x=e[s*3+1],_=e[s*3+2];return Math.abs(c-f)<Math.abs(a-h)?[new we(a,1-u),new we(h,1-p),new we(m,1-y),new we(M,1-_)]:[new we(c,1-u),new we(f,1-p),new we(g,1-y),new we(x,1-_)]}};function dA(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Tl extends rs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Tl(e.radius,e.detail)}}class bl extends rs{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new bl(e.radius,e.detail)}}class Ph extends Dt{constructor(e=.5,t=1,n=32,i=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,g=new B,y=new we;for(let M=0;M<=i;M++){for(let x=0;x<=n;x++){const _=s+x/n*a;g.x=p*Math.cos(_),g.y=p*Math.sin(_),u.push(g.x,g.y,g.z),h.push(0,0,1),y.x=(g.x/t+1)/2,y.y=(g.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let M=0;M<i;M++){const x=M*(n+1);for(let _=0;_<n;_++){const w=_+x,E=w,T=w+n+1,N=w+n+2,P=w+1;c.push(E,T,P),c.push(T,N,P)}}this.setIndex(c),this.setAttribute("position",new ut(u,3)),this.setAttribute("normal",new ut(h,3)),this.setAttribute("uv",new ut(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ph(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Lh extends Dt{constructor(e=new Ws([new we(0,.5),new we(-.5,-.5),new we(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new ut(i,3)),this.setAttribute("normal",new ut(s,3)),this.setAttribute("uv",new ut(a,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let g=m.shape;const y=m.holes;or.isClockWise(g)===!1&&(g=g.reverse());for(let x=0,_=y.length;x<_;x++){const w=y[x];or.isClockWise(w)===!0&&(y[x]=w.reverse())}const M=or.triangulateShape(g,y);for(let x=0,_=y.length;x<_;x++){const w=y[x];g=g.concat(w)}for(let x=0,_=g.length;x<_;x++){const w=g[x];i.push(w.x,w.y,0),s.push(0,0,1),a.push(w.x,w.y)}for(let x=0,_=M.length;x<_;x++){const w=M[x],E=w[0]+p,T=w[1]+p,N=w[2]+p;n.push(E,T,N),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return pA(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new Lh(n,e.curveSegments)}}function pA(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Al extends Dt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(a+c,Math.PI);let h=0;const f=[],p=new B,m=new B,g=[],y=[],M=[],x=[];for(let _=0;_<=n;_++){const w=[],E=_/n;let T=0;_===0&&a===0?T=.5/t:_===n&&u===Math.PI&&(T=-.5/t);for(let N=0;N<=t;N++){const P=N/t;p.x=-e*Math.cos(i+P*s)*Math.sin(a+E*c),p.y=e*Math.cos(a+E*c),p.z=e*Math.sin(i+P*s)*Math.sin(a+E*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),x.push(P+T,1-E),w.push(h++)}f.push(w)}for(let _=0;_<n;_++)for(let w=0;w<t;w++){const E=f[_][w+1],T=f[_][w],N=f[_+1][w],P=f[_+1][w+1];(_!==0||a>0)&&g.push(E,T,P),(_!==n-1||u<Math.PI)&&g.push(T,N,P)}this.setIndex(g),this.setAttribute("position",new ut(y,3)),this.setAttribute("normal",new ut(M,3)),this.setAttribute("uv",new ut(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Al(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Dh extends rs{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Dh(e.radius,e.detail)}}class Uh extends Dt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],u=[],h=[],f=new B,p=new B,m=new B;for(let g=0;g<=n;g++)for(let y=0;y<=i;y++){const M=y/i*s,x=g/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(M),p.y=(e+t*Math.cos(x))*Math.sin(M),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let y=1;y<=i;y++){const M=(i+1)*g+y-1,x=(i+1)*(g-1)+y-1,_=(i+1)*(g-1)+y,w=(i+1)*g+y;a.push(M,x,w),a.push(x,_,w)}this.setIndex(a),this.setAttribute("position",new ut(c,3)),this.setAttribute("normal",new ut(u,3)),this.setAttribute("uv",new ut(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Uh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Nh extends Dt{constructor(e=1,t=.4,n=64,i=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:a},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new B,m=new B,g=new B,y=new B,M=new B,x=new B,_=new B;for(let E=0;E<=n;++E){const T=E/n*s*Math.PI*2;w(T,s,a,e,g),w(T+.01,s,a,e,y),x.subVectors(y,g),_.addVectors(y,g),M.crossVectors(x,_),_.crossVectors(M,x),M.normalize(),_.normalize();for(let N=0;N<=i;++N){const P=N/i*Math.PI*2,U=-t*Math.cos(P),L=t*Math.sin(P);p.x=g.x+(U*_.x+L*M.x),p.y=g.y+(U*_.y+L*M.y),p.z=g.z+(U*_.z+L*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(E/n),f.push(N/i)}}for(let E=1;E<=n;E++)for(let T=1;T<=i;T++){const N=(i+1)*(E-1)+(T-1),P=(i+1)*E+(T-1),U=(i+1)*E+T,L=(i+1)*(E-1)+T;c.push(N,P,L),c.push(P,U,L)}this.setIndex(c),this.setAttribute("position",new ut(u,3)),this.setAttribute("normal",new ut(h,3)),this.setAttribute("uv",new ut(f,2));function w(E,T,N,P,U){const L=Math.cos(E),R=Math.sin(E),A=N/T*E,O=Math.cos(A);U.x=P*(2+O)*.5*L,U.y=P*(2+O)*R*.5,U.z=P*Math.sin(A)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Fh extends Dt{constructor(e=new Hp(new B(-1,-1,0),new B(-1,1,0),new B(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new B,u=new B,h=new we;let f=new B;const p=[],m=[],g=[],y=[];M(),this.setIndex(y),this.setAttribute("position",new ut(p,3)),this.setAttribute("normal",new ut(m,3)),this.setAttribute("uv",new ut(g,2));function M(){for(let E=0;E<t;E++)x(E);x(s===!1?t:0),w(),_()}function x(E){f=e.getPointAt(E/t,f);const T=a.normals[E],N=a.binormals[E];for(let P=0;P<=i;P++){const U=P/i*Math.PI*2,L=Math.sin(U),R=-Math.cos(U);u.x=R*T.x+L*N.x,u.y=R*T.y+L*N.y,u.z=R*T.z+L*N.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let E=1;E<=t;E++)for(let T=1;T<=i;T++){const N=(i+1)*(E-1)+(T-1),P=(i+1)*E+(T-1),U=(i+1)*E+T,L=(i+1)*(E-1)+T;y.push(N,P,L),y.push(P,U,L)}}function w(){for(let E=0;E<=t;E++)for(let T=0;T<=i;T++)h.x=E/t,h.y=T/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Fh(new ah[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class my extends Dt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new B,s=new B;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,g=p.count;for(let y=m,M=m+g;y<M;y+=3)for(let x=0;x<3;x++){const _=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(a,_),s.fromBufferAttribute(a,w),i0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(a,f),s.fromBufferAttribute(a,p),i0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ut(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function i0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var r0=Object.freeze({__proto__:null,BoxGeometry:Ks,CapsuleGeometry:Th,CircleGeometry:bh,ConeGeometry:Ah,CylinderGeometry:ea,DodecahedronGeometry:Ch,EdgesGeometry:hy,ExtrudeGeometry:Ih,IcosahedronGeometry:Tl,LatheGeometry:El,OctahedronGeometry:bl,PlaneGeometry:is,PolyhedronGeometry:rs,RingGeometry:Ph,ShapeGeometry:Lh,SphereGeometry:Al,TetrahedronGeometry:Dh,TorusGeometry:Uh,TorusKnotGeometry:Nh,TubeGeometry:Fh,WireframeGeometry:my});class gy extends Yn{static get type(){return"ShadowMaterial"}constructor(e){super(),this.isShadowMaterial=!0,this.color=new tt(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class vy extends di{static get type(){return"RawShaderMaterial"}constructor(e){super(e),this.isRawShaderMaterial=!0}}class Gp extends Yn{static get type(){return"MeshStandardMaterial"}constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new tt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _y extends Gp{static get type(){return"MeshPhysicalMaterial"}constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new we(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return gn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new tt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new tt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new tt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class yy extends Yn{static get type(){return"MeshPhongMaterial"}constructor(e){super(),this.isMeshPhongMaterial=!0,this.color=new tt(16777215),this.specular=new tt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=ml,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class xy extends Yn{static get type(){return"MeshToonMaterial"}constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new tt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class My extends Yn{static get type(){return"MeshNormalMaterial"}constructor(e){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Sy extends Yn{static get type(){return"MeshLambertMaterial"}constructor(e){super(),this.isMeshLambertMaterial=!0,this.color=new tt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=ml,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class wy extends Yn{static get type(){return"MeshMatcapMaterial"}constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new tt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new we(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ey extends ii{static get type(){return"LineDashedMaterial"}constructor(e){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Bs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Ty(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function by(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function sp(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[a++]=r[c+u]}return i}function Wp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)}function mA(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const y=h.times[g]*i;if(!(y<t||y>=n)){p.push(h.times[g]);for(let M=0;M<f;++M)m.push(h.values[g*f+M])}}p.length!==0&&(h.times=Bs(p,h.times.constructor),h.values=Bs(m,h.values.constructor),a.push(h))}s.tracks=a;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function gA(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const y=c.times.length-1;let M;if(s<=c.times[0]){const _=f,w=p-f;M=c.values.slice(_,w)}else if(s>=c.times[y]){const _=y*p+f,w=_+p-f;M=c.values.slice(_,w)}else{const _=c.createInterpolant(),w=f,E=p-f;_.evaluate(s),M=_.resultBuffer.slice(w,E)}u==="quaternion"&&new Wn().fromArray(M).normalize().conjugate().toArray(M);const x=h.times.length;for(let _=0;_<x;++_){const w=_*g+m;if(u==="quaternion")Wn.multiplyQuaternionsFlat(h.values,w,M,0,h.values,w);else{const E=g-m*2;for(let T=0;T<E;++T)h.values[w+T]-=M[T]}}}return r.blendMode=Sp,r}const vA={convertArray:Bs,isTypedArray:Ty,getKeyframeOrder:by,sortedArray:sp,flattenJSON:Wp,subclip:mA,makeClipAdditive:gA};class Cl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const c=n+a>>>1;e<t[c]?a=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Ay extends Cl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Us,endingEnd:Us}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,c=i[s],u=i[a];if(c===void 0)switch(this.getSettings_().endingStart){case Ns:s=e,c=2*t-n;break;case el:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case Ns:a=e,u=2*n-t;break;case el:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=a*f}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,y=(n-t)/(i-t),M=y*y,x=M*y,_=-m*x+2*m*M-m*y,w=(1+m)*x+(-1.5-2*m)*M+(-.5+m)*y+1,E=(-1-g)*x+(1.5+g)*M+.5*y,T=g*x-g*M;for(let N=0;N!==c;++N)s[N]=_*a[f+N]+w*a[h+N]+E*a[u+N]+T*a[p+N];return s}}class Xp extends Cl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=a[h+m]*p+a[u+m]*f;return s}}class Cy extends Cl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class qi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Bs(t,this.TimeBufferType),this.values=Bs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Bs(e.times,Array),values:Bs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Cy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Xp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Ay(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case $a:t=this.InterpolantFactoryMethodDiscrete;break;case rh:t=this.InterpolantFactoryMethodLinear;break;case xu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return $a;case this.InterpolantFactoryMethodLinear:return rh;case this.InterpolantFactoryMethodSmooth:return xu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const c=this.getValueSize();this.times=n.slice(s,a),this.values=this.values.slice(s*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(i!==void 0&&Ty(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===xu,s=e.length-1;let a=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,g=p+n;for(let y=0;y!==n;++y){const M=t[p+y];if(M!==t[m+y]||M!==t[g+y]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const p=c*n,m=a*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++a}}if(s>0){e[a]=e[s];for(let c=s*n,u=a*n,h=0;h!==n;++h)t[u+h]=t[c+h];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}qi.prototype.TimeBufferType=Float32Array;qi.prototype.ValueBufferType=Float32Array;qi.prototype.DefaultInterpolation=rh;class Qs extends qi{constructor(e,t,n){super(e,t,n)}}Qs.prototype.ValueTypeName="bool";Qs.prototype.ValueBufferType=Array;Qs.prototype.DefaultInterpolation=$a;Qs.prototype.InterpolantFactoryMethodLinear=void 0;Qs.prototype.InterpolantFactoryMethodSmooth=void 0;class Yp extends qi{}Yp.prototype.ValueTypeName="color";class ll extends qi{}ll.prototype.ValueTypeName="number";class Ry extends Cl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Wn.slerpFlat(s,0,a,h-c,a,h,u);return s}}class Rl extends qi{InterpolantFactoryMethodLinear(e){return new Ry(this.times,this.values,this.getValueSize(),e)}}Rl.prototype.ValueTypeName="quaternion";Rl.prototype.InterpolantFactoryMethodSmooth=void 0;class $s extends qi{constructor(e,t,n){super(e,t,n)}}$s.prototype.ValueTypeName="string";$s.prototype.ValueBufferType=Array;$s.prototype.DefaultInterpolation=$a;$s.prototype.InterpolantFactoryMethodLinear=void 0;$s.prototype.InterpolantFactoryMethodSmooth=void 0;class cl extends qi{}cl.prototype.ValueTypeName="vector";class ul{constructor(e="",t=-1,n=[],i=gh){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Si(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,c=n.length;a!==c;++a)t.push(yA(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(qi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=by(u);u=sp(u,1,f),h=sp(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),a.push(new ll(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const c in i)a.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,y,M){if(g.length!==0){const x=[],_=[];Wp(g,x,_,y),x.length!==0&&M.push(new p(m,x,_))}},i=[],s=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let M=0;M<m[y].morphTargets.length;M++)g[m[y].morphTargets[M]]=-1;for(const M in g){const x=[],_=[];for(let w=0;w!==m[y].morphTargets.length;++w){const E=m[y];x.push(E.time),_.push(E.morphTarget===M?1:0)}i.push(new ll(".morphTargetInfluence["+M+"]",x,_))}u=g.length*a}else{const g=".bones["+t[p].name+"]";n(cl,g+".position",m,"pos",i),n(Rl,g+".quaternion",m,"rot",i),n(cl,g+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function _A(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ll;case"vector":case"vector2":case"vector3":case"vector4":return cl;case"color":return Yp;case"quaternion":return Rl;case"bool":case"boolean":return Qs;case"string":return $s}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function yA(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=_A(r.type);if(r.times===void 0){const t=[],n=[];Wp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Cr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Oh{constructor(e,t,n){const i=this;let s=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,a,c),s=!0},this.itemEnd=function(f){a++,i.onProgress!==void 0&&i.onProgress(f,a,c),a===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],y=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return y}return null}}}const Iy=new Oh;class ri{constructor(e){this.manager=e!==void 0?e:Iy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ri.DEFAULT_MATERIAL_NAME="__DEFAULT";const Er={};class xA extends Error{constructor(e,t){super(e),this.response=t}}class wi extends ri{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Cr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Er[e]!==void 0){Er[e].push({onLoad:t,onProgress:n,onError:i});return}Er[e]=[],Er[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=Er[e],p=h.body.getReader(),m=h.headers.get("X-File-Size")||h.headers.get("Content-Length"),g=m?parseInt(m):0,y=g!==0;let M=0;const x=new ReadableStream({start(_){w();function w(){p.read().then(({done:E,value:T})=>{if(E)_.close();else{M+=T.byteLength;const N=new ProgressEvent("progress",{lengthComputable:y,loaded:M,total:g});for(let P=0,U=f.length;P<U;P++){const L=f[P];L.onProgress&&L.onProgress(N)}_.enqueue(T),w()}},E=>{_.error(E)})}}});return new Response(x)}else throw new xA(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(y=>g.decode(y))}}}).then(h=>{Cr.add(e,h);const f=Er[e];delete Er[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=Er[e];if(f===void 0)throw this.manager.itemError(e),h;delete Er[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class MA extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new wi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ul.parse(e[n]);t.push(i)}return t}}class SA extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=[],c=new wh,u=new wi(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const g=s.parse(m,!0);a[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(c.minFilter=Kt),c.image=a,c.format=g.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let y=0;y<g;y++){a[y]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)a[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+M]),a[y].format=m.format,a[y].width=m.width,a[y].height=m.height}c.image=a}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Kt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class hl extends ri{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Cr.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const c=il("img");function u(){f(),Cr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class Py extends ri{constructor(e){super(e)}load(e,t,n,i){const s=new Ml;s.colorSpace=$n;const a=new hl(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(h){a.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class qp extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Xi,c=new wi(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:En,a.wrapT=h.wrapT!==void 0?h.wrapT:En,a.magFilter=h.magFilter!==void 0?h.magFilter:Kt,a.minFilter=h.minFilter!==void 0?h.minFilter:Kt,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(a.colorSpace=h.colorSpace),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=nr),h.mipmapCount===1&&(a.minFilter=Kt),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h)},n,i),a}}class wA extends ri{constructor(e){super(e)}load(e,t,n,i){const s=new $t,a=new hl(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class ss extends Xt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new tt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Ly extends ss{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Xt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new tt(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Rd=new Et,s0=new B,o0=new B;class Zp{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new we(512,512),this.map=null,this.mapPass=null,this.matrix=new Et,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Sl,this._frameExtents=new we(1,1),this._viewportCount=1,this._viewports=[new Wt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;s0.setFromMatrixPosition(e.matrixWorld),t.position.copy(s0),o0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(o0),t.updateMatrixWorld(),Rd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Rd)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class EA extends Zp{constructor(){super(new yn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=qo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Dy extends ss{constructor(e,t,n=0,i=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Xt.DEFAULT_UP),this.updateMatrix(),this.target=new Xt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new EA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const a0=new Et,Pa=new B,Id=new B;class TA extends Zp{constructor(){super(new yn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new we(4,2),this._viewportCount=6,this._viewports=[new Wt(2,1,1,1),new Wt(0,1,1,1),new Wt(3,1,1,1),new Wt(1,1,1,1),new Wt(3,0,1,1),new Wt(1,0,1,1)],this._cubeDirections=[new B(1,0,0),new B(-1,0,0),new B(0,0,1),new B(0,0,-1),new B(0,1,0),new B(0,-1,0)],this._cubeUps=[new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,0,1),new B(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Pa.setFromMatrixPosition(e.matrixWorld),n.position.copy(Pa),Id.copy(n.position),Id.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Id),n.updateMatrixWorld(),i.makeTranslation(-Pa.x,-Pa.y,-Pa.z),a0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a0)}}class Uy extends ss{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new TA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class bA extends Zp{constructor(){super(new Ir(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Ny extends ss{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Xt.DEFAULT_UP),this.updateMatrix(),this.target=new Xt,this.shadow=new bA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Fy extends ss{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Oy extends ss{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class By{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new B)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class zy extends ss{constructor(e=new By,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Bh extends ri{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,a=new wi(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new tt().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(i.uniforms[s]={},a.type){case"t":i.uniforms[s].value=n(a.value);break;case"c":i.uniforms[s].value=new tt().setHex(a.value);break;case"v2":i.uniforms[s].value=new we().fromArray(a.value);break;case"v3":i.uniforms[s].value=new B().fromArray(a.value);break;case"v4":i.uniforms[s].value=new Wt().fromArray(a.value);break;case"m3":i.uniforms[s].value=new Ct().fromArray(a.value);break;case"m4":i.uniforms[s].value=new Et().fromArray(a.value);break;default:i.uniforms[s].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new we().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new we().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Bh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:gy,SpriteMaterial:Up,RawShaderMaterial:vy,ShaderMaterial:di,PointsMaterial:Fp,MeshPhysicalMaterial:_y,MeshStandardMaterial:Gp,MeshPhongMaterial:yy,MeshToonMaterial:xy,MeshNormalMaterial:My,MeshLambertMaterial:Sy,MeshDepthMaterial:Pp,MeshDistanceMaterial:Lp,MeshBasicMaterial:Lr,MeshMatcapMaterial:wy,LineDashedMaterial:Ey,LineBasicMaterial:ii,Material:Yn};return new t[e]}}class op{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class ky extends Dt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Hy extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new wi(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,y){if(t[y]!==void 0)return t[y];const x=g.interleavedBuffers[y],_=s(g,x.buffer),w=Bo(x.type,_),E=new Mh(w,x.stride);return E.uuid=x.uuid,t[y]=E,E}function s(g,y){if(n[y]!==void 0)return n[y];const x=g.arrayBuffers[y],_=new Uint32Array(x).buffer;return n[y]=_,_}const a=e.isInstancedBufferGeometry?new ky:new Dt,c=e.data.index;if(c!==void 0){const g=Bo(c.type,c.array);a.setIndex(new en(g,1))}const u=e.data.attributes;for(const g in u){const y=u[g];let M;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);M=new Zs(x,y.itemSize,y.offset,y.normalized)}else{const x=Bo(y.type,y.array),_=y.isInstancedBufferAttribute?Jo:en;M=new _(x,y.itemSize,y.normalized)}y.name!==void 0&&(M.name=y.name),y.usage!==void 0&&M.setUsage(y.usage),a.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const y=h[g],M=[];for(let x=0,_=y.length;x<_;x++){const w=y[x];let E;if(w.isInterleavedBufferAttribute){const T=i(e.data,w.data);E=new Zs(T,w.itemSize,w.offset,w.normalized)}else{const T=Bo(w.type,w.array);E=new en(T,w.itemSize,w.normalized)}w.name!==void 0&&(E.name=w.name),M.push(E)}a.morphAttributes[g]=M}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,y=p.length;g!==y;++g){const M=p[g];a.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new B;m.center!==void 0&&g.fromArray(m.center),a.boundingSphere=new Xn(g,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class AA extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=this.path===""?op.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new wi(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?op.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new wi(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),this.bindLightTargets(h),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,i,c,a,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),this.bindLightTargets(u),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Ws().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=new Sh().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Hy;for(let s=0,a=e.length;s<a;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in r0?c=r0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Bh;s.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=ul.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function a(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(f)}else return u.data?{data:Bo(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Oh(t);s=new hl(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let y=0,M=m.length;y<M;y++){const x=m[y],_=c(x);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new Xi(_.data,_.width,_.height)))}i[p.uuid]=new Fs(g)}else{const g=c(p.url);i[p.uuid]=new Fs(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return a.data?{data:Bo(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new hl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],y=await s(g);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new Xi(y.data,y.width,y.height)))}n[u.uuid]=new Fs(f)}else{const f=await s(u.url);n[u.uuid]=new Fs(f)}}}return n}parseTextures(e,t){function n(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const i={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new Ml,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new Xi:f=new $t,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,CA)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],l0),f.wrapT=n(c.wrap[1],l0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,c0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,c0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let a;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let y=0,M=m.length;y<M;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),g.push(n[x])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":a=new wl,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new tt(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new xh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new yh(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(a.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new yn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new Ir(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Fy(e.color,e.intensity);break;case"DirectionalLight":a=new Ny(e.color,e.intensity),a.target=e.target||"";break;case"PointLight":a=new Uy(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Oy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Dy(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),a.target=e.target||"";break;case"HemisphereLight":a=new Ly(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new zy().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),a=new ty(f,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),a=new fn(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,g=e.instanceMatrix,y=e.instanceColor;a=new ny(f,p,m),a.instanceMatrix=new Jo(new Float32Array(g.array),16),y!==void 0&&(a.instanceColor=new Jo(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),a=new iy(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,p),a.geometry=f,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._visibility=e.visibility,a._active=e.active,a._bounds=e.bounds.map(M=>{const x=new ni;x.min.fromArray(M.boxMin),x.max.fromArray(M.boxMax);const _=new Xn;return _.radius=M.sphereRadius,_.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:x,sphereInitialized:M.sphereInitialized,sphere:_}}),a._maxInstanceCount=e.maxInstanceCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._geometryCount=e.geometryCount,a._matricesTexture=h(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(a._colorsTexture=h(e.colorsTexture.uuid));break;case"LOD":a=new ey;break;case"Line":a=new ts(c(e.geometry),u(e.material));break;case"LineLoop":a=new ry(c(e.geometry),u(e.material));break;case"LineSegments":a=new hr(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new sy(c(e.geometry),u(e.material));break;case"Sprite":a=new $_(u(e.material));break;case"Group":a=new ko;break;case"Bone":a=new Np;break;default:a=new Xt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(a.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)a.add(this.parseObject(m[g],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const y=m[g];a.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const y=m[g],M=a.getObjectByProperty("uuid",y.object);M!==void 0&&a.addLevel(M,y.distance,y.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Xt}})}}const CA={UVMapping:$r,CubeReflectionMapping:ar,CubeRefractionMapping:es,EquirectangularReflectionMapping:Xo,EquirectangularRefractionMapping:ja,CubeUVReflectionMapping:Qo},l0={RepeatWrapping:Ka,ClampToEdgeWrapping:En,MirroredRepeatWrapping:Qa},c0={NearestFilter:Fn,NearestMipmapNearestFilter:pp,NearestMipmapLinearFilter:Oo,LinearFilter:Kt,LinearMipmapNearestFilter:ka,LinearMipmapLinearFilter:nr};class RA extends ri{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Cr.get(e);if(a!==void 0){if(s.manager.itemStart(e),a.then){a.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return Cr.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),Cr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});Cr.add(e,u),s.manager.itemStart(e)}}let lu;class Jp{static getContext(){return lu===void 0&&(lu=new(window.AudioContext||window.webkitAudioContext)),lu}static setContext(e){lu=e}}class IA extends ri{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new wi(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(u){try{const h=u.slice(0);Jp.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const u0=new Et,h0=new Et,Es=new Et;class PA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new yn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new yn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Es.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,a=t.near*Math.tan(Vs*t.fov*.5)/t.zoom;let c,u;h0.elements[12]=-i,u0.elements[12]=i,c=-a*t.aspect+s,u=a*t.aspect+s,Es.elements[0]=2*t.near/(u-c),Es.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Es),c=-a*t.aspect-s,u=a*t.aspect-s,Es.elements[0]=2*t.near/(u-c),Es.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Es)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(h0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(u0)}}class jp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=f0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=f0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function f0(){return performance.now()}const Ts=new B,d0=new Wn,LA=new B,bs=new B;class DA extends Xt{constructor(){super(),this.type="AudioListener",this.context=Jp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new jp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ts,d0,LA),bs.set(0,0,-1).applyQuaternion(d0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ts.x,i),t.positionY.linearRampToValueAtTime(Ts.y,i),t.positionZ.linearRampToValueAtTime(Ts.z,i),t.forwardX.linearRampToValueAtTime(bs.x,i),t.forwardY.linearRampToValueAtTime(bs.y,i),t.forwardZ.linearRampToValueAtTime(bs.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ts.x,Ts.y,Ts.z),t.setOrientation(bs.x,bs.y,bs.z,n.x,n.y,n.z)}}class Vy extends Xt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const As=new B,p0=new Wn,UA=new B,Cs=new B;class NA extends Vy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(As,p0,UA),Cs.set(0,0,1).applyQuaternion(p0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(As.x,n),t.positionY.linearRampToValueAtTime(As.y,n),t.positionZ.linearRampToValueAtTime(As.z,n),t.orientationX.linearRampToValueAtTime(Cs.x,n),t.orientationY.linearRampToValueAtTime(Cs.y,n),t.orientationZ.linearRampToValueAtTime(Cs.z,n)}else t.setPosition(As.x,As.y,As.z),t.setOrientation(Cs.x,Cs.y,Cs.z)}}class FA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Gy{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==i;++c)n[s+c]=n[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){Wn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;Wn.multiplyQuaternionsFlat(e,a,e,t,e,n),Wn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*a+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]+e[n+a]*i}}}const Kp="\\[\\]\\.:\\/",OA=new RegExp("["+Kp+"]","g"),Qp="[^"+Kp+"]",BA="[^"+Kp.replace("\\.","")+"]",zA=/((?:WC+[\/:])*)/.source.replace("WC",Qp),kA=/(WCOD+)?/.source.replace("WCOD",BA),HA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Qp),VA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Qp),GA=new RegExp("^"+zA+kA+HA+VA+"$"),WA=["material","materials","bones","map"];class XA{constructor(e,t,n){const i=n||Gt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Gt{constructor(e,t,n){this.path=t,this.parsedPath=n||Gt.parseTrackName(t),this.node=Gt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Gt.Composite(e,t,n):new Gt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(OA,"")}static parseTrackName(e){const t=GA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);WA.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const c=s[a];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Gt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Gt.Composite=XA;Gt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Gt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Gt.prototype.GetterByBindingType=[Gt.prototype._getValue_direct,Gt.prototype._getValue_array,Gt.prototype._getValue_arrayElement,Gt.prototype._getValue_toArray];Gt.prototype.SetterByBindingTypeAndVersioning=[[Gt.prototype._setValue_direct,Gt.prototype._setValue_direct_setNeedsUpdate,Gt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_array,Gt.prototype._setValue_array_setNeedsUpdate,Gt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_arrayElement,Gt.prototype._setValue_arrayElement_setNeedsUpdate,Gt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Gt.prototype._setValue_fromArray,Gt.prototype._setValue_fromArray_setNeedsUpdate,Gt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class YA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Si(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let y=t[g];if(y===void 0){y=u++,t[g]=y,e.push(m);for(let M=0,x=a;M!==x;++M)s[M].push(new Gt(m,n[M],i[M]))}else if(y<h){c=e[y];const M=--h,x=e[M];t[x.uuid]=y,e[y]=x,t[g]=M,e[M]=m;for(let _=0,w=a;_!==w;++_){const E=s[_],T=E[M];let N=E[y];E[y]=T,N===void 0&&(N=new Gt(m,n[_],i[_])),E[M]=N}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let g=0,y=i;g!==y;++g){const M=n[g],x=M[p],_=M[f];M[f]=x,M[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,g=e[m],y=--a,M=e[y];t[g.uuid]=p,e[p]=g,t[M.uuid]=m,e[m]=M,e.pop();for(let x=0,_=i;x!==_;++x){const w=n[x],E=w[m],T=w[y];w[p]=E,w[m]=T,w.pop()}}else{const m=--a,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let y=0,M=i;y!==M;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const a=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,a.push(e),c.push(t),s.push(p);for(let m=f,g=u.length;m!==g;++m){const y=u[m];p[m]=new Gt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],h=e[c];t[h]=n,a[n]=u,a.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class Wy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,c=new Array(a),u={endingStart:Us,endingEnd:Us};for(let h=0;h!==a;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=E_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,c=i/s;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Sp:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulateAdditive(c);break;case gh:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(a),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===T_;if(e===0)return s===-1?i:a&&(s&1)===1?t-i:i;if(n===w_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(a&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ns,i.endingEnd=Ns):(e?i.endingStart=this.zeroSlopeAtStart?Ns:Us:i.endingStart=el,t?i.endingEnd=this.zeroSlopeAtEnd?Ns:Us:i.endingEnd=el)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const qA=new Float32Array(1);class ZA extends ur{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],g=m.name;let y=f[g];if(y!==void 0)++y.referenceCount,a[p]=y;else{if(y=a[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,g));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;y=new Gy(Gt.create(n,g,M),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,g),a[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,c=a[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,c=a[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Xp(new Float32Array(2),new Float32Array(2),1,qA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?ul.findByName(i,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=gh),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const f=new Wy(this,a,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?ul.findByName(n,e):e,a=s?s.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,a);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let c=0,u=a.length;c!==u;++c){const h=a[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const c=n[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const c=s[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class $p{constructor(e){this.value=e}clone(){return new $p(this.value.clone===void 0?this.value:this.value.clone())}}let JA=0;class jA extends ur{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:JA++}),this.name="",this.usage=tl,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let a=0;a<s.length;a++)this.uniforms.push(s[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class KA extends Mh{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class QA{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const m0=new Et;class em{constructor(e,t,n=0,i=1/0){this.ray=new js(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Gs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return m0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(m0),this}intersectObject(e,t=!0,n=[]){return ap(e,this,n,t),n.sort(g0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)ap(e[i],this,n,t);return n.sort(g0),n}}function g0(r,e){return r.distance-e.distance}function ap(r,e,t,n){let i=!0;if(r.layers.test(e.layers)&&r.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const s=r.children;for(let a=0,c=s.length;a<c;a++)ap(s[a],e,t,!0)}}class lp{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(gn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class $A{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class tm{constructor(e,t,n,i){tm.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=i,this}}const v0=new we;class eC{constructor(e=new we(1/0,1/0),t=new we(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=v0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,v0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _0=new B,cu=new B;class tC{constructor(e=new B,t=new B){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_0.subVectors(e,this.start),cu.subVectors(this.end,this.start);const n=cu.dot(cu);let s=cu.dot(_0)/n;return t&&(s=gn(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const y0=new B;class nC extends Xt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Dt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const h=a/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new ut(i,3));const s=new ii({fog:!1,toneMapped:!1});this.cone=new hr(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),y0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(y0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Zr=new B,uu=new Et,Pd=new Et;class iC extends hr{constructor(e){const t=Xy(e),n=new Dt,i=[],s=[],a=new tt(0,0,1),c=new tt(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new ut(i,3)),n.setAttribute("color",new ut(s,3));const u=new ii({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Pd.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(uu.multiplyMatrices(Pd,c.matrixWorld),Zr.setFromMatrixPosition(uu),i.setXYZ(a,Zr.x,Zr.y,Zr.z),uu.multiplyMatrices(Pd,c.parent.matrixWorld),Zr.setFromMatrixPosition(uu),i.setXYZ(a+1,Zr.x,Zr.y,Zr.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Xy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Xy(r.children[t]));return e}class rC extends fn{constructor(e,t,n){const i=new Al(t,4,2),s=new Lr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const sC=new B,x0=new tt,M0=new tt;class oC extends Xt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new bl(t);i.rotateY(Math.PI*.5),this.material=new Lr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),a=new Float32Array(s.count*3);i.setAttribute("color",new en(a,3)),this.add(new fn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");x0.copy(this.light.color),M0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?x0:M0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(sC.setFromMatrixPosition(this.light.matrixWorld).negate())}}class aC extends hr{constructor(e=10,t=10,n=4473924,i=8947848){n=new tt(n),i=new tt(i);const s=t/2,a=e/t,c=e/2,u=[],h=[];for(let m=0,g=0,y=-c;m<=t;m++,y+=a){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const M=m===s?n:i;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const f=new Dt;f.setAttribute("position",new ut(u,3)),f.setAttribute("color",new ut(h,3));const p=new ii({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class lC extends hr{constructor(e=10,t=16,n=8,i=64,s=4473924,a=8947848){s=new tt(s),a=new tt(a);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(g,0,y);const M=p&1?s:a;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?s:a,g=e-e/n*p;for(let y=0;y<i;y++){let M=y/i*(Math.PI*2),x=Math.sin(M)*g,_=Math.cos(M)*g;c.push(x,0,_),u.push(m.r,m.g,m.b),M=(y+1)/i*(Math.PI*2),x=Math.sin(M)*g,_=Math.cos(M)*g,c.push(x,0,_),u.push(m.r,m.g,m.b)}}const h=new Dt;h.setAttribute("position",new ut(c,3)),h.setAttribute("color",new ut(u,3));const f=new ii({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const S0=new B,hu=new B,w0=new B;class cC extends Xt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new Dt;i.setAttribute("position",new ut([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new ii({fog:!1,toneMapped:!1});this.lightPlane=new ts(i,s),this.add(this.lightPlane),i=new Dt,i.setAttribute("position",new ut([0,0,0,0,0,1],3)),this.targetLine=new ts(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),S0.setFromMatrixPosition(this.light.matrixWorld),hu.setFromMatrixPosition(this.light.target.matrixWorld),w0.subVectors(hu,S0),this.lightPlane.lookAt(hu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(hu),this.targetLine.scale.z=w0.length()}}const fu=new B,mn=new xl;class uC extends hr{constructor(e){const t=new Dt,n=new ii({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,M){u(y),u(M)}function u(y){i.push(0,0,0),s.push(0,0,0),a[y]===void 0&&(a[y]=[]),a[y].push(i.length/3-1)}t.setAttribute("position",new ut(i,3)),t.setAttribute("color",new ut(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new tt(16755200),f=new tt(16711680),p=new tt(43775),m=new tt(16777215),g=new tt(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;mn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),_n("c",t,e,mn,0,0,-1),_n("t",t,e,mn,0,0,1),_n("n1",t,e,mn,-n,-i,-1),_n("n2",t,e,mn,n,-i,-1),_n("n3",t,e,mn,-n,i,-1),_n("n4",t,e,mn,n,i,-1),_n("f1",t,e,mn,-n,-i,1),_n("f2",t,e,mn,n,-i,1),_n("f3",t,e,mn,-n,i,1),_n("f4",t,e,mn,n,i,1),_n("u1",t,e,mn,n*.7,i*1.1,-1),_n("u2",t,e,mn,-n*.7,i*1.1,-1),_n("u3",t,e,mn,0,i*2,-1),_n("cf1",t,e,mn,-n,0,1),_n("cf2",t,e,mn,n,0,1),_n("cf3",t,e,mn,0,-i,1),_n("cf4",t,e,mn,0,i,1),_n("cn1",t,e,mn,-n,0,-1),_n("cn2",t,e,mn,n,0,-1),_n("cn3",t,e,mn,0,-i,-1),_n("cn4",t,e,mn,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function _n(r,e,t,n,i,s,a){fu.set(i,s,a).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],fu.x,fu.y,fu.z)}}const du=new ni;class hC extends hr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Dt;s.setIndex(new en(n,1)),s.setAttribute("position",new en(i,3)),super(s,new ii({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&du.setFromObject(this.object),du.isEmpty())return;const t=du.min,n=du.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class fC extends hr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Dt;s.setIndex(new en(n,1)),s.setAttribute("position",new ut(i,3)),super(s,new ii({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class dC extends ts{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new Dt;a.setAttribute("position",new ut(s,3)),a.computeBoundingSphere(),super(a,new ii({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new Dt;u.setAttribute("position",new ut(c,3)),u.computeBoundingSphere(),this.add(new fn(u,new Lr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const E0=new B;let pu,Ld;class pC extends Xt{constructor(e=new B(0,0,1),t=new B(0,0,0),n=1,i=16776960,s=n*.2,a=s*.2){super(),this.type="ArrowHelper",pu===void 0&&(pu=new Dt,pu.setAttribute("position",new ut([0,0,0,0,1,0],3)),Ld=new ea(0,.5,1,5,1),Ld.translate(0,-.5,0)),this.position.copy(t),this.line=new ts(pu,new ii({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new fn(Ld,new Lr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{E0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(E0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class mC extends hr{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Dt;i.setAttribute("position",new ut(t,3)),i.setAttribute("color",new ut(n,3));const s=new ii({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new tt,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class gC{constructor(){this.type="ShapePath",this.color=new tt,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new rl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,a){return this.currentPath.bezierCurveTo(e,t,n,i,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const w=[];for(let E=0,T=_.length;E<T;E++){const N=_[E],P=new Ws;P.curves=N.curves,w.push(P)}return w}function n(_,w){const E=w.length;let T=!1;for(let N=E-1,P=0;P<E;N=P++){let U=w[N],L=w[P],R=L.x-U.x,A=L.y-U.y;if(Math.abs(A)>Number.EPSILON){if(A<0&&(U=w[P],R=-R,L=w[N],A=-A),_.y<U.y||_.y>L.y)continue;if(_.y===U.y){if(_.x===U.x)return!0}else{const O=A*(_.x-U.x)-R*(_.y-U.y);if(O===0)return!0;if(O<0)continue;T=!T}}else{if(_.y!==U.y)continue;if(L.x<=_.x&&_.x<=U.x||U.x<=_.x&&_.x<=L.x)return!0}}return T}const i=or.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,c,u;const h=[];if(s.length===1)return c=s[0],u=new Ws,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],y=0,M;m[y]=void 0,g[y]=[];for(let _=0,w=s.length;_<w;_++)c=s[_],M=c.getPoints(),a=i(M),a=e?!a:a,a?(!f&&m[y]&&y++,m[y]={s:new Ws,p:M},m[y].s.curves=c.curves,f&&y++,g[y]=[]):g[y].push({h:c,p:M[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,w=0;for(let E=0,T=m.length;E<T;E++)p[E]=[];for(let E=0,T=m.length;E<T;E++){const N=g[E];for(let P=0;P<N.length;P++){const U=N[P];let L=!0;for(let R=0;R<m.length;R++)n(U.p,m[R].p)&&(E!==R&&w++,L?(L=!1,p[R].push(U)):_=!0);L&&p[E].push(U)}}w>0&&_===!1&&(g=p)}let x;for(let _=0,w=m.length;_<w;_++){u=m[_].s,h.push(u),x=g[_];for(let E=0,T=x.length;E<T;E++)u.holes.push(x[E].h)}return h}}class vC extends ur{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class _C extends Ei{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:pl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=pl);const yC=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:dp,AddEquation:Kr,AddOperation:m_,AdditiveAnimationBlendMode:Sp,AdditiveBlending:Yd,AgXToneMapping:x_,AlphaFormat:gp,AlwaysCompare:N_,AlwaysDepth:bu,AlwaysStencilFunc:Kd,AmbientLight:Fy,AnimationAction:Wy,AnimationClip:ul,AnimationLoader:MA,AnimationMixer:ZA,AnimationObjectGroup:YA,AnimationUtils:vA,ArcCurve:oy,ArrayCamera:K_,ArrowHelper:pC,AttachedBindMode:Jd,Audio:Vy,AudioAnalyser:FA,AudioContext:Jp,AudioListener:DA,AudioLoader:IA,AxesHelper:mC,BackSide:ti,BasicDepthPacking:b_,BasicShadowMap:J0,BatchedMesh:iy,Bone:Np,BooleanKeyframeTrack:Qs,Box2:eC,Box3:ni,Box3Helper:fC,BoxGeometry:Ks,BoxHelper:hC,BufferAttribute:en,BufferGeometry:Dt,BufferGeometryLoader:Hy,ByteType:uh,Cache:Cr,Camera:xl,CameraHelper:uC,CanvasTexture:Hb,CapsuleGeometry:Th,CatmullRomCurve3:ay,CineonToneMapping:__,CircleGeometry:bh,ClampToEdgeWrapping:En,Clock:jp,Color:tt,ColorKeyframeTrack:Yp,ColorManagement:Vt,CompressedArrayTexture:zb,CompressedCubeTexture:kb,CompressedTexture:wh,CompressedTextureLoader:SA,ConeGeometry:Ah,ConstantAlphaFactor:f_,ConstantColorFactor:u_,Controls:vC,CubeCamera:W_,CubeReflectionMapping:ar,CubeRefractionMapping:es,CubeTexture:Ml,CubeTextureLoader:Py,CubeUVReflectionMapping:Qo,CubicBezierCurve:Bp,CubicBezierCurve3:ly,CubicInterpolant:Ay,CullFaceBack:Xd,CullFaceFront:Z0,CullFaceFrontBack:_M,CullFaceNone:q0,Curve:Yi,CurvePath:uy,CustomBlending:j0,CustomToneMapping:y_,CylinderGeometry:ea,Cylindrical:$A,Data3DTexture:Tp,DataArrayTexture:vh,DataTexture:Xi,DataTextureLoader:qp,DataUtils:Os,DecrementStencilOp:PM,DecrementWrapStencilOp:DM,DefaultLoadingManager:Iy,DepthFormat:Hs,DepthStencilFormat:qs,DepthTexture:Ip,DetachedBindMode:S_,DirectionalLight:Ny,DirectionalLightHelper:cC,DiscreteInterpolant:Cy,DodecahedronGeometry:Ch,DoubleSide:Wi,DstAlphaFactor:s_,DstColorFactor:a_,DynamicCopyUsage:ZM,DynamicDrawUsage:VM,DynamicReadUsage:XM,EdgesGeometry:hy,EllipseCurve:Eh,EqualCompare:P_,EqualDepth:Cu,EqualStencilFunc:OM,EquirectangularReflectionMapping:Xo,EquirectangularRefractionMapping:ja,Euler:Ti,EventDispatcher:ur,ExtrudeGeometry:Ih,FileLoader:wi,Float16BufferAttribute:NS,Float32BufferAttribute:ut,FloatType:hn,Fog:xh,FogExp2:yh,FramebufferTexture:Bb,FrontSide:Pr,Frustum:Sl,GLBufferAttribute:QA,GLSL1:jM,GLSL3:Qd,GreaterCompare:L_,GreaterDepth:Iu,GreaterEqualCompare:U_,GreaterEqualDepth:Ru,GreaterEqualStencilFunc:HM,GreaterStencilFunc:zM,GridHelper:aC,Group:ko,HalfFloatType:Un,HemisphereLight:Ly,HemisphereLightHelper:oC,IcosahedronGeometry:Tl,ImageBitmapLoader:RA,ImageLoader:hl,ImageUtils:z_,IncrementStencilOp:IM,IncrementWrapStencilOp:LM,InstancedBufferAttribute:Jo,InstancedBufferGeometry:ky,InstancedInterleavedBuffer:KA,InstancedMesh:ny,Int16BufferAttribute:DS,Int32BufferAttribute:US,Int8BufferAttribute:IS,IntType:gl,InterleavedBuffer:Mh,InterleavedBufferAttribute:Zs,Interpolant:Cl,InterpolateDiscrete:$a,InterpolateLinear:rh,InterpolateSmooth:xu,InvertStencilOp:UM,KeepStencilOp:Ps,KeyframeTrack:qi,LOD:ey,LatheGeometry:El,Layers:Gs,LessCompare:I_,LessDepth:Au,LessEqualCompare:wp,LessEqualDepth:Xs,LessEqualStencilFunc:BM,LessStencilFunc:FM,Light:ss,LightProbe:zy,Line:ts,Line3:tC,LineBasicMaterial:ii,LineCurve:zp,LineCurve3:cy,LineDashedMaterial:Ey,LineLoop:ry,LineSegments:hr,LinearFilter:Kt,LinearInterpolant:Xp,LinearMipMapLinearFilter:jd,LinearMipMapNearestFilter:MM,LinearMipmapLinearFilter:nr,LinearMipmapNearestFilter:ka,LinearSRGBColorSpace:cr,LinearToneMapping:g_,LinearTransfer:yl,Loader:ri,LoaderUtils:op,LoadingManager:Oh,LoopOnce:w_,LoopPingPong:T_,LoopRepeat:E_,LuminanceAlphaFormat:yp,LuminanceFormat:_p,MOUSE:Rs,Material:Yn,MaterialLoader:Bh,MathUtils:F_,Matrix2:tm,Matrix3:Ct,Matrix4:Et,MaxEquation:e_,Mesh:fn,MeshBasicMaterial:Lr,MeshDepthMaterial:Pp,MeshDistanceMaterial:Lp,MeshLambertMaterial:Sy,MeshMatcapMaterial:wy,MeshNormalMaterial:My,MeshPhongMaterial:yy,MeshPhysicalMaterial:_y,MeshStandardMaterial:Gp,MeshToonMaterial:xy,MinEquation:$0,MirroredRepeatWrapping:Qa,MixOperation:p_,MultiplyBlending:Zd,MultiplyOperation:ml,NearestFilter:Fn,NearestMipMapLinearFilter:xM,NearestMipMapNearestFilter:yM,NearestMipmapLinearFilter:Oo,NearestMipmapNearestFilter:pp,NeutralToneMapping:M_,NeverCompare:R_,NeverDepth:Tu,NeverStencilFunc:NM,NoBlending:rr,NoColorSpace:br,NoToneMapping:sr,NormalAnimationBlendMode:gh,NormalBlending:ks,NotEqualCompare:D_,NotEqualDepth:Pu,NotEqualStencilFunc:kM,NumberKeyframeTrack:ll,Object3D:Xt,ObjectLoader:AA,ObjectSpaceNormalMap:C_,OctahedronGeometry:bl,OneFactor:n_,OneMinusConstantAlphaFactor:d_,OneMinusConstantColorFactor:h_,OneMinusDstAlphaFactor:o_,OneMinusDstColorFactor:l_,OneMinusSrcAlphaFactor:Eu,OneMinusSrcColorFactor:r_,OrthographicCamera:Ir,PCFShadowMap:ch,PCFSoftShadowMap:za,PMREMGenerator:$d,Path:rl,PerspectiveCamera:yn,Plane:Tr,PlaneGeometry:is,PlaneHelper:dC,PointLight:Uy,PointLightHelper:rC,Points:sy,PointsMaterial:Fp,PolarGridHelper:lC,PolyhedronGeometry:rs,PositionalAudio:NA,PropertyBinding:Gt,PropertyMixer:Gy,QuadraticBezierCurve:kp,QuadraticBezierCurve3:Hp,Quaternion:Wn,QuaternionKeyframeTrack:Rl,QuaternionLinearInterpolant:Ry,RED_GREEN_RGTC2_Format:nh,RED_RGTC1_Format:Mp,REVISION:pl,RGBADepthPacking:A_,RGBAFormat:xn,RGBAIntegerFormat:mh,RGBA_ASTC_10x10_Format:ju,RGBA_ASTC_10x5_Format:qu,RGBA_ASTC_10x6_Format:Zu,RGBA_ASTC_10x8_Format:Ju,RGBA_ASTC_12x10_Format:Ku,RGBA_ASTC_12x12_Format:Qu,RGBA_ASTC_4x4_Format:zu,RGBA_ASTC_5x4_Format:ku,RGBA_ASTC_5x5_Format:Hu,RGBA_ASTC_6x5_Format:Vu,RGBA_ASTC_6x6_Format:Gu,RGBA_ASTC_8x5_Format:Wu,RGBA_ASTC_8x6_Format:Xu,RGBA_ASTC_8x8_Format:Yu,RGBA_BPTC_Format:Xa,RGBA_ETC2_EAC_Format:Bu,RGBA_PVRTC_2BPPV1_Format:Nu,RGBA_PVRTC_4BPPV1_Format:Uu,RGBA_S3TC_DXT1_Format:Va,RGBA_S3TC_DXT3_Format:Ga,RGBA_S3TC_DXT5_Format:Wa,RGBDepthPacking:bM,RGBFormat:vp,RGBIntegerFormat:SM,RGB_BPTC_SIGNED_Format:$u,RGB_BPTC_UNSIGNED_Format:eh,RGB_ETC1_Format:Fu,RGB_ETC2_Format:Ou,RGB_PVRTC_2BPPV1_Format:Du,RGB_PVRTC_4BPPV1_Format:Lu,RGB_S3TC_DXT1_Format:Ha,RGDepthPacking:AM,RGFormat:xp,RGIntegerFormat:ph,RawShaderMaterial:vy,Ray:js,Raycaster:em,RectAreaLight:Oy,RedFormat:vl,RedIntegerFormat:_l,ReinhardToneMapping:v_,RenderTarget:k_,RepeatWrapping:Ka,ReplaceStencilOp:RM,ReverseSubtractEquation:Q0,RingGeometry:Ph,SIGNED_RED_GREEN_RGTC2_Format:ih,SIGNED_RED_RGTC1_Format:th,SRGBColorSpace:$n,SRGBTransfer:jt,Scene:wl,ShaderChunk:Lt,ShaderLib:Gi,ShaderMaterial:di,ShadowMaterial:gy,Shape:Ws,ShapeGeometry:Lh,ShapePath:gC,ShapeUtils:or,ShortType:hh,Skeleton:Sh,SkeletonHelper:iC,SkinnedMesh:ty,Source:Fs,Sphere:Xn,SphereGeometry:Al,Spherical:lp,SphericalHarmonics3:By,SplineCurve:Vp,SpotLight:Dy,SpotLightHelper:nC,Sprite:$_,SpriteMaterial:Up,SrcAlphaFactor:wu,SrcAlphaSaturateFactor:c_,SrcColorFactor:i_,StaticCopyUsage:qM,StaticDrawUsage:tl,StaticReadUsage:WM,StereoCamera:PA,StreamCopyUsage:JM,StreamDrawUsage:GM,StreamReadUsage:YM,StringKeyframeTrack:$s,SubtractEquation:K0,SubtractiveBlending:qd,TOUCH:Is,TangentSpaceNormalMap:ns,TetrahedronGeometry:Dh,Texture:$t,TextureLoader:wA,TextureUtils:_b,TorusGeometry:Uh,TorusKnotGeometry:Nh,Triangle:hi,TriangleFanDrawMode:TM,TriangleStripDrawMode:EM,TrianglesDrawMode:wM,TubeGeometry:Fh,UVMapping:$r,Uint16BufferAttribute:bp,Uint32BufferAttribute:Ap,Uint8BufferAttribute:PS,Uint8ClampedBufferAttribute:LS,Uniform:$p,UniformsGroup:jA,UniformsLib:Ye,UniformsUtils:G_,UnsignedByteType:fi,UnsignedInt248Type:Ys,UnsignedInt5999Type:mp,UnsignedIntType:lr,UnsignedShort4444Type:fh,UnsignedShort5551Type:dh,UnsignedShortType:Yo,VSMShadowMap:Vi,Vector2:we,Vector3:B,Vector4:Wt,VectorKeyframeTrack:cl,VideoTexture:Ob,WebGL3DRenderTarget:xS,WebGLArrayRenderTarget:yS,WebGLCoordinateSystem:ir,WebGLCubeRenderTarget:Cp,WebGLMultipleRenderTargets:_C,WebGLRenderTarget:Ei,WebGLRenderer:Dp,WebGLUtils:j_,WebGPUCoordinateSystem:nl,WireframeGeometry:my,WrapAroundEnding:el,ZeroCurvatureEnding:Us,ZeroFactor:t_,ZeroSlopeEnding:Ns,ZeroStencilOp:CM,createCanvasElement:B_},Symbol.toStringTag,{value:"Module"}));var Yy={exports:{}},eo={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */eo.ConcurrentRoot=1;eo.ContinuousEventPriority=4;eo.DefaultEventPriority=16;eo.DiscreteEventPriority=1;eo.IdleEventPriority=536870912;eo.LegacyRoot=0;Yy.exports=eo;var Vo=Yy.exports;function xC(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(g=>g(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function g(){const y=f(e);if(!p(m,y)){const M=m;h(m=y,M)}}return t.add(g),()=>t.delete(g)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const MC=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),T0=MC?De.useEffect:De.useLayoutEffect;function qy(r){const e=typeof r=="function"?xC(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=De.useReducer(x=>x+1,0),a=e.getState(),c=De.useRef(a),u=De.useRef(n),h=De.useRef(i),f=De.useRef(!1),p=De.useRef();p.current===void 0&&(p.current=n(a));let m,g=!1;(c.current!==a||u.current!==n||h.current!==i||f.current)&&(m=n(a),g=!i(p.current,m)),T0(()=>{g&&(p.current=m),c.current=a,u.current=n,h.current=i,f.current=!1});const y=De.useRef(a);T0(()=>{const x=()=>{try{const w=e.getState(),E=u.current(w);h.current(p.current,E)||(c.current=w,p.current=E,s())}catch{f.current=!0,s()}},_=e.subscribe(x);return e.getState()!==y.current&&x(),_},[]);const M=g?m:p.current;return De.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}const SC=r=>typeof r=="object"&&typeof r.then=="function",zs=[];function Zy(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function Jy(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of zs)if(Zy(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=zs.indexOf(i);s!==-1&&zs.splice(s,1)},promise:(SC(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(zs.push(i),!t)throw i.promise}const wC=(r,e,t)=>Jy(r,e,!1,t),EC=(r,e,t)=>void Jy(r,e,!0,t),TC=r=>{if(r===void 0||r.length===0)zs.splice(0,zs.length);else{const e=zs.find(t=>Zy(r,t.keys,t.equal));e&&e.remove()}};var jy={exports:{}},Dd={exports:{}},Ud={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var b0;function bC(){return b0||(b0=1,function(r){function e(z,te){var Q=z.length;z.push(te);e:for(;0<Q;){var fe=Q-1>>>1,xe=z[fe];if(0<i(xe,te))z[fe]=te,z[Q]=xe,Q=fe;else break e}}function t(z){return z.length===0?null:z[0]}function n(z){if(z.length===0)return null;var te=z[0],Q=z.pop();if(Q!==te){z[0]=Q;e:for(var fe=0,xe=z.length,ze=xe>>>1;fe<ze;){var ce=2*(fe+1)-1,be=z[ce],Ae=ce+1,Re=z[Ae];if(0>i(be,Q))Ae<xe&&0>i(Re,be)?(z[fe]=Re,z[Ae]=Q,fe=Ae):(z[fe]=be,z[ce]=Q,fe=ce);else if(Ae<xe&&0>i(Re,Q))z[fe]=Re,z[Ae]=Q,fe=Ae;else break e}}return te}function i(z,te){var Q=z.sortIndex-te.sortIndex;return Q!==0?Q:z.id-te.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();r.unstable_now=function(){return a.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(z){for(var te=t(h);te!==null;){if(te.callback===null)n(h);else if(te.startTime<=z)n(h),te.sortIndex=te.expirationTime,e(u,te);else break;te=t(h)}}function T(z){if(M=!1,E(z),!y)if(t(u)!==null)y=!0,ee(N);else{var te=t(h);te!==null&&Ee(T,te.startTime-z)}}function N(z,te){y=!1,M&&(M=!1,_(L),L=-1),g=!0;var Q=m;try{for(E(te),p=t(u);p!==null&&(!(p.expirationTime>te)||z&&!O());){var fe=p.callback;if(typeof fe=="function"){p.callback=null,m=p.priorityLevel;var xe=fe(p.expirationTime<=te);te=r.unstable_now(),typeof xe=="function"?p.callback=xe:p===t(u)&&n(u),E(te)}else n(u);p=t(u)}if(p!==null)var ze=!0;else{var ce=t(h);ce!==null&&Ee(T,ce.startTime-te),ze=!1}return ze}finally{p=null,m=Q,g=!1}}var P=!1,U=null,L=-1,R=5,A=-1;function O(){return!(r.unstable_now()-A<R)}function K(){if(U!==null){var z=r.unstable_now();A=z;var te=!0;try{te=U(!0,z)}finally{te?J():(P=!1,U=null)}}else P=!1}var J;if(typeof w=="function")J=function(){w(K)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,he=$.port2;$.port1.onmessage=K,J=function(){he.postMessage(null)}}else J=function(){x(K,0)};function ee(z){U=z,P||(P=!0,J())}function Ee(z,te){L=x(function(){z(r.unstable_now())},te)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(z){z.callback=null},r.unstable_continueExecution=function(){y||g||(y=!0,ee(N))},r.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<z?Math.floor(1e3/z):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(z){switch(m){case 1:case 2:case 3:var te=3;break;default:te=m}var Q=m;m=te;try{return z()}finally{m=Q}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(z,te){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var Q=m;m=z;try{return te()}finally{m=Q}},r.unstable_scheduleCallback=function(z,te,Q){var fe=r.unstable_now();switch(typeof Q=="object"&&Q!==null?(Q=Q.delay,Q=typeof Q=="number"&&0<Q?fe+Q:fe):Q=fe,z){case 1:var xe=-1;break;case 2:xe=250;break;case 5:xe=1073741823;break;case 4:xe=1e4;break;default:xe=5e3}return xe=Q+xe,z={id:f++,callback:te,priorityLevel:z,startTime:Q,expirationTime:xe,sortIndex:-1},Q>fe?(z.sortIndex=Q,e(h,z),t(u)===null&&z===t(h)&&(M?(_(L),L=-1):M=!0,Ee(T,Q-fe))):(z.sortIndex=xe,e(u,z),y||g||(y=!0,ee(N))),z},r.unstable_shouldYield=O,r.unstable_wrapCallback=function(z){var te=m;return function(){var Q=m;m=te;try{return z.apply(this,arguments)}finally{m=Q}}}}(Ud)),Ud}var A0;function AC(){return A0||(A0=1,Dd.exports=bC()),Dd.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var CC=function(e){var t={},n=De,i=AC(),s=Object.assign;function a(o){for(var l="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)l+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+l+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),y=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),E=Symbol.for("react.lazy"),T=Symbol.for("react.offscreen"),N=Symbol.iterator;function P(o){return o===null||typeof o!="object"?null:(o=N&&o[N]||o["@@iterator"],typeof o=="function"?o:null)}function U(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case _:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case g:return(o._context.displayName||"Context")+".Provider";case M:var l=o.render;return o=o.displayName,o||(o=l.displayName||l.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return l=o.displayName||null,l!==null?l:U(o.type)||"Memo";case E:l=o._payload,o=o._init;try{return U(o(l))}catch{}}return null}function L(o){var l=o.type;switch(o.tag){case 24:return"Cache";case 9:return(l.displayName||"Context")+".Consumer";case 10:return(l._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=l.render,o=o.displayName||o.name||"",l.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return l;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(l);case 8:return l===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l}return null}function R(o){var l=o,d=o;if(o.alternate)for(;l.return;)l=l.return;else{o=l;do l=o,l.flags&4098&&(d=l.return),o=l.return;while(o)}return l.tag===3?d:null}function A(o){if(R(o)!==o)throw Error(a(188))}function O(o){var l=o.alternate;if(!l){if(l=R(o),l===null)throw Error(a(188));return l!==o?null:o}for(var d=o,v=l;;){var S=d.return;if(S===null)break;var b=S.alternate;if(b===null){if(v=S.return,v!==null){d=v;continue}break}if(S.child===b.child){for(b=S.child;b;){if(b===d)return A(S),o;if(b===v)return A(S),l;b=b.sibling}throw Error(a(188))}if(d.return!==v.return)d=S,v=b;else{for(var V=!1,ne=S.child;ne;){if(ne===d){V=!0,d=S,v=b;break}if(ne===v){V=!0,v=S,d=b;break}ne=ne.sibling}if(!V){for(ne=b.child;ne;){if(ne===d){V=!0,d=b,v=S;break}if(ne===v){V=!0,v=b,d=S;break}ne=ne.sibling}if(!V)throw Error(a(189))}}if(d.alternate!==v)throw Error(a(190))}if(d.tag!==3)throw Error(a(188));return d.stateNode.current===d?o:l}function K(o){return o=O(o),o!==null?J(o):null}function J(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var l=J(o);if(l!==null)return l;o=o.sibling}return null}function $(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var l=$(o);if(l!==null)return l}o=o.sibling}return null}var he=Array.isArray,ee=e.getPublicInstance,Ee=e.getRootHostContext,z=e.getChildHostContext,te=e.prepareForCommit,Q=e.resetAfterCommit,fe=e.createInstance,xe=e.appendInitialChild,ze=e.finalizeInitialChildren,ce=e.prepareUpdate,be=e.shouldSetTextContent,Ae=e.createTextInstance,Re=e.scheduleTimeout,it=e.cancelTimeout,yt=e.noTimeout,gt=e.isPrimaryRenderer,St=e.supportsMutation,Te=e.supportsPersistence,Ie=e.supportsHydration,W=e.getInstanceFromNode,lt=e.preparePortalMount,Ue=e.getCurrentEventPriority,je=e.detachDeletedInstance,ke=e.supportsMicrotasks,_t=e.scheduleMicrotask,Xe=e.supportsTestSelectors,k=e.findFiberRoot,D=e.getBoundingRect,se=e.getTextContent,ve=e.isHiddenSubtree,Ce=e.matchAccessibilityRole,ye=e.setFocusIfFocusable,rt=e.setupIntersectionObserver,Ge=e.appendChild,qe=e.appendChildToContainer,Rt=e.commitTextUpdate,Ne=e.commitMount,et=e.commitUpdate,ht=e.insertBefore,ot=e.insertInContainerBefore,Ke=e.removeChild,j=e.removeChildFromContainer,me=e.resetTextContent,Fe=e.hideInstance,q=e.hideTextInstance,oe=e.unhideInstance,de=e.unhideTextInstance,Me=e.clearContainer,Ze=e.cloneInstance,We=e.createContainerChildSet,vt=e.appendChildToContainerChildSet,kt=e.finalizeContainerChildren,tn=e.replaceContainerChildren,Ut=e.cloneHiddenInstance,dn=e.cloneHiddenTextInstance,Cn=e.canHydrateInstance,to=e.canHydrateTextInstance,no=e.canHydrateSuspenseInstance,qn=e.isSuspenseInstancePending,fr=e.isSuspenseInstanceFallback,Zi=e.registerSuspenseInstanceRetry,si=e.getNextHydratableSibling,It=e.getFirstHydratableChild,os=e.getFirstHydratableChildWithinContainer,Dr=e.getFirstHydratableChildWithinSuspenseInstance,I=e.hydrateInstance,F=e.hydrateTextInstance,Z=e.hydrateSuspenseInstance,ue=e.getNextHydratableInstanceAfterSuspenseInstance,ge=e.commitHydratedContainer,C=e.commitHydratedSuspenseInstance,H=e.clearSuspenseBoundary,X=e.clearSuspenseBoundaryFromContainer,Y=e.shouldDeleteUnhydratedTailInstances,G=e.didNotMatchHydratedContainerTextInstance,re=e.didNotMatchHydratedTextInstance,ae;function Oe(o){if(ae===void 0)try{throw Error()}catch(d){var l=d.stack.trim().match(/\n( *(at )?)/);ae=l&&l[1]||""}return`
`+ae+o}var Se=!1;function Pe(o,l){if(!o||Se)return"";Se=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(l)if(l=function(){throw Error()},Object.defineProperty(l.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(l,[])}catch(Be){var v=Be}Reflect.construct(o,[],l)}else{try{l.call()}catch(Be){v=Be}o.call(l.prototype)}else{try{throw Error()}catch(Be){v=Be}o()}}catch(Be){if(Be&&v&&typeof Be.stack=="string"){for(var S=Be.stack.split(`
`),b=v.stack.split(`
`),V=S.length-1,ne=b.length-1;1<=V&&0<=ne&&S[V]!==b[ne];)ne--;for(;1<=V&&0<=ne;V--,ne--)if(S[V]!==b[ne]){if(V!==1||ne!==1)do if(V--,ne--,0>ne||S[V]!==b[ne]){var _e=`
`+S[V].replace(" at new "," at ");return o.displayName&&_e.includes("<anonymous>")&&(_e=_e.replace("<anonymous>",o.displayName)),_e}while(1<=V&&0<=ne);break}}}finally{Se=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?Oe(o):""}var He=Object.prototype.hasOwnProperty,Le=[],nt=-1;function ct(o){return{current:o}}function $e(o){0>nt||(o.current=Le[nt],Le[nt]=null,nt--)}function dt(o,l){nt++,Le[nt]=o.current,o.current=l}var st={},Ve=ct(st),wt=ct(!1),pt=st;function Qt(o,l){var d=o.type.contextTypes;if(!d)return st;var v=o.stateNode;if(v&&v.__reactInternalMemoizedUnmaskedChildContext===l)return v.__reactInternalMemoizedMaskedChildContext;var S={},b;for(b in d)S[b]=l[b];return v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=l,o.__reactInternalMemoizedMaskedChildContext=S),S}function nn(o){return o=o.childContextTypes,o!=null}function Jt(){$e(wt),$e(Ve)}function Ht(o,l,d){if(Ve.current!==st)throw Error(a(168));dt(Ve,l),dt(wt,d)}function Tt(o,l,d){var v=o.stateNode;if(l=l.childContextTypes,typeof v.getChildContext!="function")return d;v=v.getChildContext();for(var S in v)if(!(S in l))throw Error(a(108,L(o)||"Unknown",S));return s({},d,v)}function Nt(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||st,pt=Ve.current,dt(Ve,o),dt(wt,wt.current),!0}function Bt(o,l,d){var v=o.stateNode;if(!v)throw Error(a(169));d?(o=Tt(o,l,pt),v.__reactInternalMemoizedMergedChildContext=o,$e(wt),$e(Ve),dt(Ve,o)):$e(wt),dt(wt,d)}var zt=Math.clz32?Math.clz32:pi,Rn=Math.log,an=Math.LN2;function pi(o){return o>>>=0,o===0?32:31-(Rn(o)/an|0)|0}var Ll=64,Dl=4194304;function ta(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function Ul(o,l){var d=o.pendingLanes;if(d===0)return 0;var v=0,S=o.suspendedLanes,b=o.pingedLanes,V=d&268435455;if(V!==0){var ne=V&~S;ne!==0?v=ta(ne):(b&=V,b!==0&&(v=ta(b)))}else V=d&~S,V!==0?v=ta(V):b!==0&&(v=ta(b));if(v===0)return 0;if(l!==0&&l!==v&&!(l&S)&&(S=v&-v,b=l&-l,S>=b||S===16&&(b&4194240)!==0))return l;if(v&4&&(v|=d&16),l=o.entangledLanes,l!==0)for(o=o.entanglements,l&=v;0<l;)d=31-zt(l),S=1<<d,v|=o[d],l&=~S;return v}function Rx(o,l){switch(o){case 1:case 2:case 4:return l+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return l+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Ix(o,l){for(var d=o.suspendedLanes,v=o.pingedLanes,S=o.expirationTimes,b=o.pendingLanes;0<b;){var V=31-zt(b),ne=1<<V,_e=S[V];_e===-1?(!(ne&d)||ne&v)&&(S[V]=Rx(ne,l)):_e<=l&&(o.expiredLanes|=ne),b&=~ne}}function kh(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Hh(o){for(var l=[],d=0;31>d;d++)l.push(o);return l}function na(o,l,d){o.pendingLanes|=l,l!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,l=31-zt(l),o[l]=d}function Px(o,l){var d=o.pendingLanes&~l;o.pendingLanes=l,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=l,o.mutableReadLanes&=l,o.entangledLanes&=l,l=o.entanglements;var v=o.eventTimes;for(o=o.expirationTimes;0<d;){var S=31-zt(d),b=1<<S;l[S]=0,v[S]=-1,o[S]=-1,d&=~b}}function Vh(o,l){var d=o.entangledLanes|=l;for(o=o.entanglements;d;){var v=31-zt(d),S=1<<v;S&l|o[v]&l&&(o[v]|=l),d&=~S}}var Yt=0;function pm(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Gh=i.unstable_scheduleCallback,mm=i.unstable_cancelCallback,Lx=i.unstable_shouldYield,Dx=i.unstable_requestPaint,In=i.unstable_now,Wh=i.unstable_ImmediatePriority,Ux=i.unstable_UserBlockingPriority,Xh=i.unstable_NormalPriority,Nx=i.unstable_IdlePriority,Nl=null,Ji=null;function Fx(o){if(Ji&&typeof Ji.onCommitFiberRoot=="function")try{Ji.onCommitFiberRoot(Nl,o,void 0,(o.current.flags&128)===128)}catch{}}function Ox(o,l){return o===l&&(o!==0||1/o===1/l)||o!==o&&l!==l}var ji=typeof Object.is=="function"?Object.is:Ox,dr=null,Fl=!1,Yh=!1;function gm(o){dr===null?dr=[o]:dr.push(o)}function Bx(o){Fl=!0,gm(o)}function Ki(){if(!Yh&&dr!==null){Yh=!0;var o=0,l=Yt;try{var d=dr;for(Yt=1;o<d.length;o++){var v=d[o];do v=v(!0);while(v!==null)}dr=null,Fl=!1}catch(S){throw dr!==null&&(dr=dr.slice(o+1)),Gh(Wh,Ki),S}finally{Yt=l,Yh=!1}}return null}var zx=c.ReactCurrentBatchConfig;function Ol(o,l){if(ji(o,l))return!0;if(typeof o!="object"||o===null||typeof l!="object"||l===null)return!1;var d=Object.keys(o),v=Object.keys(l);if(d.length!==v.length)return!1;for(v=0;v<d.length;v++){var S=d[v];if(!He.call(l,S)||!ji(o[S],l[S]))return!1}return!0}function kx(o){switch(o.tag){case 5:return Oe(o.type);case 16:return Oe("Lazy");case 13:return Oe("Suspense");case 19:return Oe("SuspenseList");case 0:case 2:case 15:return o=Pe(o.type,!1),o;case 11:return o=Pe(o.type.render,!1),o;case 1:return o=Pe(o.type,!0),o;default:return""}}function Fi(o,l){if(o&&o.defaultProps){l=s({},l),o=o.defaultProps;for(var d in o)l[d]===void 0&&(l[d]=o[d]);return l}return l}var Bl=ct(null),zl=null,io=null,qh=null;function Zh(){qh=io=zl=null}function vm(o,l,d){gt?(dt(Bl,l._currentValue),l._currentValue=d):(dt(Bl,l._currentValue2),l._currentValue2=d)}function Jh(o){var l=Bl.current;$e(Bl),gt?o._currentValue=l:o._currentValue2=l}function jh(o,l,d){for(;o!==null;){var v=o.alternate;if((o.childLanes&l)!==l?(o.childLanes|=l,v!==null&&(v.childLanes|=l)):v!==null&&(v.childLanes&l)!==l&&(v.childLanes|=l),o===d)break;o=o.return}}function ro(o,l){zl=o,qh=io=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&l&&(vi=!0),o.firstContext=null)}function bi(o){var l=gt?o._currentValue:o._currentValue2;if(qh!==o)if(o={context:o,memoizedValue:l,next:null},io===null){if(zl===null)throw Error(a(308));io=o,zl.dependencies={lanes:0,firstContext:o}}else io=io.next=o;return l}var Qi=null,Ur=!1;function Kh(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function _m(o,l){o=o.updateQueue,l.updateQueue===o&&(l.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function pr(o,l){return{eventTime:o,lane:l,tag:0,payload:null,callback:null,next:null}}function Nr(o,l){var d=o.updateQueue;d!==null&&(d=d.shared,Mn!==null&&o.mode&1&&!(Ot&2)?(o=d.interleaved,o===null?(l.next=l,Qi===null?Qi=[d]:Qi.push(d)):(l.next=o.next,o.next=l),d.interleaved=l):(o=d.pending,o===null?l.next=l:(l.next=o.next,o.next=l),d.pending=l))}function kl(o,l,d){if(l=l.updateQueue,l!==null&&(l=l.shared,(d&4194240)!==0)){var v=l.lanes;v&=o.pendingLanes,d|=v,l.lanes=d,Vh(o,d)}}function ym(o,l){var d=o.updateQueue,v=o.alternate;if(v!==null&&(v=v.updateQueue,d===v)){var S=null,b=null;if(d=d.firstBaseUpdate,d!==null){do{var V={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};b===null?S=b=V:b=b.next=V,d=d.next}while(d!==null);b===null?S=b=l:b=b.next=l}else S=b=l;d={baseState:v.baseState,firstBaseUpdate:S,lastBaseUpdate:b,shared:v.shared,effects:v.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=l:o.next=l,d.lastBaseUpdate=l}function Hl(o,l,d,v){var S=o.updateQueue;Ur=!1;var b=S.firstBaseUpdate,V=S.lastBaseUpdate,ne=S.shared.pending;if(ne!==null){S.shared.pending=null;var _e=ne,Be=_e.next;_e.next=null,V===null?b=Be:V.next=Be,V=_e;var at=o.alternate;at!==null&&(at=at.updateQueue,ne=at.lastBaseUpdate,ne!==V&&(ne===null?at.firstBaseUpdate=Be:ne.next=Be,at.lastBaseUpdate=_e))}if(b!==null){var bt=S.baseState;V=0,at=Be=_e=null,ne=b;do{var xt=ne.lane,rn=ne.eventTime;if((v&xt)===xt){at!==null&&(at=at.next={eventTime:rn,lane:0,tag:ne.tag,payload:ne.payload,callback:ne.callback,next:null});e:{var mt=o,kn=ne;switch(xt=l,rn=d,kn.tag){case 1:if(mt=kn.payload,typeof mt=="function"){bt=mt.call(rn,bt,xt);break e}bt=mt;break e;case 3:mt.flags=mt.flags&-65537|128;case 0:if(mt=kn.payload,xt=typeof mt=="function"?mt.call(rn,bt,xt):mt,xt==null)break e;bt=s({},bt,xt);break e;case 2:Ur=!0}}ne.callback!==null&&ne.lane!==0&&(o.flags|=64,xt=S.effects,xt===null?S.effects=[ne]:xt.push(ne))}else rn={eventTime:rn,lane:xt,tag:ne.tag,payload:ne.payload,callback:ne.callback,next:null},at===null?(Be=at=rn,_e=bt):at=at.next=rn,V|=xt;if(ne=ne.next,ne===null){if(ne=S.shared.pending,ne===null)break;xt=ne,ne=xt.next,xt.next=null,S.lastBaseUpdate=xt,S.shared.pending=null}}while(!0);if(at===null&&(_e=bt),S.baseState=_e,S.firstBaseUpdate=Be,S.lastBaseUpdate=at,l=S.shared.interleaved,l!==null){S=l;do V|=S.lane,S=S.next;while(S!==l)}else b===null&&(S.shared.lanes=0);po|=V,o.lanes=V,o.memoizedState=bt}}function xm(o,l,d){if(o=l.effects,l.effects=null,o!==null)for(l=0;l<o.length;l++){var v=o[l],S=v.callback;if(S!==null){if(v.callback=null,v=d,typeof S!="function")throw Error(a(191,S));S.call(v)}}}var Mm=new n.Component().refs;function Qh(o,l,d,v){l=o.memoizedState,d=d(v,l),d=d==null?l:s({},l,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var Vl={isMounted:function(o){return(o=o._reactInternals)?R(o)===o:!1},enqueueSetState:function(o,l,d){o=o._reactInternals;var v=Jn(),S=Br(o),b=pr(v,S);b.payload=l,d!=null&&(b.callback=d),Nr(o,b),l=Pi(o,S,v),l!==null&&kl(l,o,S)},enqueueReplaceState:function(o,l,d){o=o._reactInternals;var v=Jn(),S=Br(o),b=pr(v,S);b.tag=1,b.payload=l,d!=null&&(b.callback=d),Nr(o,b),l=Pi(o,S,v),l!==null&&kl(l,o,S)},enqueueForceUpdate:function(o,l){o=o._reactInternals;var d=Jn(),v=Br(o),S=pr(d,v);S.tag=2,l!=null&&(S.callback=l),Nr(o,S),l=Pi(o,v,d),l!==null&&kl(l,o,v)}};function Sm(o,l,d,v,S,b,V){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(v,b,V):l.prototype&&l.prototype.isPureReactComponent?!Ol(d,v)||!Ol(S,b):!0}function wm(o,l,d){var v=!1,S=st,b=l.contextType;return typeof b=="object"&&b!==null?b=bi(b):(S=nn(l)?pt:Ve.current,v=l.contextTypes,b=(v=v!=null)?Qt(o,S):st),l=new l(d,b),o.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=Vl,o.stateNode=l,l._reactInternals=o,v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=b),l}function Em(o,l,d,v){o=l.state,typeof l.componentWillReceiveProps=="function"&&l.componentWillReceiveProps(d,v),typeof l.UNSAFE_componentWillReceiveProps=="function"&&l.UNSAFE_componentWillReceiveProps(d,v),l.state!==o&&Vl.enqueueReplaceState(l,l.state,null)}function $h(o,l,d,v){var S=o.stateNode;S.props=d,S.state=o.memoizedState,S.refs=Mm,Kh(o);var b=l.contextType;typeof b=="object"&&b!==null?S.context=bi(b):(b=nn(l)?pt:Ve.current,S.context=Qt(o,b)),S.state=o.memoizedState,b=l.getDerivedStateFromProps,typeof b=="function"&&(Qh(o,l,b,d),S.state=o.memoizedState),typeof l.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(l=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),l!==S.state&&Vl.enqueueReplaceState(S,S.state,null),Hl(o,d,S,v),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var so=[],oo=0,Gl=null,Wl=0,Ai=[],Ci=0,as=null,mr=1,gr="";function ls(o,l){so[oo++]=Wl,so[oo++]=Gl,Gl=o,Wl=l}function Tm(o,l,d){Ai[Ci++]=mr,Ai[Ci++]=gr,Ai[Ci++]=as,as=o;var v=mr;o=gr;var S=32-zt(v)-1;v&=~(1<<S),d+=1;var b=32-zt(l)+S;if(30<b){var V=S-S%5;b=(v&(1<<V)-1).toString(32),v>>=V,S-=V,mr=1<<32-zt(l)+S|d<<S|v,gr=b+o}else mr=1<<b|d<<S|v,gr=o}function ef(o){o.return!==null&&(ls(o,1),Tm(o,1,0))}function tf(o){for(;o===Gl;)Gl=so[--oo],so[oo]=null,Wl=so[--oo],so[oo]=null;for(;o===as;)as=Ai[--Ci],Ai[Ci]=null,gr=Ai[--Ci],Ai[Ci]=null,mr=Ai[--Ci],Ai[Ci]=null}var mi=null,gi=null,ln=!1,ia=!1,Oi=null;function bm(o,l){var d=Li(5,null,null,0);d.elementType="DELETED",d.stateNode=l,d.return=o,l=o.deletions,l===null?(o.deletions=[d],o.flags|=16):l.push(d)}function Am(o,l){switch(o.tag){case 5:return l=Cn(l,o.type,o.pendingProps),l!==null?(o.stateNode=l,mi=o,gi=It(l),!0):!1;case 6:return l=to(l,o.pendingProps),l!==null?(o.stateNode=l,mi=o,gi=null,!0):!1;case 13:if(l=no(l),l!==null){var d=as!==null?{id:mr,overflow:gr}:null;return o.memoizedState={dehydrated:l,treeContext:d,retryLane:1073741824},d=Li(18,null,null,0),d.stateNode=l,d.return=o,o.child=d,mi=o,gi=null,!0}return!1;default:return!1}}function nf(o){return(o.mode&1)!==0&&(o.flags&128)===0}function rf(o){if(ln){var l=gi;if(l){var d=l;if(!Am(o,l)){if(nf(o))throw Error(a(418));l=si(d);var v=mi;l&&Am(o,l)?bm(v,d):(o.flags=o.flags&-4097|2,ln=!1,mi=o)}}else{if(nf(o))throw Error(a(418));o.flags=o.flags&-4097|2,ln=!1,mi=o}}}function Cm(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;mi=o}function ra(o){if(!Ie||o!==mi)return!1;if(!ln)return Cm(o),ln=!0,!1;if(o.tag!==3&&(o.tag!==5||Y(o.type)&&!be(o.type,o.memoizedProps))){var l=gi;if(l){if(nf(o)){for(o=gi;o;)o=si(o);throw Error(a(418))}for(;l;)bm(o,l),l=si(l)}}if(Cm(o),o.tag===13){if(!Ie)throw Error(a(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));gi=ue(o)}else gi=mi?si(o.stateNode):null;return!0}function ao(){Ie&&(gi=mi=null,ia=ln=!1)}function sf(o){Oi===null?Oi=[o]:Oi.push(o)}function sa(o,l,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(a(309));var v=d.stateNode}if(!v)throw Error(a(147,o));var S=v,b=""+o;return l!==null&&l.ref!==null&&typeof l.ref=="function"&&l.ref._stringRef===b?l.ref:(l=function(V){var ne=S.refs;ne===Mm&&(ne=S.refs={}),V===null?delete ne[b]:ne[b]=V},l._stringRef=b,l)}if(typeof o!="string")throw Error(a(284));if(!d._owner)throw Error(a(290,o))}return o}function Xl(o,l){throw o=Object.prototype.toString.call(l),Error(a(31,o==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":o))}function Rm(o){var l=o._init;return l(o._payload)}function Im(o){function l(le,ie){if(o){var pe=le.deletions;pe===null?(le.deletions=[ie],le.flags|=16):pe.push(ie)}}function d(le,ie){if(!o)return null;for(;ie!==null;)l(le,ie),ie=ie.sibling;return null}function v(le,ie){for(le=new Map;ie!==null;)ie.key!==null?le.set(ie.key,ie):le.set(ie.index,ie),ie=ie.sibling;return le}function S(le,ie){return le=kr(le,ie),le.index=0,le.sibling=null,le}function b(le,ie,pe){return le.index=pe,o?(pe=le.alternate,pe!==null?(pe=pe.index,pe<ie?(le.flags|=2,ie):pe):(le.flags|=2,ie)):(le.flags|=1048576,ie)}function V(le){return o&&le.alternate===null&&(le.flags|=2),le}function ne(le,ie,pe,Qe){return ie===null||ie.tag!==6?(ie=Vf(pe,le.mode,Qe),ie.return=le,ie):(ie=S(ie,pe),ie.return=le,ie)}function _e(le,ie,pe,Qe){var ft=pe.type;return ft===f?at(le,ie,pe.props.children,Qe,pe.key):ie!==null&&(ie.elementType===ft||typeof ft=="object"&&ft!==null&&ft.$$typeof===E&&Rm(ft)===ie.type)?(Qe=S(ie,pe.props),Qe.ref=sa(le,ie,pe),Qe.return=le,Qe):(Qe=Sc(pe.type,pe.key,pe.props,null,le.mode,Qe),Qe.ref=sa(le,ie,pe),Qe.return=le,Qe)}function Be(le,ie,pe,Qe){return ie===null||ie.tag!==4||ie.stateNode.containerInfo!==pe.containerInfo||ie.stateNode.implementation!==pe.implementation?(ie=Gf(pe,le.mode,Qe),ie.return=le,ie):(ie=S(ie,pe.children||[]),ie.return=le,ie)}function at(le,ie,pe,Qe,ft){return ie===null||ie.tag!==7?(ie=ms(pe,le.mode,Qe,ft),ie.return=le,ie):(ie=S(ie,pe),ie.return=le,ie)}function bt(le,ie,pe){if(typeof ie=="string"&&ie!==""||typeof ie=="number")return ie=Vf(""+ie,le.mode,pe),ie.return=le,ie;if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:return pe=Sc(ie.type,ie.key,ie.props,null,le.mode,pe),pe.ref=sa(le,null,ie),pe.return=le,pe;case h:return ie=Gf(ie,le.mode,pe),ie.return=le,ie;case E:var Qe=ie._init;return bt(le,Qe(ie._payload),pe)}if(he(ie)||P(ie))return ie=ms(ie,le.mode,pe,null),ie.return=le,ie;Xl(le,ie)}return null}function xt(le,ie,pe,Qe){var ft=ie!==null?ie.key:null;if(typeof pe=="string"&&pe!==""||typeof pe=="number")return ft!==null?null:ne(le,ie,""+pe,Qe);if(typeof pe=="object"&&pe!==null){switch(pe.$$typeof){case u:return pe.key===ft?_e(le,ie,pe,Qe):null;case h:return pe.key===ft?Be(le,ie,pe,Qe):null;case E:return ft=pe._init,xt(le,ie,ft(pe._payload),Qe)}if(he(pe)||P(pe))return ft!==null?null:at(le,ie,pe,Qe,null);Xl(le,pe)}return null}function rn(le,ie,pe,Qe,ft){if(typeof Qe=="string"&&Qe!==""||typeof Qe=="number")return le=le.get(pe)||null,ne(ie,le,""+Qe,ft);if(typeof Qe=="object"&&Qe!==null){switch(Qe.$$typeof){case u:return le=le.get(Qe.key===null?pe:Qe.key)||null,_e(ie,le,Qe,ft);case h:return le=le.get(Qe.key===null?pe:Qe.key)||null,Be(ie,le,Qe,ft);case E:var Ft=Qe._init;return rn(le,ie,pe,Ft(Qe._payload),ft)}if(he(Qe)||P(Qe))return le=le.get(pe)||null,at(ie,le,Qe,ft,null);Xl(ie,Qe)}return null}function mt(le,ie,pe,Qe){for(var ft=null,Ft=null,At=ie,qt=ie=0,Ln=null;At!==null&&qt<pe.length;qt++){At.index>qt?(Ln=At,At=null):Ln=At.sibling;var Zt=xt(le,At,pe[qt],Qe);if(Zt===null){At===null&&(At=Ln);break}o&&At&&Zt.alternate===null&&l(le,At),ie=b(Zt,ie,qt),Ft===null?ft=Zt:Ft.sibling=Zt,Ft=Zt,At=Ln}if(qt===pe.length)return d(le,At),ln&&ls(le,qt),ft;if(At===null){for(;qt<pe.length;qt++)At=bt(le,pe[qt],Qe),At!==null&&(ie=b(At,ie,qt),Ft===null?ft=At:Ft.sibling=At,Ft=At);return ln&&ls(le,qt),ft}for(At=v(le,At);qt<pe.length;qt++)Ln=rn(At,le,qt,pe[qt],Qe),Ln!==null&&(o&&Ln.alternate!==null&&At.delete(Ln.key===null?qt:Ln.key),ie=b(Ln,ie,qt),Ft===null?ft=Ln:Ft.sibling=Ln,Ft=Ln);return o&&At.forEach(function(Hr){return l(le,Hr)}),ln&&ls(le,qt),ft}function kn(le,ie,pe,Qe){var ft=P(pe);if(typeof ft!="function")throw Error(a(150));if(pe=ft.call(pe),pe==null)throw Error(a(151));for(var Ft=ft=null,At=ie,qt=ie=0,Ln=null,Zt=pe.next();At!==null&&!Zt.done;qt++,Zt=pe.next()){At.index>qt?(Ln=At,At=null):Ln=At.sibling;var Hr=xt(le,At,Zt.value,Qe);if(Hr===null){At===null&&(At=Ln);break}o&&At&&Hr.alternate===null&&l(le,At),ie=b(Hr,ie,qt),Ft===null?ft=Hr:Ft.sibling=Hr,Ft=Hr,At=Ln}if(Zt.done)return d(le,At),ln&&ls(le,qt),ft;if(At===null){for(;!Zt.done;qt++,Zt=pe.next())Zt=bt(le,Zt.value,Qe),Zt!==null&&(ie=b(Zt,ie,qt),Ft===null?ft=Zt:Ft.sibling=Zt,Ft=Zt);return ln&&ls(le,qt),ft}for(At=v(le,At);!Zt.done;qt++,Zt=pe.next())Zt=rn(At,le,qt,Zt.value,Qe),Zt!==null&&(o&&Zt.alternate!==null&&At.delete(Zt.key===null?qt:Zt.key),ie=b(Zt,ie,qt),Ft===null?ft=Zt:Ft.sibling=Zt,Ft=Zt);return o&&At.forEach(function(gM){return l(le,gM)}),ln&&ls(le,qt),ft}function Di(le,ie,pe,Qe){if(typeof pe=="object"&&pe!==null&&pe.type===f&&pe.key===null&&(pe=pe.props.children),typeof pe=="object"&&pe!==null){switch(pe.$$typeof){case u:e:{for(var ft=pe.key,Ft=ie;Ft!==null;){if(Ft.key===ft){if(ft=pe.type,ft===f){if(Ft.tag===7){d(le,Ft.sibling),ie=S(Ft,pe.props.children),ie.return=le,le=ie;break e}}else if(Ft.elementType===ft||typeof ft=="object"&&ft!==null&&ft.$$typeof===E&&Rm(ft)===Ft.type){d(le,Ft.sibling),ie=S(Ft,pe.props),ie.ref=sa(le,Ft,pe),ie.return=le,le=ie;break e}d(le,Ft);break}else l(le,Ft);Ft=Ft.sibling}pe.type===f?(ie=ms(pe.props.children,le.mode,Qe,pe.key),ie.return=le,le=ie):(Qe=Sc(pe.type,pe.key,pe.props,null,le.mode,Qe),Qe.ref=sa(le,ie,pe),Qe.return=le,le=Qe)}return V(le);case h:e:{for(Ft=pe.key;ie!==null;){if(ie.key===Ft)if(ie.tag===4&&ie.stateNode.containerInfo===pe.containerInfo&&ie.stateNode.implementation===pe.implementation){d(le,ie.sibling),ie=S(ie,pe.children||[]),ie.return=le,le=ie;break e}else{d(le,ie);break}else l(le,ie);ie=ie.sibling}ie=Gf(pe,le.mode,Qe),ie.return=le,le=ie}return V(le);case E:return Ft=pe._init,Di(le,ie,Ft(pe._payload),Qe)}if(he(pe))return mt(le,ie,pe,Qe);if(P(pe))return kn(le,ie,pe,Qe);Xl(le,pe)}return typeof pe=="string"&&pe!==""||typeof pe=="number"?(pe=""+pe,ie!==null&&ie.tag===6?(d(le,ie.sibling),ie=S(ie,pe),ie.return=le,le=ie):(d(le,ie),ie=Vf(pe,le.mode,Qe),ie.return=le,le=ie),V(le)):d(le,ie)}return Di}var lo=Im(!0),Pm=Im(!1),oa={},Ri=ct(oa),aa=ct(oa),co=ct(oa);function $i(o){if(o===oa)throw Error(a(174));return o}function of(o,l){dt(co,l),dt(aa,o),dt(Ri,oa),o=Ee(l),$e(Ri),dt(Ri,o)}function uo(){$e(Ri),$e(aa),$e(co)}function Lm(o){var l=$i(co.current),d=$i(Ri.current);l=z(d,o.type,l),d!==l&&(dt(aa,o),dt(Ri,l))}function af(o){aa.current===o&&($e(Ri),$e(aa))}var cn=ct(0);function Yl(o){for(var l=o;l!==null;){if(l.tag===13){var d=l.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||qn(d)||fr(d)))return l}else if(l.tag===19&&l.memoizedProps.revealOrder!==void 0){if(l.flags&128)return l}else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return null;l=l.return}l.sibling.return=l.return,l=l.sibling}return null}var lf=[];function cf(){for(var o=0;o<lf.length;o++){var l=lf[o];gt?l._workInProgressVersionPrimary=null:l._workInProgressVersionSecondary=null}lf.length=0}var ql=c.ReactCurrentDispatcher,Ii=c.ReactCurrentBatchConfig,ho=0,pn=null,On=null,Pn=null,Zl=!1,la=!1,ca=0,Hx=0;function Bn(){throw Error(a(321))}function uf(o,l){if(l===null)return!1;for(var d=0;d<l.length&&d<o.length;d++)if(!ji(o[d],l[d]))return!1;return!0}function hf(o,l,d,v,S,b){if(ho=b,pn=l,l.memoizedState=null,l.updateQueue=null,l.lanes=0,ql.current=o===null||o.memoizedState===null?Xx:Yx,o=d(v,S),la){b=0;do{if(la=!1,ca=0,25<=b)throw Error(a(301));b+=1,Pn=On=null,l.updateQueue=null,ql.current=qx,o=d(v,S)}while(la)}if(ql.current=$l,l=On!==null&&On.next!==null,ho=0,Pn=On=pn=null,Zl=!1,l)throw Error(a(300));return o}function ff(){var o=ca!==0;return ca=0,o}function vr(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Pn===null?pn.memoizedState=Pn=o:Pn=Pn.next=o,Pn}function er(){if(On===null){var o=pn.alternate;o=o!==null?o.memoizedState:null}else o=On.next;var l=Pn===null?pn.memoizedState:Pn.next;if(l!==null)Pn=l,On=o;else{if(o===null)throw Error(a(310));On=o,o={memoizedState:On.memoizedState,baseState:On.baseState,baseQueue:On.baseQueue,queue:On.queue,next:null},Pn===null?pn.memoizedState=Pn=o:Pn=Pn.next=o}return Pn}function cs(o,l){return typeof l=="function"?l(o):l}function Jl(o){var l=er(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var v=On,S=v.baseQueue,b=d.pending;if(b!==null){if(S!==null){var V=S.next;S.next=b.next,b.next=V}v.baseQueue=S=b,d.pending=null}if(S!==null){b=S.next,v=v.baseState;var ne=V=null,_e=null,Be=b;do{var at=Be.lane;if((ho&at)===at)_e!==null&&(_e=_e.next={lane:0,action:Be.action,hasEagerState:Be.hasEagerState,eagerState:Be.eagerState,next:null}),v=Be.hasEagerState?Be.eagerState:o(v,Be.action);else{var bt={lane:at,action:Be.action,hasEagerState:Be.hasEagerState,eagerState:Be.eagerState,next:null};_e===null?(ne=_e=bt,V=v):_e=_e.next=bt,pn.lanes|=at,po|=at}Be=Be.next}while(Be!==null&&Be!==b);_e===null?V=v:_e.next=ne,ji(v,l.memoizedState)||(vi=!0),l.memoizedState=v,l.baseState=V,l.baseQueue=_e,d.lastRenderedState=v}if(o=d.interleaved,o!==null){S=o;do b=S.lane,pn.lanes|=b,po|=b,S=S.next;while(S!==o)}else S===null&&(d.lanes=0);return[l.memoizedState,d.dispatch]}function jl(o){var l=er(),d=l.queue;if(d===null)throw Error(a(311));d.lastRenderedReducer=o;var v=d.dispatch,S=d.pending,b=l.memoizedState;if(S!==null){d.pending=null;var V=S=S.next;do b=o(b,V.action),V=V.next;while(V!==S);ji(b,l.memoizedState)||(vi=!0),l.memoizedState=b,l.baseQueue===null&&(l.baseState=b),d.lastRenderedState=b}return[b,v]}function Dm(){}function Um(o,l){var d=pn,v=er(),S=l(),b=!ji(v.memoizedState,S);if(b&&(v.memoizedState=S,vi=!0),v=v.queue,ha(Om.bind(null,d,v,o),[o]),v.getSnapshot!==l||b||Pn!==null&&Pn.memoizedState.tag&1){if(d.flags|=2048,ua(9,Fm.bind(null,d,v,S,l),void 0,null),Mn===null)throw Error(a(349));ho&30||Nm(d,l,S)}return S}function Nm(o,l,d){o.flags|=16384,o={getSnapshot:l,value:d},l=pn.updateQueue,l===null?(l={lastEffect:null,stores:null},pn.updateQueue=l,l.stores=[o]):(d=l.stores,d===null?l.stores=[o]:d.push(o))}function Fm(o,l,d,v){l.value=d,l.getSnapshot=v,Bm(l)&&Pi(o,1,-1)}function Om(o,l,d){return d(function(){Bm(l)&&Pi(o,1,-1)})}function Bm(o){var l=o.getSnapshot;o=o.value;try{var d=l();return!ji(o,d)}catch{return!0}}function df(o){var l=vr();return typeof o=="function"&&(o=o()),l.memoizedState=l.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:cs,lastRenderedState:o},l.queue=o,o=o.dispatch=Wx.bind(null,pn,o),[l.memoizedState,o]}function ua(o,l,d,v){return o={tag:o,create:l,destroy:d,deps:v,next:null},l=pn.updateQueue,l===null?(l={lastEffect:null,stores:null},pn.updateQueue=l,l.lastEffect=o.next=o):(d=l.lastEffect,d===null?l.lastEffect=o.next=o:(v=d.next,d.next=o,o.next=v,l.lastEffect=o)),o}function zm(){return er().memoizedState}function Kl(o,l,d,v){var S=vr();pn.flags|=o,S.memoizedState=ua(1|l,d,void 0,v===void 0?null:v)}function Ql(o,l,d,v){var S=er();v=v===void 0?null:v;var b=void 0;if(On!==null){var V=On.memoizedState;if(b=V.destroy,v!==null&&uf(v,V.deps)){S.memoizedState=ua(l,d,b,v);return}}pn.flags|=o,S.memoizedState=ua(1|l,d,b,v)}function pf(o,l){return Kl(8390656,8,o,l)}function ha(o,l){return Ql(2048,8,o,l)}function km(o,l){return Ql(4,2,o,l)}function Hm(o,l){return Ql(4,4,o,l)}function Vm(o,l){if(typeof l=="function")return o=o(),l(o),function(){l(null)};if(l!=null)return o=o(),l.current=o,function(){l.current=null}}function Gm(o,l,d){return d=d!=null?d.concat([o]):null,Ql(4,4,Vm.bind(null,l,o),d)}function mf(){}function Wm(o,l){var d=er();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&uf(l,v[1])?v[0]:(d.memoizedState=[o,l],o)}function Xm(o,l){var d=er();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&uf(l,v[1])?v[0]:(o=o(),d.memoizedState=[o,l],o)}function Vx(o,l){var d=Yt;Yt=d!==0&&4>d?d:4,o(!0);var v=Ii.transition;Ii.transition={};try{o(!1),l()}finally{Yt=d,Ii.transition=v}}function Ym(){return er().memoizedState}function Gx(o,l,d){var v=Br(o);d={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null},qm(o)?Zm(l,d):(Jm(o,l,d),d=Jn(),o=Pi(o,v,d),o!==null&&jm(o,l,v))}function Wx(o,l,d){var v=Br(o),S={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null};if(qm(o))Zm(l,S);else{Jm(o,l,S);var b=o.alternate;if(o.lanes===0&&(b===null||b.lanes===0)&&(b=l.lastRenderedReducer,b!==null))try{var V=l.lastRenderedState,ne=b(V,d);if(S.hasEagerState=!0,S.eagerState=ne,ji(ne,V))return}catch{}finally{}d=Jn(),o=Pi(o,v,d),o!==null&&jm(o,l,v)}}function qm(o){var l=o.alternate;return o===pn||l!==null&&l===pn}function Zm(o,l){la=Zl=!0;var d=o.pending;d===null?l.next=l:(l.next=d.next,d.next=l),o.pending=l}function Jm(o,l,d){Mn!==null&&o.mode&1&&!(Ot&2)?(o=l.interleaved,o===null?(d.next=d,Qi===null?Qi=[l]:Qi.push(l)):(d.next=o.next,o.next=d),l.interleaved=d):(o=l.pending,o===null?d.next=d:(d.next=o.next,o.next=d),l.pending=d)}function jm(o,l,d){if(d&4194240){var v=l.lanes;v&=o.pendingLanes,d|=v,l.lanes=d,Vh(o,d)}}var $l={readContext:bi,useCallback:Bn,useContext:Bn,useEffect:Bn,useImperativeHandle:Bn,useInsertionEffect:Bn,useLayoutEffect:Bn,useMemo:Bn,useReducer:Bn,useRef:Bn,useState:Bn,useDebugValue:Bn,useDeferredValue:Bn,useTransition:Bn,useMutableSource:Bn,useSyncExternalStore:Bn,useId:Bn,unstable_isNewReconciler:!1},Xx={readContext:bi,useCallback:function(o,l){return vr().memoizedState=[o,l===void 0?null:l],o},useContext:bi,useEffect:pf,useImperativeHandle:function(o,l,d){return d=d!=null?d.concat([o]):null,Kl(4194308,4,Vm.bind(null,l,o),d)},useLayoutEffect:function(o,l){return Kl(4194308,4,o,l)},useInsertionEffect:function(o,l){return Kl(4,2,o,l)},useMemo:function(o,l){var d=vr();return l=l===void 0?null:l,o=o(),d.memoizedState=[o,l],o},useReducer:function(o,l,d){var v=vr();return l=d!==void 0?d(l):l,v.memoizedState=v.baseState=l,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:l},v.queue=o,o=o.dispatch=Gx.bind(null,pn,o),[v.memoizedState,o]},useRef:function(o){var l=vr();return o={current:o},l.memoizedState=o},useState:df,useDebugValue:mf,useDeferredValue:function(o){var l=df(o),d=l[0],v=l[1];return pf(function(){var S=Ii.transition;Ii.transition={};try{v(o)}finally{Ii.transition=S}},[o]),d},useTransition:function(){var o=df(!1),l=o[0];return o=Vx.bind(null,o[1]),vr().memoizedState=o,[l,o]},useMutableSource:function(){},useSyncExternalStore:function(o,l,d){var v=pn,S=vr();if(ln){if(d===void 0)throw Error(a(407));d=d()}else{if(d=l(),Mn===null)throw Error(a(349));ho&30||Nm(v,l,d)}S.memoizedState=d;var b={value:d,getSnapshot:l};return S.queue=b,pf(Om.bind(null,v,b,o),[o]),v.flags|=2048,ua(9,Fm.bind(null,v,b,d,l),void 0,null),d},useId:function(){var o=vr(),l=Mn.identifierPrefix;if(ln){var d=gr,v=mr;d=(v&~(1<<32-zt(v)-1)).toString(32)+d,l=":"+l+"R"+d,d=ca++,0<d&&(l+="H"+d.toString(32)),l+=":"}else d=Hx++,l=":"+l+"r"+d.toString(32)+":";return o.memoizedState=l},unstable_isNewReconciler:!1},Yx={readContext:bi,useCallback:Wm,useContext:bi,useEffect:ha,useImperativeHandle:Gm,useInsertionEffect:km,useLayoutEffect:Hm,useMemo:Xm,useReducer:Jl,useRef:zm,useState:function(){return Jl(cs)},useDebugValue:mf,useDeferredValue:function(o){var l=Jl(cs),d=l[0],v=l[1];return ha(function(){var S=Ii.transition;Ii.transition={};try{v(o)}finally{Ii.transition=S}},[o]),d},useTransition:function(){var o=Jl(cs)[0],l=er().memoizedState;return[o,l]},useMutableSource:Dm,useSyncExternalStore:Um,useId:Ym,unstable_isNewReconciler:!1},qx={readContext:bi,useCallback:Wm,useContext:bi,useEffect:ha,useImperativeHandle:Gm,useInsertionEffect:km,useLayoutEffect:Hm,useMemo:Xm,useReducer:jl,useRef:zm,useState:function(){return jl(cs)},useDebugValue:mf,useDeferredValue:function(o){var l=jl(cs),d=l[0],v=l[1];return ha(function(){var S=Ii.transition;Ii.transition={};try{v(o)}finally{Ii.transition=S}},[o]),d},useTransition:function(){var o=jl(cs)[0],l=er().memoizedState;return[o,l]},useMutableSource:Dm,useSyncExternalStore:Um,useId:Ym,unstable_isNewReconciler:!1};function gf(o,l){try{var d="",v=l;do d+=kx(v),v=v.return;while(v);var S=d}catch(b){S=`
Error generating stack: `+b.message+`
`+b.stack}return{value:o,source:l,stack:S}}function vf(o,l){try{console.error(l.value)}catch(d){setTimeout(function(){throw d})}}var Zx=typeof WeakMap=="function"?WeakMap:Map;function Km(o,l,d){d=pr(-1,d),d.tag=3,d.payload={element:null};var v=l.value;return d.callback=function(){mc||(mc=!0,Nf=v),vf(o,l)},d}function Qm(o,l,d){d=pr(-1,d),d.tag=3;var v=o.type.getDerivedStateFromError;if(typeof v=="function"){var S=l.value;d.payload=function(){return v(S)},d.callback=function(){vf(o,l)}}var b=o.stateNode;return b!==null&&typeof b.componentDidCatch=="function"&&(d.callback=function(){vf(o,l),typeof v!="function"&&(Fr===null?Fr=new Set([this]):Fr.add(this));var V=l.stack;this.componentDidCatch(l.value,{componentStack:V!==null?V:""})}),d}function $m(o,l,d){var v=o.pingCache;if(v===null){v=o.pingCache=new Zx;var S=new Set;v.set(l,S)}else S=v.get(l),S===void 0&&(S=new Set,v.set(l,S));S.has(d)||(S.add(d),o=lM.bind(null,o,l,d),l.then(o,o))}function eg(o){do{var l;if((l=o.tag===13)&&(l=o.memoizedState,l=l!==null?l.dehydrated!==null:!0),l)return o;o=o.return}while(o!==null);return null}function tg(o,l,d,v,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===l?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(l=pr(-1,1),l.tag=2,Nr(d,l))),d.lanes|=1),o)}function tr(o){o.flags|=4}function ng(o,l){if(o!==null&&o.child===l.child)return!0;if(l.flags&16)return!1;for(o=l.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var fa,da,ec,tc;if(St)fa=function(o,l){for(var d=l.child;d!==null;){if(d.tag===5||d.tag===6)xe(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===l)break;for(;d.sibling===null;){if(d.return===null||d.return===l)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},da=function(){},ec=function(o,l,d,v,S){if(o=o.memoizedProps,o!==v){var b=l.stateNode,V=$i(Ri.current);d=ce(b,d,o,v,S,V),(l.updateQueue=d)&&tr(l)}},tc=function(o,l,d,v){d!==v&&tr(l)};else if(Te){fa=function(o,l,d,v){for(var S=l.child;S!==null;){if(S.tag===5){var b=S.stateNode;d&&v&&(b=Ut(b,S.type,S.memoizedProps,S)),xe(o,b)}else if(S.tag===6)b=S.stateNode,d&&v&&(b=dn(b,S.memoizedProps,S)),xe(o,b);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)b=S.child,b!==null&&(b.return=S),fa(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===l)break;for(;S.sibling===null;){if(S.return===null||S.return===l)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var ig=function(o,l,d,v){for(var S=l.child;S!==null;){if(S.tag===5){var b=S.stateNode;d&&v&&(b=Ut(b,S.type,S.memoizedProps,S)),vt(o,b)}else if(S.tag===6)b=S.stateNode,d&&v&&(b=dn(b,S.memoizedProps,S)),vt(o,b);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)b=S.child,b!==null&&(b.return=S),ig(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===l)break;for(;S.sibling===null;){if(S.return===null||S.return===l)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};da=function(o,l){var d=l.stateNode;if(!ng(o,l)){o=d.containerInfo;var v=We(o);ig(v,l,!1,!1),d.pendingChildren=v,tr(l),kt(o,v)}},ec=function(o,l,d,v,S){var b=o.stateNode,V=o.memoizedProps;if((o=ng(o,l))&&V===v)l.stateNode=b;else{var ne=l.stateNode,_e=$i(Ri.current),Be=null;V!==v&&(Be=ce(ne,d,V,v,S,_e)),o&&Be===null?l.stateNode=b:(b=Ze(b,Be,d,V,v,l,o,ne),ze(b,d,v,S,_e)&&tr(l),l.stateNode=b,o?tr(l):fa(b,l,!1,!1))}},tc=function(o,l,d,v){d!==v?(o=$i(co.current),d=$i(Ri.current),l.stateNode=Ae(v,o,d,l),tr(l)):l.stateNode=o.stateNode}}else da=function(){},ec=function(){},tc=function(){};function pa(o,l){if(!ln)switch(o.tailMode){case"hidden":l=o.tail;for(var d=null;l!==null;)l.alternate!==null&&(d=l),l=l.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var v=null;d!==null;)d.alternate!==null&&(v=d),d=d.sibling;v===null?l||o.tail===null?o.tail=null:o.tail.sibling=null:v.sibling=null}}function zn(o){var l=o.alternate!==null&&o.alternate.child===o.child,d=0,v=0;if(l)for(var S=o.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags&14680064,v|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags,v|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=v,o.childLanes=d,l}function Jx(o,l,d){var v=l.pendingProps;switch(tf(l),l.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return zn(l),null;case 1:return nn(l.type)&&Jt(),zn(l),null;case 3:return v=l.stateNode,uo(),$e(wt),$e(Ve),cf(),v.pendingContext&&(v.context=v.pendingContext,v.pendingContext=null),(o===null||o.child===null)&&(ra(l)?tr(l):o===null||o.memoizedState.isDehydrated&&!(l.flags&256)||(l.flags|=1024,Oi!==null&&(Bf(Oi),Oi=null))),da(o,l),zn(l),null;case 5:af(l),d=$i(co.current);var S=l.type;if(o!==null&&l.stateNode!=null)ec(o,l,S,v,d),o.ref!==l.ref&&(l.flags|=512,l.flags|=2097152);else{if(!v){if(l.stateNode===null)throw Error(a(166));return zn(l),null}if(o=$i(Ri.current),ra(l)){if(!Ie)throw Error(a(175));o=I(l.stateNode,l.type,l.memoizedProps,d,o,l,!ia),l.updateQueue=o,o!==null&&tr(l)}else{var b=fe(S,v,d,o,l);fa(b,l,!1,!1),l.stateNode=b,ze(b,S,v,d,o)&&tr(l)}l.ref!==null&&(l.flags|=512,l.flags|=2097152)}return zn(l),null;case 6:if(o&&l.stateNode!=null)tc(o,l,o.memoizedProps,v);else{if(typeof v!="string"&&l.stateNode===null)throw Error(a(166));if(o=$i(co.current),d=$i(Ri.current),ra(l)){if(!Ie)throw Error(a(176));if(o=l.stateNode,v=l.memoizedProps,(d=F(o,v,l,!ia))&&(S=mi,S!==null))switch(b=(S.mode&1)!==0,S.tag){case 3:G(S.stateNode.containerInfo,o,v,b);break;case 5:re(S.type,S.memoizedProps,S.stateNode,o,v,b)}d&&tr(l)}else l.stateNode=Ae(v,o,d,l)}return zn(l),null;case 13:if($e(cn),v=l.memoizedState,ln&&gi!==null&&l.mode&1&&!(l.flags&128)){for(o=gi;o;)o=si(o);return ao(),l.flags|=98560,l}if(v!==null&&v.dehydrated!==null){if(v=ra(l),o===null){if(!v)throw Error(a(318));if(!Ie)throw Error(a(344));if(o=l.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));Z(o,l)}else ao(),!(l.flags&128)&&(l.memoizedState=null),l.flags|=4;return zn(l),null}return Oi!==null&&(Bf(Oi),Oi=null),l.flags&128?(l.lanes=d,l):(v=v!==null,d=!1,o===null?ra(l):d=o.memoizedState!==null,v&&!d&&(l.child.flags|=8192,l.mode&1&&(o===null||cn.current&1?Tn===0&&(Tn=3):kf())),l.updateQueue!==null&&(l.flags|=4),zn(l),null);case 4:return uo(),da(o,l),o===null&&lt(l.stateNode.containerInfo),zn(l),null;case 10:return Jh(l.type._context),zn(l),null;case 17:return nn(l.type)&&Jt(),zn(l),null;case 19:if($e(cn),S=l.memoizedState,S===null)return zn(l),null;if(v=(l.flags&128)!==0,b=S.rendering,b===null)if(v)pa(S,!1);else{if(Tn!==0||o!==null&&o.flags&128)for(o=l.child;o!==null;){if(b=Yl(o),b!==null){for(l.flags|=128,pa(S,!1),o=b.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),l.subtreeFlags=0,o=d,v=l.child;v!==null;)d=v,S=o,d.flags&=14680066,b=d.alternate,b===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=b.childLanes,d.lanes=b.lanes,d.child=b.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=b.memoizedProps,d.memoizedState=b.memoizedState,d.updateQueue=b.updateQueue,d.type=b.type,S=b.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),v=v.sibling;return dt(cn,cn.current&1|2),l.child}o=o.sibling}S.tail!==null&&In()>Uf&&(l.flags|=128,v=!0,pa(S,!1),l.lanes=4194304)}else{if(!v)if(o=Yl(b),o!==null){if(l.flags|=128,v=!0,o=o.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),pa(S,!0),S.tail===null&&S.tailMode==="hidden"&&!b.alternate&&!ln)return zn(l),null}else 2*In()-S.renderingStartTime>Uf&&d!==1073741824&&(l.flags|=128,v=!0,pa(S,!1),l.lanes=4194304);S.isBackwards?(b.sibling=l.child,l.child=b):(o=S.last,o!==null?o.sibling=b:l.child=b,S.last=b)}return S.tail!==null?(l=S.tail,S.rendering=l,S.tail=l.sibling,S.renderingStartTime=In(),l.sibling=null,o=cn.current,dt(cn,v?o&1|2:o&1),l):(zn(l),null);case 22:case 23:return zf(),v=l.memoizedState!==null,o!==null&&o.memoizedState!==null!==v&&(l.flags|=8192),v&&l.mode&1?_i&1073741824&&(zn(l),St&&l.subtreeFlags&6&&(l.flags|=8192)):zn(l),null;case 24:return null;case 25:return null}throw Error(a(156,l.tag))}var jx=c.ReactCurrentOwner,vi=!1;function Zn(o,l,d,v){l.child=o===null?Pm(l,null,d,v):lo(l,o.child,d,v)}function rg(o,l,d,v,S){d=d.render;var b=l.ref;return ro(l,S),v=hf(o,l,d,v,b,S),d=ff(),o!==null&&!vi?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~S,_r(o,l,S)):(ln&&d&&ef(l),l.flags|=1,Zn(o,l,v,S),l.child)}function sg(o,l,d,v,S){if(o===null){var b=d.type;return typeof b=="function"&&!Hf(b)&&b.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(l.tag=15,l.type=b,og(o,l,b,v,S)):(o=Sc(d.type,null,v,l,l.mode,S),o.ref=l.ref,o.return=l,l.child=o)}if(b=o.child,!(o.lanes&S)){var V=b.memoizedProps;if(d=d.compare,d=d!==null?d:Ol,d(V,v)&&o.ref===l.ref)return _r(o,l,S)}return l.flags|=1,o=kr(b,v),o.ref=l.ref,o.return=l,l.child=o}function og(o,l,d,v,S){if(o!==null&&Ol(o.memoizedProps,v)&&o.ref===l.ref)if(vi=!1,(o.lanes&S)!==0)o.flags&131072&&(vi=!0);else return l.lanes=o.lanes,_r(o,l,S);return _f(o,l,d,v,S)}function ag(o,l,d){var v=l.pendingProps,S=v.children,b=o!==null?o.memoizedState:null;if(v.mode==="hidden")if(!(l.mode&1))l.memoizedState={baseLanes:0,cachePool:null},dt(fo,_i),_i|=d;else if(d&1073741824)l.memoizedState={baseLanes:0,cachePool:null},v=b!==null?b.baseLanes:d,dt(fo,_i),_i|=v;else return o=b!==null?b.baseLanes|d:d,l.lanes=l.childLanes=1073741824,l.memoizedState={baseLanes:o,cachePool:null},l.updateQueue=null,dt(fo,_i),_i|=o,null;else b!==null?(v=b.baseLanes|d,l.memoizedState=null):v=d,dt(fo,_i),_i|=v;return Zn(o,l,S,d),l.child}function lg(o,l){var d=l.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(l.flags|=512,l.flags|=2097152)}function _f(o,l,d,v,S){var b=nn(d)?pt:Ve.current;return b=Qt(l,b),ro(l,S),d=hf(o,l,d,v,b,S),v=ff(),o!==null&&!vi?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~S,_r(o,l,S)):(ln&&v&&ef(l),l.flags|=1,Zn(o,l,d,S),l.child)}function cg(o,l,d,v,S){if(nn(d)){var b=!0;Nt(l)}else b=!1;if(ro(l,S),l.stateNode===null)o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),wm(l,d,v),$h(l,d,v,S),v=!0;else if(o===null){var V=l.stateNode,ne=l.memoizedProps;V.props=ne;var _e=V.context,Be=d.contextType;typeof Be=="object"&&Be!==null?Be=bi(Be):(Be=nn(d)?pt:Ve.current,Be=Qt(l,Be));var at=d.getDerivedStateFromProps,bt=typeof at=="function"||typeof V.getSnapshotBeforeUpdate=="function";bt||typeof V.UNSAFE_componentWillReceiveProps!="function"&&typeof V.componentWillReceiveProps!="function"||(ne!==v||_e!==Be)&&Em(l,V,v,Be),Ur=!1;var xt=l.memoizedState;V.state=xt,Hl(l,v,V,S),_e=l.memoizedState,ne!==v||xt!==_e||wt.current||Ur?(typeof at=="function"&&(Qh(l,d,at,v),_e=l.memoizedState),(ne=Ur||Sm(l,d,ne,v,xt,_e,Be))?(bt||typeof V.UNSAFE_componentWillMount!="function"&&typeof V.componentWillMount!="function"||(typeof V.componentWillMount=="function"&&V.componentWillMount(),typeof V.UNSAFE_componentWillMount=="function"&&V.UNSAFE_componentWillMount()),typeof V.componentDidMount=="function"&&(l.flags|=4194308)):(typeof V.componentDidMount=="function"&&(l.flags|=4194308),l.memoizedProps=v,l.memoizedState=_e),V.props=v,V.state=_e,V.context=Be,v=ne):(typeof V.componentDidMount=="function"&&(l.flags|=4194308),v=!1)}else{V=l.stateNode,_m(o,l),ne=l.memoizedProps,Be=l.type===l.elementType?ne:Fi(l.type,ne),V.props=Be,bt=l.pendingProps,xt=V.context,_e=d.contextType,typeof _e=="object"&&_e!==null?_e=bi(_e):(_e=nn(d)?pt:Ve.current,_e=Qt(l,_e));var rn=d.getDerivedStateFromProps;(at=typeof rn=="function"||typeof V.getSnapshotBeforeUpdate=="function")||typeof V.UNSAFE_componentWillReceiveProps!="function"&&typeof V.componentWillReceiveProps!="function"||(ne!==bt||xt!==_e)&&Em(l,V,v,_e),Ur=!1,xt=l.memoizedState,V.state=xt,Hl(l,v,V,S);var mt=l.memoizedState;ne!==bt||xt!==mt||wt.current||Ur?(typeof rn=="function"&&(Qh(l,d,rn,v),mt=l.memoizedState),(Be=Ur||Sm(l,d,Be,v,xt,mt,_e)||!1)?(at||typeof V.UNSAFE_componentWillUpdate!="function"&&typeof V.componentWillUpdate!="function"||(typeof V.componentWillUpdate=="function"&&V.componentWillUpdate(v,mt,_e),typeof V.UNSAFE_componentWillUpdate=="function"&&V.UNSAFE_componentWillUpdate(v,mt,_e)),typeof V.componentDidUpdate=="function"&&(l.flags|=4),typeof V.getSnapshotBeforeUpdate=="function"&&(l.flags|=1024)):(typeof V.componentDidUpdate!="function"||ne===o.memoizedProps&&xt===o.memoizedState||(l.flags|=4),typeof V.getSnapshotBeforeUpdate!="function"||ne===o.memoizedProps&&xt===o.memoizedState||(l.flags|=1024),l.memoizedProps=v,l.memoizedState=mt),V.props=v,V.state=mt,V.context=_e,v=Be):(typeof V.componentDidUpdate!="function"||ne===o.memoizedProps&&xt===o.memoizedState||(l.flags|=4),typeof V.getSnapshotBeforeUpdate!="function"||ne===o.memoizedProps&&xt===o.memoizedState||(l.flags|=1024),v=!1)}return yf(o,l,d,v,b,S)}function yf(o,l,d,v,S,b){lg(o,l);var V=(l.flags&128)!==0;if(!v&&!V)return S&&Bt(l,d,!1),_r(o,l,b);v=l.stateNode,jx.current=l;var ne=V&&typeof d.getDerivedStateFromError!="function"?null:v.render();return l.flags|=1,o!==null&&V?(l.child=lo(l,o.child,null,b),l.child=lo(l,null,ne,b)):Zn(o,l,ne,b),l.memoizedState=v.state,S&&Bt(l,d,!0),l.child}function ug(o){var l=o.stateNode;l.pendingContext?Ht(o,l.pendingContext,l.pendingContext!==l.context):l.context&&Ht(o,l.context,!1),of(o,l.containerInfo)}function hg(o,l,d,v,S){return ao(),sf(S),l.flags|=256,Zn(o,l,d,v),l.child}var nc={dehydrated:null,treeContext:null,retryLane:0};function ic(o){return{baseLanes:o,cachePool:null}}function fg(o,l,d){var v=l.pendingProps,S=cn.current,b=!1,V=(l.flags&128)!==0,ne;if((ne=V)||(ne=o!==null&&o.memoizedState===null?!1:(S&2)!==0),ne?(b=!0,l.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),dt(cn,S&1),o===null)return rf(l),o=l.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(l.mode&1?fr(o)?l.lanes=8:l.lanes=1073741824:l.lanes=1,null):(S=v.children,o=v.fallback,b?(v=l.mode,b=l.child,S={mode:"hidden",children:S},!(v&1)&&b!==null?(b.childLanes=0,b.pendingProps=S):b=wc(S,v,0,null),o=ms(o,v,d,null),b.return=l,o.return=l,b.sibling=o,l.child=b,l.child.memoizedState=ic(d),l.memoizedState=nc,o):xf(l,S));if(S=o.memoizedState,S!==null){if(ne=S.dehydrated,ne!==null){if(V)return l.flags&256?(l.flags&=-257,rc(o,l,d,Error(a(422)))):l.memoizedState!==null?(l.child=o.child,l.flags|=128,null):(b=v.fallback,S=l.mode,v=wc({mode:"visible",children:v.children},S,0,null),b=ms(b,S,d,null),b.flags|=2,v.return=l,b.return=l,v.sibling=b,l.child=v,l.mode&1&&lo(l,o.child,null,d),l.child.memoizedState=ic(d),l.memoizedState=nc,b);if(!(l.mode&1))l=rc(o,l,d,null);else if(fr(ne))l=rc(o,l,d,Error(a(419)));else if(v=(d&o.childLanes)!==0,vi||v){if(v=Mn,v!==null){switch(d&-d){case 4:b=2;break;case 16:b=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:b=32;break;case 536870912:b=268435456;break;default:b=0}v=b&(v.suspendedLanes|d)?0:b,v!==0&&v!==S.retryLane&&(S.retryLane=v,Pi(o,v,-1))}kf(),l=rc(o,l,d,Error(a(421)))}else qn(ne)?(l.flags|=128,l.child=o.child,l=cM.bind(null,o),Zi(ne,l),l=null):(d=S.treeContext,Ie&&(gi=Dr(ne),mi=l,ln=!0,Oi=null,ia=!1,d!==null&&(Ai[Ci++]=mr,Ai[Ci++]=gr,Ai[Ci++]=as,mr=d.id,gr=d.overflow,as=l)),l=xf(l,l.pendingProps.children),l.flags|=4096);return l}return b?(v=pg(o,l,v.children,v.fallback,d),b=l.child,S=o.child.memoizedState,b.memoizedState=S===null?ic(d):{baseLanes:S.baseLanes|d,cachePool:null},b.childLanes=o.childLanes&~d,l.memoizedState=nc,v):(d=dg(o,l,v.children,d),l.memoizedState=null,d)}return b?(v=pg(o,l,v.children,v.fallback,d),b=l.child,S=o.child.memoizedState,b.memoizedState=S===null?ic(d):{baseLanes:S.baseLanes|d,cachePool:null},b.childLanes=o.childLanes&~d,l.memoizedState=nc,v):(d=dg(o,l,v.children,d),l.memoizedState=null,d)}function xf(o,l){return l=wc({mode:"visible",children:l},o.mode,0,null),l.return=o,o.child=l}function dg(o,l,d,v){var S=o.child;return o=S.sibling,d=kr(S,{mode:"visible",children:d}),!(l.mode&1)&&(d.lanes=v),d.return=l,d.sibling=null,o!==null&&(v=l.deletions,v===null?(l.deletions=[o],l.flags|=16):v.push(o)),l.child=d}function pg(o,l,d,v,S){var b=l.mode;o=o.child;var V=o.sibling,ne={mode:"hidden",children:d};return!(b&1)&&l.child!==o?(d=l.child,d.childLanes=0,d.pendingProps=ne,l.deletions=null):(d=kr(o,ne),d.subtreeFlags=o.subtreeFlags&14680064),V!==null?v=kr(V,v):(v=ms(v,b,S,null),v.flags|=2),v.return=l,d.return=l,d.sibling=v,l.child=d,v}function rc(o,l,d,v){return v!==null&&sf(v),lo(l,o.child,null,d),o=xf(l,l.pendingProps.children),o.flags|=2,l.memoizedState=null,o}function mg(o,l,d){o.lanes|=l;var v=o.alternate;v!==null&&(v.lanes|=l),jh(o.return,l,d)}function Mf(o,l,d,v,S){var b=o.memoizedState;b===null?o.memoizedState={isBackwards:l,rendering:null,renderingStartTime:0,last:v,tail:d,tailMode:S}:(b.isBackwards=l,b.rendering=null,b.renderingStartTime=0,b.last=v,b.tail=d,b.tailMode=S)}function gg(o,l,d){var v=l.pendingProps,S=v.revealOrder,b=v.tail;if(Zn(o,l,v.children,d),v=cn.current,v&2)v=v&1|2,l.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=l.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&mg(o,d,l);else if(o.tag===19)mg(o,d,l);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===l)break e;for(;o.sibling===null;){if(o.return===null||o.return===l)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}v&=1}if(dt(cn,v),!(l.mode&1))l.memoizedState=null;else switch(S){case"forwards":for(d=l.child,S=null;d!==null;)o=d.alternate,o!==null&&Yl(o)===null&&(S=d),d=d.sibling;d=S,d===null?(S=l.child,l.child=null):(S=d.sibling,d.sibling=null),Mf(l,!1,S,d,b);break;case"backwards":for(d=null,S=l.child,l.child=null;S!==null;){if(o=S.alternate,o!==null&&Yl(o)===null){l.child=S;break}o=S.sibling,S.sibling=d,d=S,S=o}Mf(l,!0,d,null,b);break;case"together":Mf(l,!1,null,null,void 0);break;default:l.memoizedState=null}return l.child}function _r(o,l,d){if(o!==null&&(l.dependencies=o.dependencies),po|=l.lanes,!(d&l.childLanes))return null;if(o!==null&&l.child!==o.child)throw Error(a(153));if(l.child!==null){for(o=l.child,d=kr(o,o.pendingProps),l.child=d,d.return=l;o.sibling!==null;)o=o.sibling,d=d.sibling=kr(o,o.pendingProps),d.return=l;d.sibling=null}return l.child}function Kx(o,l,d){switch(l.tag){case 3:ug(l),ao();break;case 5:Lm(l);break;case 1:nn(l.type)&&Nt(l);break;case 4:of(l,l.stateNode.containerInfo);break;case 10:vm(l,l.type._context,l.memoizedProps.value);break;case 13:var v=l.memoizedState;if(v!==null)return v.dehydrated!==null?(dt(cn,cn.current&1),l.flags|=128,null):d&l.child.childLanes?fg(o,l,d):(dt(cn,cn.current&1),o=_r(o,l,d),o!==null?o.sibling:null);dt(cn,cn.current&1);break;case 19:if(v=(d&l.childLanes)!==0,o.flags&128){if(v)return gg(o,l,d);l.flags|=128}var S=l.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),dt(cn,cn.current),v)break;return null;case 22:case 23:return l.lanes=0,ag(o,l,d)}return _r(o,l,d)}function Qx(o,l){switch(tf(l),l.tag){case 1:return nn(l.type)&&Jt(),o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 3:return uo(),$e(wt),$e(Ve),cf(),o=l.flags,o&65536&&!(o&128)?(l.flags=o&-65537|128,l):null;case 5:return af(l),null;case 13:if($e(cn),o=l.memoizedState,o!==null&&o.dehydrated!==null){if(l.alternate===null)throw Error(a(340));ao()}return o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 19:return $e(cn),null;case 4:return uo(),null;case 10:return Jh(l.type._context),null;case 22:case 23:return zf(),null;case 24:return null;default:return null}}var sc=!1,us=!1,$x=typeof WeakSet=="function"?WeakSet:Set,Je=null;function oc(o,l){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(v){li(o,l,v)}else d.current=null}function Sf(o,l,d){try{d()}catch(v){li(o,l,v)}}var vg=!1;function eM(o,l){for(te(o.containerInfo),Je=l;Je!==null;)if(o=Je,l=o.child,(o.subtreeFlags&1028)!==0&&l!==null)l.return=o,Je=l;else for(;Je!==null;){o=Je;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var v=d.memoizedProps,S=d.memoizedState,b=o.stateNode,V=b.getSnapshotBeforeUpdate(o.elementType===o.type?v:Fi(o.type,v),S);b.__reactInternalSnapshotBeforeUpdate=V}break;case 3:St&&Me(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(ne){li(o,o.return,ne)}if(l=o.sibling,l!==null){l.return=o.return,Je=l;break}Je=o.return}return d=vg,vg=!1,d}function hs(o,l,d){var v=l.updateQueue;if(v=v!==null?v.lastEffect:null,v!==null){var S=v=v.next;do{if((S.tag&o)===o){var b=S.destroy;S.destroy=void 0,b!==void 0&&Sf(l,d,b)}S=S.next}while(S!==v)}}function ma(o,l){if(l=l.updateQueue,l=l!==null?l.lastEffect:null,l!==null){var d=l=l.next;do{if((d.tag&o)===o){var v=d.create;d.destroy=v()}d=d.next}while(d!==l)}}function wf(o){var l=o.ref;if(l!==null){var d=o.stateNode;switch(o.tag){case 5:o=ee(d);break;default:o=d}typeof l=="function"?l(o):l.current=o}}function _g(o,l,d){if(Ji&&typeof Ji.onCommitFiberUnmount=="function")try{Ji.onCommitFiberUnmount(Nl,l)}catch{}switch(l.tag){case 0:case 11:case 14:case 15:if(o=l.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var v=o=o.next;do{var S=v,b=S.destroy;S=S.tag,b!==void 0&&(S&2||S&4)&&Sf(l,d,b),v=v.next}while(v!==o)}break;case 1:if(oc(l,d),o=l.stateNode,typeof o.componentWillUnmount=="function")try{o.props=l.memoizedProps,o.state=l.memoizedState,o.componentWillUnmount()}catch(V){li(l,d,V)}break;case 5:oc(l,d);break;case 4:St?Eg(o,l,d):Te&&Te&&(l=l.stateNode.containerInfo,d=We(l),tn(l,d))}}function yg(o,l,d){for(var v=l;;)if(_g(o,v,d),v.child===null||St&&v.tag===4){if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return}v.sibling.return=v.return,v=v.sibling}else v.child.return=v,v=v.child}function xg(o){var l=o.alternate;l!==null&&(o.alternate=null,xg(l)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(l=o.stateNode,l!==null&&je(l)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function Mg(o){return o.tag===5||o.tag===3||o.tag===4}function Sg(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||Mg(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function wg(o){if(St){e:{for(var l=o.return;l!==null;){if(Mg(l))break e;l=l.return}throw Error(a(160))}var d=l;switch(d.tag){case 5:l=d.stateNode,d.flags&32&&(me(l),d.flags&=-33),d=Sg(o),Tf(o,d,l);break;case 3:case 4:l=d.stateNode.containerInfo,d=Sg(o),Ef(o,d,l);break;default:throw Error(a(161))}}}function Ef(o,l,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?ot(d,o,l):qe(d,o);else if(v!==4&&(o=o.child,o!==null))for(Ef(o,l,d),o=o.sibling;o!==null;)Ef(o,l,d),o=o.sibling}function Tf(o,l,d){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?ht(d,o,l):Ge(d,o);else if(v!==4&&(o=o.child,o!==null))for(Tf(o,l,d),o=o.sibling;o!==null;)Tf(o,l,d),o=o.sibling}function Eg(o,l,d){for(var v=l,S=!1,b,V;;){if(!S){S=v.return;e:for(;;){if(S===null)throw Error(a(160));switch(b=S.stateNode,S.tag){case 5:V=!1;break e;case 3:b=b.containerInfo,V=!0;break e;case 4:b=b.containerInfo,V=!0;break e}S=S.return}S=!0}if(v.tag===5||v.tag===6)yg(o,v,d),V?j(b,v.stateNode):Ke(b,v.stateNode);else if(v.tag===18)V?X(b,v.stateNode):H(b,v.stateNode);else if(v.tag===4){if(v.child!==null){b=v.stateNode.containerInfo,V=!0,v.child.return=v,v=v.child;continue}}else if(_g(o,v,d),v.child!==null){v.child.return=v,v=v.child;continue}if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return,v.tag===4&&(S=!1)}v.sibling.return=v.return,v=v.sibling}}function bf(o,l){if(St){switch(l.tag){case 0:case 11:case 14:case 15:hs(3,l,l.return),ma(3,l),hs(5,l,l.return);return;case 1:return;case 5:var d=l.stateNode;if(d!=null){var v=l.memoizedProps;o=o!==null?o.memoizedProps:v;var S=l.type,b=l.updateQueue;l.updateQueue=null,b!==null&&et(d,b,S,o,v,l)}return;case 6:if(l.stateNode===null)throw Error(a(162));d=l.memoizedProps,Rt(l.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:Ie&&o!==null&&o.memoizedState.isDehydrated&&ge(l.stateNode.containerInfo);return;case 12:return;case 13:ac(l);return;case 19:ac(l);return;case 17:return}throw Error(a(163))}switch(l.tag){case 0:case 11:case 14:case 15:hs(3,l,l.return),ma(3,l),hs(5,l,l.return);return;case 12:return;case 13:ac(l);return;case 19:ac(l);return;case 3:Ie&&o!==null&&o.memoizedState.isDehydrated&&ge(l.stateNode.containerInfo);break;case 22:case 23:return}e:if(Te){switch(l.tag){case 1:case 5:case 6:break e;case 3:case 4:l=l.stateNode,tn(l.containerInfo,l.pendingChildren);break e}throw Error(a(163))}}function ac(o){var l=o.updateQueue;if(l!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new $x),l.forEach(function(v){var S=uM.bind(null,o,v);d.has(v)||(d.add(v),v.then(S,S))})}}function tM(o,l){for(Je=l;Je!==null;){l=Je;var d=l.deletions;if(d!==null)for(var v=0;v<d.length;v++){var S=d[v];try{var b=o;St?Eg(b,S,l):yg(b,S,l);var V=S.alternate;V!==null&&(V.return=null),S.return=null}catch(ft){li(S,l,ft)}}if(d=l.child,l.subtreeFlags&12854&&d!==null)d.return=l,Je=d;else for(;Je!==null;){l=Je;try{var ne=l.flags;if(ne&32&&St&&me(l.stateNode),ne&512){var _e=l.alternate;if(_e!==null){var Be=_e.ref;Be!==null&&(typeof Be=="function"?Be(null):Be.current=null)}}if(ne&8192)switch(l.tag){case 13:if(l.memoizedState!==null){var at=l.alternate;(at===null||at.memoizedState===null)&&(Df=In())}break;case 22:var bt=l.memoizedState!==null,xt=l.alternate,rn=xt!==null&&xt.memoizedState!==null;if(d=l,St){e:if(v=d,S=bt,b=null,St)for(var mt=v;;){if(mt.tag===5){if(b===null){b=mt;var kn=mt.stateNode;S?Fe(kn):oe(mt.stateNode,mt.memoizedProps)}}else if(mt.tag===6){if(b===null){var Di=mt.stateNode;S?q(Di):de(Di,mt.memoizedProps)}}else if((mt.tag!==22&&mt.tag!==23||mt.memoizedState===null||mt===v)&&mt.child!==null){mt.child.return=mt,mt=mt.child;continue}if(mt===v)break;for(;mt.sibling===null;){if(mt.return===null||mt.return===v)break e;b===mt&&(b=null),mt=mt.return}b===mt&&(b=null),mt.sibling.return=mt.return,mt=mt.sibling}}if(bt&&!rn&&d.mode&1){Je=d;for(var le=d.child;le!==null;){for(d=Je=le;Je!==null;){v=Je;var ie=v.child;switch(v.tag){case 0:case 11:case 14:case 15:hs(4,v,v.return);break;case 1:oc(v,v.return);var pe=v.stateNode;if(typeof pe.componentWillUnmount=="function"){var Qe=v.return;try{pe.props=v.memoizedProps,pe.state=v.memoizedState,pe.componentWillUnmount()}catch(ft){li(v,Qe,ft)}}break;case 5:oc(v,v.return);break;case 22:if(v.memoizedState!==null){Ag(d);continue}}ie!==null?(ie.return=v,Je=ie):Ag(d)}le=le.sibling}}}switch(ne&4102){case 2:wg(l),l.flags&=-3;break;case 6:wg(l),l.flags&=-3,bf(l.alternate,l);break;case 4096:l.flags&=-4097;break;case 4100:l.flags&=-4097,bf(l.alternate,l);break;case 4:bf(l.alternate,l)}}catch(ft){li(l,l.return,ft)}if(d=l.sibling,d!==null){d.return=l.return,Je=d;break}Je=l.return}}}function nM(o,l,d){Je=o,Tg(o)}function Tg(o,l,d){for(var v=(o.mode&1)!==0;Je!==null;){var S=Je,b=S.child;if(S.tag===22&&v){var V=S.memoizedState!==null||sc;if(!V){var ne=S.alternate,_e=ne!==null&&ne.memoizedState!==null||us;ne=sc;var Be=us;if(sc=V,(us=_e)&&!Be)for(Je=S;Je!==null;)V=Je,_e=V.child,V.tag===22&&V.memoizedState!==null?Cg(S):_e!==null?(_e.return=V,Je=_e):Cg(S);for(;b!==null;)Je=b,Tg(b),b=b.sibling;Je=S,sc=ne,us=Be}bg(o)}else S.subtreeFlags&8772&&b!==null?(b.return=S,Je=b):bg(o)}}function bg(o){for(;Je!==null;){var l=Je;if(l.flags&8772){var d=l.alternate;try{if(l.flags&8772)switch(l.tag){case 0:case 11:case 15:us||ma(5,l);break;case 1:var v=l.stateNode;if(l.flags&4&&!us)if(d===null)v.componentDidMount();else{var S=l.elementType===l.type?d.memoizedProps:Fi(l.type,d.memoizedProps);v.componentDidUpdate(S,d.memoizedState,v.__reactInternalSnapshotBeforeUpdate)}var b=l.updateQueue;b!==null&&xm(l,b,v);break;case 3:var V=l.updateQueue;if(V!==null){if(d=null,l.child!==null)switch(l.child.tag){case 5:d=ee(l.child.stateNode);break;case 1:d=l.child.stateNode}xm(l,V,d)}break;case 5:var ne=l.stateNode;d===null&&l.flags&4&&Ne(ne,l.type,l.memoizedProps,l);break;case 6:break;case 4:break;case 12:break;case 13:if(Ie&&l.memoizedState===null){var _e=l.alternate;if(_e!==null){var Be=_e.memoizedState;if(Be!==null){var at=Be.dehydrated;at!==null&&C(at)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}us||l.flags&512&&wf(l)}catch(bt){li(l,l.return,bt)}}if(l===o){Je=null;break}if(d=l.sibling,d!==null){d.return=l.return,Je=d;break}Je=l.return}}function Ag(o){for(;Je!==null;){var l=Je;if(l===o){Je=null;break}var d=l.sibling;if(d!==null){d.return=l.return,Je=d;break}Je=l.return}}function Cg(o){for(;Je!==null;){var l=Je;try{switch(l.tag){case 0:case 11:case 15:var d=l.return;try{ma(4,l)}catch(_e){li(l,d,_e)}break;case 1:var v=l.stateNode;if(typeof v.componentDidMount=="function"){var S=l.return;try{v.componentDidMount()}catch(_e){li(l,S,_e)}}var b=l.return;try{wf(l)}catch(_e){li(l,b,_e)}break;case 5:var V=l.return;try{wf(l)}catch(_e){li(l,V,_e)}}}catch(_e){li(l,l.return,_e)}if(l===o){Je=null;break}var ne=l.sibling;if(ne!==null){ne.return=l.return,Je=ne;break}Je=l.return}}var lc=0,cc=1,uc=2,hc=3,fc=4;if(typeof Symbol=="function"&&Symbol.for){var ga=Symbol.for;lc=ga("selector.component"),cc=ga("selector.has_pseudo_class"),uc=ga("selector.role"),hc=ga("selector.test_id"),fc=ga("selector.text")}function Af(o){var l=W(o);if(l!=null){if(typeof l.memoizedProps["data-testname"]!="string")throw Error(a(364));return l}if(o=k(o),o===null)throw Error(a(362));return o.stateNode.current}function Cf(o,l){switch(l.$$typeof){case lc:if(o.type===l.value)return!0;break;case cc:e:{l=l.value,o=[o,0];for(var d=0;d<o.length;){var v=o[d++],S=o[d++],b=l[S];if(v.tag!==5||!ve(v)){for(;b!=null&&Cf(v,b);)S++,b=l[S];if(S===l.length){l=!0;break e}else for(v=v.child;v!==null;)o.push(v,S),v=v.sibling}}l=!1}return l;case uc:if(o.tag===5&&Ce(o.stateNode,l.value))return!0;break;case fc:if((o.tag===5||o.tag===6)&&(o=se(o),o!==null&&0<=o.indexOf(l.value)))return!0;break;case hc:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===l.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}function Rf(o){switch(o.$$typeof){case lc:return"<"+(U(o.value)||"Unknown")+">";case cc:return":has("+(Rf(o)||"")+")";case uc:return'[role="'+o.value+'"]';case fc:return'"'+o.value+'"';case hc:return'[data-testname="'+o.value+'"]';default:throw Error(a(365))}}function Rg(o,l){var d=[];o=[o,0];for(var v=0;v<o.length;){var S=o[v++],b=o[v++],V=l[b];if(S.tag!==5||!ve(S)){for(;V!=null&&Cf(S,V);)b++,V=l[b];if(b===l.length)d.push(S);else for(S=S.child;S!==null;)o.push(S,b),S=S.sibling}}return d}function If(o,l){if(!Xe)throw Error(a(363));o=Af(o),o=Rg(o,l),l=[],o=Array.from(o);for(var d=0;d<o.length;){var v=o[d++];if(v.tag===5)ve(v)||l.push(v.stateNode);else for(v=v.child;v!==null;)o.push(v),v=v.sibling}return l}var iM=Math.ceil,dc=c.ReactCurrentDispatcher,Pf=c.ReactCurrentOwner,vn=c.ReactCurrentBatchConfig,Ot=0,Mn=null,Sn=null,Nn=0,_i=0,fo=ct(0),Tn=0,va=null,po=0,pc=0,Lf=0,_a=null,oi=null,Df=0,Uf=1/0;function mo(){Uf=In()+500}var mc=!1,Nf=null,Fr=null,gc=!1,Or=null,vc=0,ya=0,Ff=null,_c=-1,yc=0;function Jn(){return Ot&6?In():_c!==-1?_c:_c=In()}function Br(o){return o.mode&1?Ot&2&&Nn!==0?Nn&-Nn:zx.transition!==null?(yc===0&&(o=Ll,Ll<<=1,!(Ll&4194240)&&(Ll=64),yc=o),yc):(o=Yt,o!==0?o:Ue()):1}function Pi(o,l,d){if(50<ya)throw ya=0,Ff=null,Error(a(185));var v=xc(o,l);return v===null?null:(na(v,l,d),(!(Ot&2)||v!==Mn)&&(v===Mn&&(!(Ot&2)&&(pc|=l),Tn===4&&zr(v,Nn)),ai(v,d),l===1&&Ot===0&&!(o.mode&1)&&(mo(),Fl&&Ki())),v)}function xc(o,l){o.lanes|=l;var d=o.alternate;for(d!==null&&(d.lanes|=l),d=o,o=o.return;o!==null;)o.childLanes|=l,d=o.alternate,d!==null&&(d.childLanes|=l),d=o,o=o.return;return d.tag===3?d.stateNode:null}function ai(o,l){var d=o.callbackNode;Ix(o,l);var v=Ul(o,o===Mn?Nn:0);if(v===0)d!==null&&mm(d),o.callbackNode=null,o.callbackPriority=0;else if(l=v&-v,o.callbackPriority!==l){if(d!=null&&mm(d),l===1)o.tag===0?Bx(Pg.bind(null,o)):gm(Pg.bind(null,o)),ke?_t(function(){Ot===0&&Ki()}):Gh(Wh,Ki),d=null;else{switch(pm(v)){case 1:d=Wh;break;case 4:d=Ux;break;case 16:d=Xh;break;case 536870912:d=Nx;break;default:d=Xh}d=kg(d,Ig.bind(null,o))}o.callbackPriority=l,o.callbackNode=d}}function Ig(o,l){if(_c=-1,yc=0,Ot&6)throw Error(a(327));var d=o.callbackNode;if(ps()&&o.callbackNode!==d)return null;var v=Ul(o,o===Mn?Nn:0);if(v===0)return null;if(v&30||v&o.expiredLanes||l)l=Mc(o,v);else{l=v;var S=Ot;Ot|=2;var b=Ug();(Mn!==o||Nn!==l)&&(mo(),fs(o,l));do try{oM();break}catch(ne){Dg(o,ne)}while(!0);Zh(),dc.current=b,Ot=S,Sn!==null?l=0:(Mn=null,Nn=0,l=Tn)}if(l!==0){if(l===2&&(S=kh(o),S!==0&&(v=S,l=Of(o,S))),l===1)throw d=va,fs(o,0),zr(o,v),ai(o,In()),d;if(l===6)zr(o,v);else{if(S=o.current.alternate,!(v&30)&&!rM(S)&&(l=Mc(o,v),l===2&&(b=kh(o),b!==0&&(v=b,l=Of(o,b))),l===1))throw d=va,fs(o,0),zr(o,v),ai(o,In()),d;switch(o.finishedWork=S,o.finishedLanes=v,l){case 0:case 1:throw Error(a(345));case 2:ds(o,oi);break;case 3:if(zr(o,v),(v&130023424)===v&&(l=Df+500-In(),10<l)){if(Ul(o,0)!==0)break;if(S=o.suspendedLanes,(S&v)!==v){Jn(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=Re(ds.bind(null,o,oi),l);break}ds(o,oi);break;case 4:if(zr(o,v),(v&4194240)===v)break;for(l=o.eventTimes,S=-1;0<v;){var V=31-zt(v);b=1<<V,V=l[V],V>S&&(S=V),v&=~b}if(v=S,v=In()-v,v=(120>v?120:480>v?480:1080>v?1080:1920>v?1920:3e3>v?3e3:4320>v?4320:1960*iM(v/1960))-v,10<v){o.timeoutHandle=Re(ds.bind(null,o,oi),v);break}ds(o,oi);break;case 5:ds(o,oi);break;default:throw Error(a(329))}}}return ai(o,In()),o.callbackNode===d?Ig.bind(null,o):null}function Of(o,l){var d=_a;return o.current.memoizedState.isDehydrated&&(fs(o,l).flags|=256),o=Mc(o,l),o!==2&&(l=oi,oi=d,l!==null&&Bf(l)),o}function Bf(o){oi===null?oi=o:oi.push.apply(oi,o)}function rM(o){for(var l=o;;){if(l.flags&16384){var d=l.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var v=0;v<d.length;v++){var S=d[v],b=S.getSnapshot;S=S.value;try{if(!ji(b(),S))return!1}catch{return!1}}}if(d=l.child,l.subtreeFlags&16384&&d!==null)d.return=l,l=d;else{if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return!0;l=l.return}l.sibling.return=l.return,l=l.sibling}}return!0}function zr(o,l){for(l&=~Lf,l&=~pc,o.suspendedLanes|=l,o.pingedLanes&=~l,o=o.expirationTimes;0<l;){var d=31-zt(l),v=1<<d;o[d]=-1,l&=~v}}function Pg(o){if(Ot&6)throw Error(a(327));ps();var l=Ul(o,0);if(!(l&1))return ai(o,In()),null;var d=Mc(o,l);if(o.tag!==0&&d===2){var v=kh(o);v!==0&&(l=v,d=Of(o,v))}if(d===1)throw d=va,fs(o,0),zr(o,l),ai(o,In()),d;if(d===6)throw Error(a(345));return o.finishedWork=o.current.alternate,o.finishedLanes=l,ds(o,oi),ai(o,In()),null}function Lg(o){Or!==null&&Or.tag===0&&!(Ot&6)&&ps();var l=Ot;Ot|=1;var d=vn.transition,v=Yt;try{if(vn.transition=null,Yt=1,o)return o()}finally{Yt=v,vn.transition=d,Ot=l,!(Ot&6)&&Ki()}}function zf(){_i=fo.current,$e(fo)}function fs(o,l){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==yt&&(o.timeoutHandle=yt,it(d)),Sn!==null)for(d=Sn.return;d!==null;){var v=d;switch(tf(v),v.tag){case 1:v=v.type.childContextTypes,v!=null&&Jt();break;case 3:uo(),$e(wt),$e(Ve),cf();break;case 5:af(v);break;case 4:uo();break;case 13:$e(cn);break;case 19:$e(cn);break;case 10:Jh(v.type._context);break;case 22:case 23:zf()}d=d.return}if(Mn=o,Sn=o=kr(o.current,null),Nn=_i=l,Tn=0,va=null,Lf=pc=po=0,oi=_a=null,Qi!==null){for(l=0;l<Qi.length;l++)if(d=Qi[l],v=d.interleaved,v!==null){d.interleaved=null;var S=v.next,b=d.pending;if(b!==null){var V=b.next;b.next=S,v.next=V}d.pending=v}Qi=null}return o}function Dg(o,l){do{var d=Sn;try{if(Zh(),ql.current=$l,Zl){for(var v=pn.memoizedState;v!==null;){var S=v.queue;S!==null&&(S.pending=null),v=v.next}Zl=!1}if(ho=0,Pn=On=pn=null,la=!1,ca=0,Pf.current=null,d===null||d.return===null){Tn=1,va=l,Sn=null;break}e:{var b=o,V=d.return,ne=d,_e=l;if(l=Nn,ne.flags|=32768,_e!==null&&typeof _e=="object"&&typeof _e.then=="function"){var Be=_e,at=ne,bt=at.tag;if(!(at.mode&1)&&(bt===0||bt===11||bt===15)){var xt=at.alternate;xt?(at.updateQueue=xt.updateQueue,at.memoizedState=xt.memoizedState,at.lanes=xt.lanes):(at.updateQueue=null,at.memoizedState=null)}var rn=eg(V);if(rn!==null){rn.flags&=-257,tg(rn,V,ne,b,l),rn.mode&1&&$m(b,Be,l),l=rn,_e=Be;var mt=l.updateQueue;if(mt===null){var kn=new Set;kn.add(_e),l.updateQueue=kn}else mt.add(_e);break e}else{if(!(l&1)){$m(b,Be,l),kf();break e}_e=Error(a(426))}}else if(ln&&ne.mode&1){var Di=eg(V);if(Di!==null){!(Di.flags&65536)&&(Di.flags|=256),tg(Di,V,ne,b,l),sf(_e);break e}}b=_e,Tn!==4&&(Tn=2),_a===null?_a=[b]:_a.push(b),_e=gf(_e,ne),ne=V;do{switch(ne.tag){case 3:ne.flags|=65536,l&=-l,ne.lanes|=l;var le=Km(ne,_e,l);ym(ne,le);break e;case 1:b=_e;var ie=ne.type,pe=ne.stateNode;if(!(ne.flags&128)&&(typeof ie.getDerivedStateFromError=="function"||pe!==null&&typeof pe.componentDidCatch=="function"&&(Fr===null||!Fr.has(pe)))){ne.flags|=65536,l&=-l,ne.lanes|=l;var Qe=Qm(ne,b,l);ym(ne,Qe);break e}}ne=ne.return}while(ne!==null)}Fg(d)}catch(ft){l=ft,Sn===d&&d!==null&&(Sn=d=d.return);continue}break}while(!0)}function Ug(){var o=dc.current;return dc.current=$l,o===null?$l:o}function kf(){(Tn===0||Tn===3||Tn===2)&&(Tn=4),Mn===null||!(po&268435455)&&!(pc&268435455)||zr(Mn,Nn)}function Mc(o,l){var d=Ot;Ot|=2;var v=Ug();Mn===o&&Nn===l||fs(o,l);do try{sM();break}catch(S){Dg(o,S)}while(!0);if(Zh(),Ot=d,dc.current=v,Sn!==null)throw Error(a(261));return Mn=null,Nn=0,Tn}function sM(){for(;Sn!==null;)Ng(Sn)}function oM(){for(;Sn!==null&&!Lx();)Ng(Sn)}function Ng(o){var l=zg(o.alternate,o,_i);o.memoizedProps=o.pendingProps,l===null?Fg(o):Sn=l,Pf.current=null}function Fg(o){var l=o;do{var d=l.alternate;if(o=l.return,l.flags&32768){if(d=Qx(d,l),d!==null){d.flags&=32767,Sn=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{Tn=6,Sn=null;return}}else if(d=Jx(d,l,_i),d!==null){Sn=d;return}if(l=l.sibling,l!==null){Sn=l;return}Sn=l=o}while(l!==null);Tn===0&&(Tn=5)}function ds(o,l){var d=Yt,v=vn.transition;try{vn.transition=null,Yt=1,aM(o,l,d)}finally{vn.transition=v,Yt=d}return null}function aM(o,l,d){do ps();while(Or!==null);if(Ot&6)throw Error(a(327));var v=o.finishedWork,S=o.finishedLanes;if(v===null)return null;if(o.finishedWork=null,o.finishedLanes=0,v===o.current)throw Error(a(177));o.callbackNode=null,o.callbackPriority=0;var b=v.lanes|v.childLanes;if(Px(o,b),o===Mn&&(Sn=Mn=null,Nn=0),!(v.subtreeFlags&2064)&&!(v.flags&2064)||gc||(gc=!0,kg(Xh,function(){return ps(),null})),b=(v.flags&15990)!==0,v.subtreeFlags&15990||b){b=vn.transition,vn.transition=null;var V=Yt;Yt=1;var ne=Ot;Ot|=4,Pf.current=null,eM(o,v),tM(o,v),Q(o.containerInfo),o.current=v,nM(v),Dx(),Ot=ne,Yt=V,vn.transition=b}else o.current=v;if(gc&&(gc=!1,Or=o,vc=S),b=o.pendingLanes,b===0&&(Fr=null),Fx(v.stateNode),ai(o,In()),l!==null)for(d=o.onRecoverableError,v=0;v<l.length;v++)d(l[v]);if(mc)throw mc=!1,o=Nf,Nf=null,o;return vc&1&&o.tag!==0&&ps(),b=o.pendingLanes,b&1?o===Ff?ya++:(ya=0,Ff=o):ya=0,Ki(),null}function ps(){if(Or!==null){var o=pm(vc),l=vn.transition,d=Yt;try{if(vn.transition=null,Yt=16>o?16:o,Or===null)var v=!1;else{if(o=Or,Or=null,vc=0,Ot&6)throw Error(a(331));var S=Ot;for(Ot|=4,Je=o.current;Je!==null;){var b=Je,V=b.child;if(Je.flags&16){var ne=b.deletions;if(ne!==null){for(var _e=0;_e<ne.length;_e++){var Be=ne[_e];for(Je=Be;Je!==null;){var at=Je;switch(at.tag){case 0:case 11:case 15:hs(8,at,b)}var bt=at.child;if(bt!==null)bt.return=at,Je=bt;else for(;Je!==null;){at=Je;var xt=at.sibling,rn=at.return;if(xg(at),at===Be){Je=null;break}if(xt!==null){xt.return=rn,Je=xt;break}Je=rn}}}var mt=b.alternate;if(mt!==null){var kn=mt.child;if(kn!==null){mt.child=null;do{var Di=kn.sibling;kn.sibling=null,kn=Di}while(kn!==null)}}Je=b}}if(b.subtreeFlags&2064&&V!==null)V.return=b,Je=V;else e:for(;Je!==null;){if(b=Je,b.flags&2048)switch(b.tag){case 0:case 11:case 15:hs(9,b,b.return)}var le=b.sibling;if(le!==null){le.return=b.return,Je=le;break e}Je=b.return}}var ie=o.current;for(Je=ie;Je!==null;){V=Je;var pe=V.child;if(V.subtreeFlags&2064&&pe!==null)pe.return=V,Je=pe;else e:for(V=ie;Je!==null;){if(ne=Je,ne.flags&2048)try{switch(ne.tag){case 0:case 11:case 15:ma(9,ne)}}catch(ft){li(ne,ne.return,ft)}if(ne===V){Je=null;break e}var Qe=ne.sibling;if(Qe!==null){Qe.return=ne.return,Je=Qe;break e}Je=ne.return}}if(Ot=S,Ki(),Ji&&typeof Ji.onPostCommitFiberRoot=="function")try{Ji.onPostCommitFiberRoot(Nl,o)}catch{}v=!0}return v}finally{Yt=d,vn.transition=l}}return!1}function Og(o,l,d){l=gf(d,l),l=Km(o,l,1),Nr(o,l),l=Jn(),o=xc(o,1),o!==null&&(na(o,1,l),ai(o,l))}function li(o,l,d){if(o.tag===3)Og(o,o,d);else for(;l!==null;){if(l.tag===3){Og(l,o,d);break}else if(l.tag===1){var v=l.stateNode;if(typeof l.type.getDerivedStateFromError=="function"||typeof v.componentDidCatch=="function"&&(Fr===null||!Fr.has(v))){o=gf(d,o),o=Qm(l,o,1),Nr(l,o),o=Jn(),l=xc(l,1),l!==null&&(na(l,1,o),ai(l,o));break}}l=l.return}}function lM(o,l,d){var v=o.pingCache;v!==null&&v.delete(l),l=Jn(),o.pingedLanes|=o.suspendedLanes&d,Mn===o&&(Nn&d)===d&&(Tn===4||Tn===3&&(Nn&130023424)===Nn&&500>In()-Df?fs(o,0):Lf|=d),ai(o,l)}function Bg(o,l){l===0&&(o.mode&1?(l=Dl,Dl<<=1,!(Dl&130023424)&&(Dl=4194304)):l=1);var d=Jn();o=xc(o,l),o!==null&&(na(o,l,d),ai(o,d))}function cM(o){var l=o.memoizedState,d=0;l!==null&&(d=l.retryLane),Bg(o,d)}function uM(o,l){var d=0;switch(o.tag){case 13:var v=o.stateNode,S=o.memoizedState;S!==null&&(d=S.retryLane);break;case 19:v=o.stateNode;break;default:throw Error(a(314))}v!==null&&v.delete(l),Bg(o,d)}var zg;zg=function(o,l,d){if(o!==null)if(o.memoizedProps!==l.pendingProps||wt.current)vi=!0;else{if(!(o.lanes&d)&&!(l.flags&128))return vi=!1,Kx(o,l,d);vi=!!(o.flags&131072)}else vi=!1,ln&&l.flags&1048576&&Tm(l,Wl,l.index);switch(l.lanes=0,l.tag){case 2:var v=l.type;o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps;var S=Qt(l,Ve.current);ro(l,d),S=hf(null,l,v,o,S,d);var b=ff();return l.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(l.tag=1,l.memoizedState=null,l.updateQueue=null,nn(v)?(b=!0,Nt(l)):b=!1,l.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Kh(l),S.updater=Vl,l.stateNode=S,S._reactInternals=l,$h(l,v,o,d),l=yf(null,l,v,!0,b,d)):(l.tag=0,ln&&b&&ef(l),Zn(null,l,S,d),l=l.child),l;case 16:v=l.elementType;e:{switch(o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps,S=v._init,v=S(v._payload),l.type=v,S=l.tag=fM(v),o=Fi(v,o),S){case 0:l=_f(null,l,v,o,d);break e;case 1:l=cg(null,l,v,o,d);break e;case 11:l=rg(null,l,v,o,d);break e;case 14:l=sg(null,l,v,Fi(v.type,o),d);break e}throw Error(a(306,v,""))}return l;case 0:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Fi(v,S),_f(o,l,v,S,d);case 1:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Fi(v,S),cg(o,l,v,S,d);case 3:e:{if(ug(l),o===null)throw Error(a(387));v=l.pendingProps,b=l.memoizedState,S=b.element,_m(o,l),Hl(l,v,null,d);var V=l.memoizedState;if(v=V.element,Ie&&b.isDehydrated)if(b={element:v,isDehydrated:!1,cache:V.cache,transitions:V.transitions},l.updateQueue.baseState=b,l.memoizedState=b,l.flags&256){S=Error(a(423)),l=hg(o,l,v,d,S);break e}else if(v!==S){S=Error(a(424)),l=hg(o,l,v,d,S);break e}else for(Ie&&(gi=os(l.stateNode.containerInfo),mi=l,ln=!0,Oi=null,ia=!1),d=Pm(l,null,v,d),l.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(ao(),v===S){l=_r(o,l,d);break e}Zn(o,l,v,d)}l=l.child}return l;case 5:return Lm(l),o===null&&rf(l),v=l.type,S=l.pendingProps,b=o!==null?o.memoizedProps:null,V=S.children,be(v,S)?V=null:b!==null&&be(v,b)&&(l.flags|=32),lg(o,l),Zn(o,l,V,d),l.child;case 6:return o===null&&rf(l),null;case 13:return fg(o,l,d);case 4:return of(l,l.stateNode.containerInfo),v=l.pendingProps,o===null?l.child=lo(l,null,v,d):Zn(o,l,v,d),l.child;case 11:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Fi(v,S),rg(o,l,v,S,d);case 7:return Zn(o,l,l.pendingProps,d),l.child;case 8:return Zn(o,l,l.pendingProps.children,d),l.child;case 12:return Zn(o,l,l.pendingProps.children,d),l.child;case 10:e:{if(v=l.type._context,S=l.pendingProps,b=l.memoizedProps,V=S.value,vm(l,v,V),b!==null)if(ji(b.value,V)){if(b.children===S.children&&!wt.current){l=_r(o,l,d);break e}}else for(b=l.child,b!==null&&(b.return=l);b!==null;){var ne=b.dependencies;if(ne!==null){V=b.child;for(var _e=ne.firstContext;_e!==null;){if(_e.context===v){if(b.tag===1){_e=pr(-1,d&-d),_e.tag=2;var Be=b.updateQueue;if(Be!==null){Be=Be.shared;var at=Be.pending;at===null?_e.next=_e:(_e.next=at.next,at.next=_e),Be.pending=_e}}b.lanes|=d,_e=b.alternate,_e!==null&&(_e.lanes|=d),jh(b.return,d,l),ne.lanes|=d;break}_e=_e.next}}else if(b.tag===10)V=b.type===l.type?null:b.child;else if(b.tag===18){if(V=b.return,V===null)throw Error(a(341));V.lanes|=d,ne=V.alternate,ne!==null&&(ne.lanes|=d),jh(V,d,l),V=b.sibling}else V=b.child;if(V!==null)V.return=b;else for(V=b;V!==null;){if(V===l){V=null;break}if(b=V.sibling,b!==null){b.return=V.return,V=b;break}V=V.return}b=V}Zn(o,l,S.children,d),l=l.child}return l;case 9:return S=l.type,v=l.pendingProps.children,ro(l,d),S=bi(S),v=v(S),l.flags|=1,Zn(o,l,v,d),l.child;case 14:return v=l.type,S=Fi(v,l.pendingProps),S=Fi(v.type,S),sg(o,l,v,S,d);case 15:return og(o,l,l.type,l.pendingProps,d);case 17:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:Fi(v,S),o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),l.tag=1,nn(v)?(o=!0,Nt(l)):o=!1,ro(l,d),wm(l,v,S),$h(l,v,S,d),yf(null,l,v,!0,o,d);case 19:return gg(o,l,d);case 22:return ag(o,l,d)}throw Error(a(156,l.tag))};function kg(o,l){return Gh(o,l)}function hM(o,l,d,v){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=l,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=v,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Li(o,l,d,v){return new hM(o,l,d,v)}function Hf(o){return o=o.prototype,!(!o||!o.isReactComponent)}function fM(o){if(typeof o=="function")return Hf(o)?1:0;if(o!=null){if(o=o.$$typeof,o===M)return 11;if(o===w)return 14}return 2}function kr(o,l){var d=o.alternate;return d===null?(d=Li(o.tag,l,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=l,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,l=o.dependencies,d.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Sc(o,l,d,v,S,b){var V=2;if(v=o,typeof o=="function")Hf(o)&&(V=1);else if(typeof o=="string")V=5;else e:switch(o){case f:return ms(d.children,S,b,l);case p:V=8,S|=8;break;case m:return o=Li(12,d,l,S|2),o.elementType=m,o.lanes=b,o;case x:return o=Li(13,d,l,S),o.elementType=x,o.lanes=b,o;case _:return o=Li(19,d,l,S),o.elementType=_,o.lanes=b,o;case T:return wc(d,S,b,l);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case g:V=10;break e;case y:V=9;break e;case M:V=11;break e;case w:V=14;break e;case E:V=16,v=null;break e}throw Error(a(130,o==null?o:typeof o,""))}return l=Li(V,d,l,S),l.elementType=o,l.type=v,l.lanes=b,l}function ms(o,l,d,v){return o=Li(7,o,v,l),o.lanes=d,o}function wc(o,l,d,v){return o=Li(22,o,v,l),o.elementType=T,o.lanes=d,o.stateNode={},o}function Vf(o,l,d){return o=Li(6,o,null,l),o.lanes=d,o}function Gf(o,l,d){return l=Li(4,o.children!==null?o.children:[],o.key,l),l.lanes=d,l.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},l}function dM(o,l,d,v,S){this.tag=l,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=yt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Hh(0),this.expirationTimes=Hh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Hh(0),this.identifierPrefix=v,this.onRecoverableError=S,Ie&&(this.mutableSourceEagerHydrationData=null)}function Hg(o,l,d,v,S,b,V,ne,_e){return o=new dM(o,l,d,ne,_e),l===1?(l=1,b===!0&&(l|=8)):l=0,b=Li(3,null,null,l),o.current=b,b.stateNode=o,b.memoizedState={element:v,isDehydrated:d,cache:null,transitions:null},Kh(b),o}function Vg(o){if(!o)return st;o=o._reactInternals;e:{if(R(o)!==o||o.tag!==1)throw Error(a(170));var l=o;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(nn(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(l!==null);throw Error(a(171))}if(o.tag===1){var d=o.type;if(nn(d))return Tt(o,d,l)}return l}function Gg(o){var l=o._reactInternals;if(l===void 0)throw typeof o.render=="function"?Error(a(188)):(o=Object.keys(o).join(","),Error(a(268,o)));return o=K(l),o===null?null:o.stateNode}function Wg(o,l){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<l?d:l}}function Wf(o,l){Wg(o,l),(o=o.alternate)&&Wg(o,l)}function pM(o){return o=K(o),o===null?null:o.stateNode}function mM(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var l=Jn();Pi(o,134217728,l),Wf(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var l=Jn(),d=Br(o);Pi(o,d,l),Wf(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var l=o.stateNode;if(l.current.memoizedState.isDehydrated){var d=ta(l.pendingLanes);d!==0&&(Vh(l,d|1),ai(l,In()),!(Ot&6)&&(mo(),Ki()))}break;case 13:var v=Jn();Lg(function(){return Pi(o,1,v)}),Wf(o,1)}},t.batchedUpdates=function(o,l){var d=Ot;Ot|=1;try{return o(l)}finally{Ot=d,Ot===0&&(mo(),Fl&&Ki())}},t.createComponentSelector=function(o){return{$$typeof:lc,value:o}},t.createContainer=function(o,l,d,v,S,b,V){return Hg(o,l,!1,null,d,v,S,b,V)},t.createHasPseudoClassSelector=function(o){return{$$typeof:cc,value:o}},t.createHydrationContainer=function(o,l,d,v,S,b,V,ne,_e){return o=Hg(d,v,!0,o,S,b,V,ne,_e),o.context=Vg(null),d=o.current,v=Jn(),S=Br(d),b=pr(v,S),b.callback=l??null,Nr(d,b),o.current.lanes=S,na(o,S,v),ai(o,v),o},t.createPortal=function(o,l,d){var v=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:v==null?null:""+v,children:o,containerInfo:l,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:uc,value:o}},t.createTestNameSelector=function(o){return{$$typeof:hc,value:o}},t.createTextSelector=function(o){return{$$typeof:fc,value:o}},t.deferredUpdates=function(o){var l=Yt,d=vn.transition;try{return vn.transition=null,Yt=16,o()}finally{Yt=l,vn.transition=d}},t.discreteUpdates=function(o,l,d,v,S){var b=Yt,V=vn.transition;try{return vn.transition=null,Yt=1,o(l,d,v,S)}finally{Yt=b,vn.transition=V,Ot===0&&mo()}},t.findAllNodes=If,t.findBoundingRects=function(o,l){if(!Xe)throw Error(a(363));l=If(o,l),o=[];for(var d=0;d<l.length;d++)o.push(D(l[d]));for(l=o.length-1;0<l;l--){d=o[l];for(var v=d.x,S=v+d.width,b=d.y,V=b+d.height,ne=l-1;0<=ne;ne--)if(l!==ne){var _e=o[ne],Be=_e.x,at=Be+_e.width,bt=_e.y,xt=bt+_e.height;if(v>=Be&&b>=bt&&S<=at&&V<=xt){o.splice(l,1);break}else if(v!==Be||d.width!==_e.width||xt<b||bt>V){if(!(b!==bt||d.height!==_e.height||at<v||Be>S)){Be>v&&(_e.width+=Be-v,_e.x=v),at<S&&(_e.width=S-Be),o.splice(l,1);break}}else{bt>b&&(_e.height+=bt-b,_e.y=b),xt<V&&(_e.height=V-bt),o.splice(l,1);break}}}return o},t.findHostInstance=Gg,t.findHostInstanceWithNoPortals=function(o){return o=O(o),o=o!==null?$(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Gg(o)},t.flushControlled=function(o){var l=Ot;Ot|=1;var d=vn.transition,v=Yt;try{vn.transition=null,Yt=1,o()}finally{Yt=v,vn.transition=d,Ot=l,Ot===0&&(mo(),Ki())}},t.flushPassiveEffects=ps,t.flushSync=Lg,t.focusWithin=function(o,l){if(!Xe)throw Error(a(363));for(o=Af(o),l=Rg(o,l),l=Array.from(l),o=0;o<l.length;){var d=l[o++];if(!ve(d)){if(d.tag===5&&ye(d.stateNode))return!0;for(d=d.child;d!==null;)l.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Yt},t.getFindAllNodesFailureDescription=function(o,l){if(!Xe)throw Error(a(363));var d=0,v=[];o=[Af(o),0];for(var S=0;S<o.length;){var b=o[S++],V=o[S++],ne=l[V];if((b.tag!==5||!ve(b))&&(Cf(b,ne)&&(v.push(Rf(ne)),V++,V>d&&(d=V)),V<l.length))for(b=b.child;b!==null;)o.push(b,V),b=b.sibling}if(d<l.length){for(o=[];d<l.length;d++)o.push(Rf(l[d]));return`findAllNodes was able to match part of the selector:
  `+(v.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return ee(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:pM,findFiberByHostInstance:o.findFiberByHostInstance||mM,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var l=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(l.isDisabled||!l.supportsFiber)o=!0;else{try{Nl=l.inject(o),Ji=l}catch{}o=!!l.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,l,d,v){if(!Xe)throw Error(a(363));o=If(o,l);var S=rt(o,d,v).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,l){var d=l._getVersion;d=d(l._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[l,d]:o.mutableSourceEagerHydrationData.push(l,d)},t.runWithPriority=function(o,l){var d=Yt;try{return Yt=o,l()}finally{Yt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,l,d,v){var S=l.current,b=Jn(),V=Br(S);return d=Vg(d),l.context===null?l.context=d:l.pendingContext=d,l=pr(b,V),l.payload={element:o},v=v===void 0?null:v,v!==null&&(l.callback=v),Nr(S,l),o=Pi(S,V,b),o!==null&&kl(o,S,V),V},t};jy.exports=CC;var RC=jy.exports;const IC=vM(RC);var Ky={exports:{}},Qy={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(z,te){var Q=z.length;z.push(te);e:for(;0<Q;){var fe=Q-1>>>1,xe=z[fe];if(0<i(xe,te))z[fe]=te,z[Q]=xe,Q=fe;else break e}}function t(z){return z.length===0?null:z[0]}function n(z){if(z.length===0)return null;var te=z[0],Q=z.pop();if(Q!==te){z[0]=Q;e:for(var fe=0,xe=z.length,ze=xe>>>1;fe<ze;){var ce=2*(fe+1)-1,be=z[ce],Ae=ce+1,Re=z[Ae];if(0>i(be,Q))Ae<xe&&0>i(Re,be)?(z[fe]=Re,z[Ae]=Q,fe=Ae):(z[fe]=be,z[ce]=Q,fe=ce);else if(Ae<xe&&0>i(Re,Q))z[fe]=Re,z[Ae]=Q,fe=Ae;else break e}}return te}function i(z,te){var Q=z.sortIndex-te.sortIndex;return Q!==0?Q:z.id-te.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();r.unstable_now=function(){return a.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(z){for(var te=t(h);te!==null;){if(te.callback===null)n(h);else if(te.startTime<=z)n(h),te.sortIndex=te.expirationTime,e(u,te);else break;te=t(h)}}function T(z){if(M=!1,E(z),!y)if(t(u)!==null)y=!0,ee(N);else{var te=t(h);te!==null&&Ee(T,te.startTime-z)}}function N(z,te){y=!1,M&&(M=!1,_(L),L=-1),g=!0;var Q=m;try{for(E(te),p=t(u);p!==null&&(!(p.expirationTime>te)||z&&!O());){var fe=p.callback;if(typeof fe=="function"){p.callback=null,m=p.priorityLevel;var xe=fe(p.expirationTime<=te);te=r.unstable_now(),typeof xe=="function"?p.callback=xe:p===t(u)&&n(u),E(te)}else n(u);p=t(u)}if(p!==null)var ze=!0;else{var ce=t(h);ce!==null&&Ee(T,ce.startTime-te),ze=!1}return ze}finally{p=null,m=Q,g=!1}}var P=!1,U=null,L=-1,R=5,A=-1;function O(){return!(r.unstable_now()-A<R)}function K(){if(U!==null){var z=r.unstable_now();A=z;var te=!0;try{te=U(!0,z)}finally{te?J():(P=!1,U=null)}}else P=!1}var J;if(typeof w=="function")J=function(){w(K)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,he=$.port2;$.port1.onmessage=K,J=function(){he.postMessage(null)}}else J=function(){x(K,0)};function ee(z){U=z,P||(P=!0,J())}function Ee(z,te){L=x(function(){z(r.unstable_now())},te)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(z){z.callback=null},r.unstable_continueExecution=function(){y||g||(y=!0,ee(N))},r.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<z?Math.floor(1e3/z):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(z){switch(m){case 1:case 2:case 3:var te=3;break;default:te=m}var Q=m;m=te;try{return z()}finally{m=Q}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(z,te){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var Q=m;m=z;try{return te()}finally{m=Q}},r.unstable_scheduleCallback=function(z,te,Q){var fe=r.unstable_now();switch(typeof Q=="object"&&Q!==null?(Q=Q.delay,Q=typeof Q=="number"&&0<Q?fe+Q:fe):Q=fe,z){case 1:var xe=-1;break;case 2:xe=250;break;case 5:xe=1073741823;break;case 4:xe=1e4;break;default:xe=5e3}return xe=Q+xe,z={id:f++,callback:te,priorityLevel:z,startTime:Q,expirationTime:xe,sortIndex:-1},Q>fe?(z.sortIndex=Q,e(h,z),t(u)===null&&z===t(h)&&(M?(_(L),L=-1):M=!0,Ee(T,Q-fe))):(z.sortIndex=xe,e(u,z),y||g||(y=!0,ee(N))),z},r.unstable_shouldYield=O,r.unstable_wrapCallback=function(z){var te=m;return function(){var Q=m;m=te;try{return z.apply(this,arguments)}finally{m=Q}}}})(Qy);Ky.exports=Qy;var C0=Ky.exports;const nm={},$y=r=>void Object.assign(nm,r);function PC(r,e){function t(f,{args:p=[],attach:m,...g},y){let M=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(g.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=g.object;x=No(_,{type:f,root:y,attach:m,primitive:!0})}else{const _=nm[M];if(!_)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=No(new _(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),M!=="inject"&&Od(x,g),x}function n(f,p){let m=!1;if(p){var g,y;(g=p.__r3f)!=null&&g.attach?Fd(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||No(p,{}),p.__r3f.parent=f,up(p),Fo(p)}}function i(f,p,m){let g=!1;if(p){var y,M;if((y=p.__r3f)!=null&&y.attach)Fd(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const x=f.children.filter(w=>w!==p),_=x.indexOf(m);f.children=[...x.slice(0,_),p,...x.slice(_)],g=!0}g||(M=f.__r3f)==null||M.objects.push(p),p.__r3f||No(p,{}),p.__r3f.parent=f,up(p),Fo(p)}}function s(f,p,m=!1){f&&[...f].forEach(g=>a(p,g,m))}function a(f,p,m){if(p){var g,y,M;if(p.__r3f&&(p.__r3f.parent=null),(g=f.__r3f)!=null&&g.objects&&(f.__r3f.objects=f.__r3f.objects.filter(T=>T!==p)),(y=p.__r3f)!=null&&y.attach)D0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&zC(Su(p),p)}const w=(M=p.__r3f)==null?void 0:M.primitive,E=!w&&(m===void 0?p.dispose!==null:m);if(!w){var _;s((_=p.__r3f)==null?void 0:_.objects,p,E),s(p.children,p,E)}if(delete p.__r3f,E&&p.dispose&&p.type!=="Scene"){const T=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?C0.unstable_scheduleCallback(C0.unstable_IdlePriority,T):T()}Fo(f)}}function c(f,p,m,g){var y;const M=(y=f.__r3f)==null?void 0:y.parent;if(!M)return;const x=t(p,m,f.__r3f.root);if(f.children){for(const _ of f.children)_.__r3f&&n(x,_);f.children=f.children.filter(_=>!_.__r3f)}f.__r3f.objects.forEach(_=>n(x,_)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||a(M,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(M,x),x.raycast&&x.__r3f.eventCount&&Su(x).getState().internal.interaction.push(x),[g,g.alternate].forEach(_=>{_!==null&&(_.stateNode=x,_.ref&&(typeof _.ref=="function"?_.ref(x):_.ref.current=x))})}const u=()=>{};return{reconciler:IC({createInstance:t,removeChild:a,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&a(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const g=f.getState().scene;g.__r3f&&i(g,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,g){var y;if(((y=f==null?void 0:f.__r3f)!=null?y:{}).primitive&&g.object&&g.object!==f)return[!0];{const{args:x=[],children:_,...w}=g,{args:E=[],children:T,...N}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((U,L)=>U!==E[L]))return[!0];const P=ox(f,w,N,!0);return P.changes.length?[!1,P]:null}},commitUpdate(f,[p,m],g,y,M,x){p?c(f,g,M,x):Od(f,m)},commitMount(f,p,m,g){var y;const M=(y=f.__r3f)!=null?y:{};f.raycast&&M.handlers&&M.eventCount&&Su(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>No(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:g}=(p=f.__r3f)!=null?p:{};m&&g&&D0(g,f,m),f.isObject3D&&(f.visible=!1),Fo(f)},unhideInstance(f,p){var m;const{attach:g,parent:y}=(m=f.__r3f)!=null?m:{};g&&y&&Fd(y,f,g),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),Fo(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():Vo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&sn.fun(performance.now)?performance.now:sn.fun(Date.now)?Date.now:()=>0,scheduleTimeout:sn.fun(setTimeout)?setTimeout:void 0,cancelTimeout:sn.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Od}}var R0,I0;const Nd=r=>"colorSpace"in r||"outputColorSpace"in r,ex=()=>{var r;return(r=nm.ColorManagement)!=null?r:null},tx=r=>r&&r.isOrthographicCamera,LC=r=>r&&r.hasOwnProperty("current"),Il=typeof window<"u"&&((R0=window.document)!=null&&R0.createElement||((I0=window.navigator)==null?void 0:I0.product)==="ReactNative")?De.useLayoutEffect:De.useEffect;function nx(r){const e=De.useRef(r);return Il(()=>void(e.current=r),[r]),e}function DC({set:r}){return Il(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class ix extends De.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}ix.getDerivedStateFromError=()=>({error:!0});const rx="__default",P0=new Map,UC=r=>r&&!!r.memoized&&!!r.changes;function sx(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const La=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Su(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const sn={obj:r=>r===Object(r)&&!sn.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(sn.str(r)||sn.num(r)||sn.boo(r))return r===e;const s=sn.obj(r);if(s&&n==="reference")return r===e;const a=sn.arr(r);if(a&&t==="reference")return r===e;if((a||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!sn.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(sn.und(c)){if(a&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function NC(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function FC(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function No(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function cp(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,a)=>s[a],r),{target:t,key:i}}else return{target:t,key:e}}const L0=/-\d+$/;function Fd(r,e,t){if(sn.str(t)){if(L0.test(t)){const s=t.replace(L0,""),{target:a,key:c}=cp(r,s);Array.isArray(a[c])||(a[c]=[])}const{target:n,key:i}=cp(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function D0(r,e,t){var n,i;if(sn.str(t)){const{target:s,key:a}=cp(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[a]:s[a]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function ox(r,{children:e,key:t,ref:n,...i},{children:s,key:a,ref:c,...u}={},h=!1){const f=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let M=0;M<y.length;M++)i.hasOwnProperty(y[M])||p.unshift([y[M],rx+"remove"])}p.forEach(([y,M])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||sn.equ(M,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,M,!0,[]]);let _=[];y.includes("-")&&(_=y.split("-")),m.push([y,M,!1,_]);for(const w in i){const E=i[w];w.startsWith(`${y}-`)&&m.push([w,E,!1,w.split("-")])}});const g={...i};return f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.args&&(g.args=f.memoizedProps.args),f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.attach&&(g.attach=f.memoizedProps.attach),{memoized:g,changes:m}}const OC=typeof process<"u"&&!1;function Od(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:a,changes:c}=UC(e)?e:ox(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=a);for(let m=0;m<c.length;m++){let[g,y,M,x]=c[m];if(Nd(r)){const T="srgb",N="srgb-linear";g==="encoding"?(g="colorSpace",y=y===3001?T:N):g==="outputEncoding"&&(g="outputColorSpace",y=y===3001?T:N)}let _=r,w=_[g];if(x.length&&(w=x.reduce((E,T)=>E[T],r),!(w&&w.set))){const[E,...T]=x.reverse();_=T.reverse().reduce((N,P)=>N[P],r),g=E}if(y===rx+"remove")if(_.constructor){let E=P0.get(_.constructor);E||(E=new _.constructor,P0.set(_.constructor,E)),y=E[g]}else y=0;if(M&&n)y?n.handlers[g]=y:delete n.handlers[g],n.eventCount=Object.keys(n.handlers).length;else if(w&&w.set&&(w.copy||w instanceof Gs)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&(OC?w.constructor.name===y.constructor.name:w.constructor===y.constructor))w.copy(y);else if(y!==void 0){var h;const E=(h=w)==null?void 0:h.isColor;!E&&w.setScalar?w.setScalar(y):w instanceof Gs&&y instanceof Gs?w.mask=y.mask:w.set(y),!ex()&&s&&!s.linear&&E&&w.convertSRGBToLinear()}}else{var f;if(_[g]=y,(f=_[g])!=null&&f.isTexture&&_[g].format===xn&&_[g].type===fi&&s){const E=_[g];Nd(E)&&Nd(s.gl)?E.colorSpace=s.gl.outputColorSpace:E.encoding=s.gl.outputEncoding}}Fo(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=Su(r).getState().internal,g=m.interaction.indexOf(r);g>-1&&m.interaction.splice(g,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&up(r),r}function Fo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function up(r){r.onUpdate==null||r.onUpdate(r)}function ax(r,e){r.manual||(tx(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function mu(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function BC(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return Vo.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Vo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Vo.ContinuousEventPriority;default:return Vo.DefaultEventPriority}}function lx(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function zC(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{lx(t.capturedMap,e,n,i)})}function kC(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],g=h?h(f.internal.interaction):f.internal.interaction;for(let _=0;_<g.length;_++){const w=La(g[_]);w&&(w.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(_){const w=La(_);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var E;w.events.compute==null||w.events.compute(u,w,(E=w.previousRoot)==null?void 0:E.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(_,!0):[]}let M=g.flatMap(y).sort((_,w)=>{const E=La(_.object),T=La(w.object);return!E||!T?_.distance-w.distance:T.events.priority-E.events.priority||_.distance-w.distance}).filter(_=>{const w=mu(_);return p.has(w)?!1:(p.add(w),!0)});f.events.filter&&(M=f.events.filter(M,f));for(const _ of M){let w=_.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({..._,eventObject:w}),w=w.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let _ of f.internal.capturedMap.get(u.pointerId).values())p.has(mu(_.intersection))||m.push(_.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const g={stopped:!1};for(const y of u){const M=La(y.object)||m,{raycaster:x,pointer:_,camera:w,internal:E}=M,T=new B(_.x,_.y,0).unproject(w),N=A=>{var O,K;return(O=(K=E.capturedMap.get(A))==null?void 0:K.has(y.eventObject))!=null?O:!1},P=A=>{const O={intersection:y,target:h.target};E.capturedMap.has(A)?E.capturedMap.get(A).set(y.eventObject,O):E.capturedMap.set(A,new Map([[y.eventObject,O]])),h.target.setPointerCapture(A)},U=A=>{const O=E.capturedMap.get(A);O&&lx(E.capturedMap,y.eventObject,O,A)};let L={};for(let A in h){let O=h[A];typeof O!="function"&&(L[A]=O)}let R={...y,...L,pointer:_,intersections:u,stopped:g.stopped,delta:f,unprojectedPoint:T,ray:x.ray,camera:w,stopPropagation(){const A="pointerId"in h&&E.capturedMap.get(h.pointerId);if((!A||A.has(y.eventObject))&&(R.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(O=>O.eventObject===y.eventObject))){const O=u.slice(0,u.indexOf(y));s([...O,y])}},target:{hasPointerCapture:N,setPointerCapture:P,releasePointerCapture:U},currentTarget:{hasPointerCapture:N,setPointerCapture:P,releasePointerCapture:U},nativeEvent:h};if(p(R),g.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,g=m==null?void 0:m.handlers;if(h.hovered.delete(mu(f)),m!=null&&m.eventCount){const y={...f,intersections:u};g.onPointerOut==null||g.onPointerOut(y),g.onPointerLeave==null||g.onPointerLeave(y)}}}function a(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const g=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,g?t:void 0),_=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=x.map(E=>E.eventObject)),y&&!x.length&&_<=2&&(a(f,m.interaction),p&&p(f)),g&&s(x);function w(E){const T=E.eventObject,N=T.__r3f,P=N==null?void 0:N.handlers;if(N!=null&&N.eventCount)if(g){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const U=mu(E),L=m.hovered.get(U);L?L.stopped&&E.stopPropagation():(m.hovered.set(U,E),P.onPointerOver==null||P.onPointerOver(E),P.onPointerEnter==null||P.onPointerEnter(E))}P.onPointerMove==null||P.onPointerMove(E)}else{const U=P[u];U?(!y||m.initialHits.includes(T))&&(a(f,m.interaction.filter(L=>!m.initialHits.includes(L))),U(E)):y&&m.initialHits.includes(T)&&a(f,m.interaction.filter(L=>!m.initialHits.includes(L)))}}i(x,f,_,w)}}return{handlePointer:c}}const HC=["set","get","setSize","setFrameloop","setDpr","events","invalidate","advance","size","viewport"],cx=r=>!!(r!=null&&r.render),im=De.createContext(null),VC=(r,e)=>{const t=qy((c,u)=>{const h=new B,f=new B,p=new B;function m(_=u().camera,w=f,E=u().size){const{width:T,height:N,top:P,left:U}=E,L=T/N;w.isVector3?p.copy(w):p.set(...w);const R=_.getWorldPosition(h).distanceTo(p);if(tx(_))return{width:T/_.zoom,height:N/_.zoom,top:P,left:U,factor:1,distance:R,aspect:L};{const A=_.fov*Math.PI/180,O=2*Math.tan(A/2)*R,K=O*(T/N);return{width:K,height:O,top:P,left:U,factor:T/K,distance:R,aspect:L}}}let g;const y=_=>c(w=>({performance:{...w.performance,current:_}})),M=new we;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>r(u(),_),advance:(_,w)=>e(_,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new jp,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();g&&clearTimeout(g),_.performance.current!==_.performance.min&&y(_.performance.min),g=setTimeout(()=>y(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(w=>({...w,events:{...w.events,..._}})),setSize:(_,w,E,T,N)=>{const P=u().camera,U={width:_,height:w,top:T||0,left:N||0,updateStyle:E};c(L=>({size:U,viewport:{...L.viewport,...m(P,f,U)}}))},setDpr:_=>c(w=>{const E=sx(_);return{viewport:{...w.viewport,dpr:E,initialDpr:w.viewport.initialDpr||E}}}),setFrameloop:(_="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,_!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:De.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,w,E)=>{const T=u().internal;return T.priority=T.priority+(w>0?1:0),T.subscribers.push({ref:_,priority:w,store:E}),T.subscribers=T.subscribers.sort((N,P)=>N.priority-P.priority),()=>{const N=u().internal;N!=null&&N.subscribers&&(N.priority=N.priority-(w>0?1:0),N.subscribers=N.subscribers.filter(P=>P.ref!==_))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,a=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,ax(c,u),f.setPixelRatio(h.dpr);const g=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,g)}c!==a&&(a=c,p(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let gu,GC=new Set,WC=new Set,XC=new Set;function Bd(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function Da(r,e){switch(r){case"before":return Bd(GC,e);case"after":return Bd(WC,e);case"tail":return Bd(XC,e)}}let zd,kd;function Hd(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),zd=e.internal.subscribers,gu=0;gu<zd.length;gu++)kd=zd[gu],kd.ref.current(kd.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function YC(r){let e=!1,t=!1,n,i,s;function a(h){i=requestAnimationFrame(a),e=!0,n=0,Da("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=Hd(h,s))}if(t=!1,Da("after",h),n===0)return Da("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(a)))}function u(h,f=!0,p,m){if(f&&Da("before",h),p)Hd(h,p,m);else for(const g of r.values())Hd(h,g.store.getState());f&&Da("after",h)}return{loop:a,invalidate:c,advance:u}}function rm(){const r=De.useContext(im);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Mi(r=t=>t,e){return rm()(r,e)}function sm(r,e=0){const t=rm(),n=t.getState().internal.subscribe,i=nx(r);return Il(()=>n(i,e,t),[e,n,t]),null}const U0=new WeakMap;function ux(r,e){return function(t,...n){let i=U0.get(t);return i||(i=new t,U0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((a,c)=>i.load(s,u=>{u.scene&&Object.assign(u,NC(u.scene)),a(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`))))))}}function jo(r,e,t,n){const i=Array.isArray(e)?e:[e],s=wC(ux(t,n),[r,...i],{equal:sn.equ});return Array.isArray(e)?s:s[0]}jo.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return EC(ux(t),[r,...n])};jo.clear=function(r,e){const t=Array.isArray(e)?e:[e];return TC([r,...t])};const Ko=new Map,{invalidate:N0,advance:F0}=YC(Ko),{reconciler:fl,applyProps:jr}=PC(Ko,BC),Uo={objects:"shallow",strict:!1},qC=(r,e)=>{const t=typeof r=="function"?r(e):r;return cx(t)?t:new Dp({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function ZC(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:a,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:a,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:a}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:a,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function JC(r){const e=Ko.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||VC(N0,F0),a=t||fl.createContainer(s,Vo.ConcurrentRoot,null,!1,null,"",i,null);e||Ko.set(r,{fiber:a,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:g,events:y,onCreated:M,shadows:x=!1,linear:_=!1,flat:w=!1,legacy:E=!1,orthographic:T=!1,frameloop:N="always",dpr:P=[1,2],performance:U,raycaster:L,camera:R,onPointerMissed:A}=f,O=s.getState(),K=O.gl;O.gl||O.set({gl:K=qC(p,r)});let J=O.raycaster;J||O.set({raycaster:J=new em});const{params:$,...he}=L||{};if(sn.equ(he,J,Uo)||jr(J,{...he}),sn.equ($,J.params,Uo)||jr(J,{params:{...J.params,...$}}),!O.camera||O.camera===h&&!sn.equ(h,R,Uo)){h=R;const Q=R instanceof xl,fe=Q?R:T?new Ir(0,0,0,0,.1,1e3):new yn(75,0,.1,1e3);Q||(fe.position.z=5,R&&(jr(fe,R),("aspect"in R||"left"in R||"right"in R||"bottom"in R||"top"in R)&&(fe.manual=!0,fe.updateProjectionMatrix())),!O.camera&&!(R!=null&&R.rotation)&&fe.lookAt(0,0,0)),O.set({camera:fe}),J.camera=fe}if(!O.scene){let Q;g!=null&&g.isScene?Q=g:(Q=new wl,g&&jr(Q,g)),O.set({scene:No(Q)})}if(!O.xr){var ee;const Q=(ze,ce)=>{const be=s.getState();be.frameloop!=="never"&&F0(ze,!0,be,ce)},fe=()=>{const ze=s.getState();ze.gl.xr.enabled=ze.gl.xr.isPresenting,ze.gl.xr.setAnimationLoop(ze.gl.xr.isPresenting?Q:null),ze.gl.xr.isPresenting||N0(ze)},xe={connect(){const ze=s.getState().gl;ze.xr.addEventListener("sessionstart",fe),ze.xr.addEventListener("sessionend",fe)},disconnect(){const ze=s.getState().gl;ze.xr.removeEventListener("sessionstart",fe),ze.xr.removeEventListener("sessionend",fe)}};typeof((ee=K.xr)==null?void 0:ee.addEventListener)=="function"&&xe.connect(),O.set({xr:xe})}if(K.shadowMap){const Q=K.shadowMap.enabled,fe=K.shadowMap.type;if(K.shadowMap.enabled=!!x,sn.boo(x))K.shadowMap.type=za;else if(sn.str(x)){var Ee;const xe={basic:J0,percentage:ch,soft:za,variance:Vi};K.shadowMap.type=(Ee=xe[x])!=null?Ee:za}else sn.obj(x)&&Object.assign(K.shadowMap,x);(Q!==K.shadowMap.enabled||fe!==K.shadowMap.type)&&(K.shadowMap.needsUpdate=!0)}const z=ex();z&&("enabled"in z?z.enabled=!E:"legacyMode"in z&&(z.legacyMode=E)),u||jr(K,{outputEncoding:_?3e3:3001,toneMapping:w?sr:dp}),O.legacy!==E&&O.set(()=>({legacy:E})),O.linear!==_&&O.set(()=>({linear:_})),O.flat!==w&&O.set(()=>({flat:w})),p&&!sn.fun(p)&&!cx(p)&&!sn.equ(p,K,Uo)&&jr(K,p),y&&!O.events.handlers&&O.set({events:y(s)});const te=ZC(r,m);return sn.equ(te,O.size,Uo)||O.setSize(te.width,te.height,te.updateStyle,te.top,te.left),P&&O.viewport.dpr!==sx(P)&&O.setDpr(P),O.frameloop!==N&&O.setFrameloop(N),O.onPointerMissed||O.set({onPointerMissed:A}),U&&!sn.equ(U,O.performance,Uo)&&O.set(Q=>({performance:{...Q.performance,...U}})),c=M,u=!0,this},render(f){return u||this.configure(),fl.updateContainer(Qn.jsx(jC,{store:s,children:f,onCreated:c,rootElement:r}),a,null,()=>{}),s},unmount(){hx(r)}}}function jC({store:r,children:e,onCreated:t,rootElement:n}){return Il(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Qn.jsx(im.Provider,{value:r,children:e})}function hx(r,e){const t=Ko.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),fl.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,a,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(a=s.renderLists)==null||a.dispose==null||a.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),FC(i),Ko.delete(r)}catch{}},500)})}}function KC(r,e,t){return Qn.jsx(QC,{children:r,container:e,state:t},e.uuid)}function QC({state:r={},children:e,container:t}){const{events:n,size:i,...s}=r,a=rm(),[c]=De.useState(()=>new em),[u]=De.useState(()=>new we),h=De.useCallback((p,m)=>{const g={...p};Object.keys(p).forEach(M=>{(HC.includes(M)||p[M]!==m[M]&&m[M])&&delete g[M]});let y;if(m&&i){const M=m.camera;y=p.viewport.getCurrentViewport(M,new B,i),M!==p.camera&&ax(M,i)}return{...g,scene:t,raycaster:c,pointer:u,mouse:u,previousRoot:a,events:{...p.events,...m==null?void 0:m.events,...n},size:{...p.size,...i},viewport:{...p.viewport,...y},...s}},[r]),[f]=De.useState(()=>{const p=a.getState();return qy((g,y)=>({...p,scene:t,raycaster:c,pointer:u,mouse:u,previousRoot:a,events:{...p.events,...n},size:{...p.size,...i},...s,set:g,get:y,setEvents:M=>g(x=>({...x,events:{...x.events,...M}}))}))});return De.useEffect(()=>{const p=a.subscribe(m=>f.setState(g=>h(m,g)));return()=>{p()}},[h]),De.useEffect(()=>{f.setState(p=>h(a.getState(),p))},[h]),De.useEffect(()=>()=>{f.destroy()},[]),Qn.jsx(Qn.Fragment,{children:fl.createPortal(Qn.jsx(im.Provider,{value:f,children:e}),f,null)})}fl.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:De.version});const Vd={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function $C(r){const{handlePointer:e}=kC(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Vd).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(a=>({events:{...a.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([a,c])=>{const[u,h]=Vd[a];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,a])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Vd[s];n.connected.removeEventListener(c,a)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function O0(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function eR({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,a]=De.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=De.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,f=De.useRef(!1);De.useEffect(()=>(f.current=!0,()=>void(f.current=!1)));const[p,m,g]=De.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:w,top:E,width:T,height:N,bottom:P,right:U,x:L,y:R}=c.current.element.getBoundingClientRect(),A={left:w,top:E,width:T,height:N,bottom:P,right:U,x:L,y:R};c.current.element instanceof HTMLElement&&n&&(A.height=c.current.element.offsetHeight,A.width=c.current.element.offsetWidth),Object.freeze(A),f.current&&!rR(c.current.lastBounds,A)&&a(c.current.lastBounds=A)};return[_,h?O0(_,h):_,u?O0(_,u):_]},[a,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",g,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new i(g),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",g,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{g()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=_=>{!_||_===c.current.element||(y(),c.current.element=_,c.current.scrollContainers=fx(_),M())};return nR(g,!!e),tR(m),De.useEffect(()=>{y(),M()},[e,g,m]),De.useEffect(()=>y,[]),[x,s,p]}function tR(r){De.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function nR(r,e){De.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function fx(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...fx(r.parentElement)]}const iR=["x","y","top","bottom","left","right","width","height"],rR=(r,e)=>iR.every(t=>r[t]===e[t]);var sR=Object.defineProperty,oR=Object.defineProperties,aR=Object.getOwnPropertyDescriptors,B0=Object.getOwnPropertySymbols,lR=Object.prototype.hasOwnProperty,cR=Object.prototype.propertyIsEnumerable,z0=(r,e,t)=>e in r?sR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,k0=(r,e)=>{for(var t in e||(e={}))lR.call(e,t)&&z0(r,t,e[t]);if(B0)for(var t of B0(e))cR.call(e,t)&&z0(r,t,e[t]);return r},uR=(r,e)=>oR(r,aR(e)),H0,V0;typeof window<"u"&&((H0=window.document)!=null&&H0.createElement||((V0=window.navigator)==null?void 0:V0.product)==="ReactNative")?De.useLayoutEffect:De.useEffect;function dx(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=dx(n,e,t);if(i)return i;n=n.sibling}}function px(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const G0=console.error;console.error=function(){const r=[...arguments].join("");if(r!=null&&r.startsWith("Warning:")&&r.includes("useContext")){console.error=G0;return}return G0.apply(this,arguments)};const om=px(De.createContext(null));class mx extends De.Component{render(){return De.createElement(om.Provider,{value:this._reactInternals},this.props.children)}}function hR(){const r=De.useContext(om);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=De.useId();return De.useMemo(()=>{for(const n of[r,r==null?void 0:r.alternate]){if(!n)continue;const i=dx(n,!1,s=>{let a=s.memoizedState;for(;a;){if(a.memoizedState===e)return!0;a=a.next}});if(i)return i}},[r,e])}function fR(){const r=hR(),[e]=De.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==om&&!e.has(i)&&e.set(i,De.useContext(px(i)))}t=t.return}return e}function dR(){const r=fR();return De.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>De.createElement(e,null,De.createElement(t.Provider,uR(k0({},n),{value:r.get(t)}))),e=>De.createElement(mx,k0({},e))),[r])}const pR=De.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:a=$C,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:M,performance:x,raycaster:_,camera:w,scene:E,onPointerMissed:T,onCreated:N,...P},U){De.useMemo(()=>$y(yC),[]);const L=dR(),[R,A]=eR({scroll:!0,debounce:{scroll:50,resize:0},...n}),O=De.useRef(null),K=De.useRef(null);De.useImperativeHandle(U,()=>O.current);const J=nx(T),[$,he]=De.useState(!1),[ee,Ee]=De.useState(!1);if($)throw $;if(ee)throw ee;const z=De.useRef(null);Il(()=>{const Q=O.current;A.width>0&&A.height>0&&Q&&(z.current||(z.current=JC(Q)),z.current.configure({gl:s,events:a,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:M,performance:x,raycaster:_,camera:w,scene:E,size:A,onPointerMissed:(...fe)=>J.current==null?void 0:J.current(...fe),onCreated:fe=>{fe.events.connect==null||fe.events.connect(c?LC(c)?c.current:c:K.current),u&&fe.setEvents({compute:(xe,ze)=>{const ce=xe[u+"X"],be=xe[u+"Y"];ze.pointer.set(ce/ze.size.width*2-1,-(be/ze.size.height)*2+1),ze.raycaster.setFromCamera(ze.pointer,ze.camera)}}),N==null||N(fe)}}),z.current.render(Qn.jsx(L,{children:Qn.jsx(ix,{set:Ee,children:Qn.jsx(De.Suspense,{fallback:Qn.jsx(DC,{set:he}),children:e??null})})})))}),De.useEffect(()=>{const Q=O.current;if(Q)return()=>hx(Q)},[]);const te=c?"none":"auto";return Qn.jsx("div",{ref:K,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:te,...i},...P,children:Qn.jsx("div",{ref:R,style:{width:"100%",height:"100%"},children:Qn.jsx("canvas",{ref:O,style:{display:"block"},children:t})})})}),sI=De.forwardRef(function(e,t){return Qn.jsx(mx,{children:Qn.jsx(pR,{...e,ref:t})})});function lh(){return lh=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},lh.apply(null,arguments)}const gx=parseInt(pl.replace(/\D+/g,""));var Ni=Uint8Array,Qr=Uint16Array,hp=Uint32Array,vx=new Ni([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),_x=new Ni([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),mR=new Ni([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),yx=function(r,e){for(var t=new Qr(31),n=0;n<31;++n)t[n]=e+=1<<r[n-1];for(var i=new hp(t[30]),n=1;n<30;++n)for(var s=t[n];s<t[n+1];++s)i[s]=s-t[n]<<5|n;return[t,i]},xx=yx(vx,2),Mx=xx[0],gR=xx[1];Mx[28]=258,gR[258]=28;var vR=yx(_x,0),_R=vR[0],fp=new Qr(32768);for(var on=0;on<32768;++on){var Jr=(on&43690)>>>1|(on&21845)<<1;Jr=(Jr&52428)>>>2|(Jr&13107)<<2,Jr=(Jr&61680)>>>4|(Jr&3855)<<4,fp[on]=((Jr&65280)>>>8|(Jr&255)<<8)>>>1}var Ja=function(r,e,t){for(var n=r.length,i=0,s=new Qr(e);i<n;++i)++s[r[i]-1];var a=new Qr(e);for(i=0;i<e;++i)a[i]=a[i-1]+s[i-1]<<1;var c;if(t){c=new Qr(1<<e);var u=15-e;for(i=0;i<n;++i)if(r[i])for(var h=i<<4|r[i],f=e-r[i],p=a[r[i]-1]++<<f,m=p|(1<<f)-1;p<=m;++p)c[fp[p]>>>u]=h}else for(c=new Qr(n),i=0;i<n;++i)r[i]&&(c[i]=fp[a[r[i]-1]++]>>>15-r[i]);return c},Pl=new Ni(288);for(var on=0;on<144;++on)Pl[on]=8;for(var on=144;on<256;++on)Pl[on]=9;for(var on=256;on<280;++on)Pl[on]=7;for(var on=280;on<288;++on)Pl[on]=8;var Sx=new Ni(32);for(var on=0;on<32;++on)Sx[on]=5;var yR=Ja(Pl,9,1),xR=Ja(Sx,5,1),Gd=function(r){for(var e=r[0],t=1;t<r.length;++t)r[t]>e&&(e=r[t]);return e},Hi=function(r,e,t){var n=e/8|0;return(r[n]|r[n+1]<<8)>>(e&7)&t},Wd=function(r,e){var t=e/8|0;return(r[t]|r[t+1]<<8|r[t+2]<<16)>>(e&7)},MR=function(r){return(r/8|0)+(r&7&&1)},SR=function(r,e,t){(t==null||t>r.length)&&(t=r.length);var n=new(r instanceof Qr?Qr:r instanceof hp?hp:Ni)(t-e);return n.set(r.subarray(e,t)),n},wR=function(r,e,t){var n=r.length;if(!n||t&&!t.l&&n<5)return e||new Ni(0);var i=!e||t,s=!t||t.i;t||(t={}),e||(e=new Ni(n*3));var a=function(Ae){var Re=e.length;if(Ae>Re){var it=new Ni(Math.max(Re*2,Ae));it.set(e),e=it}},c=t.f||0,u=t.p||0,h=t.b||0,f=t.l,p=t.d,m=t.m,g=t.n,y=n*8;do{if(!f){t.f=c=Hi(r,u,1);var M=Hi(r,u+1,3);if(u+=3,M)if(M==1)f=yR,p=xR,m=9,g=5;else if(M==2){var E=Hi(r,u,31)+257,T=Hi(r,u+10,15)+4,N=E+Hi(r,u+5,31)+1;u+=14;for(var P=new Ni(N),U=new Ni(19),L=0;L<T;++L)U[mR[L]]=Hi(r,u+L*3,7);u+=T*3;for(var R=Gd(U),A=(1<<R)-1,O=Ja(U,R,1),L=0;L<N;){var K=O[Hi(r,u,A)];u+=K&15;var x=K>>>4;if(x<16)P[L++]=x;else{var J=0,$=0;for(x==16?($=3+Hi(r,u,3),u+=2,J=P[L-1]):x==17?($=3+Hi(r,u,7),u+=3):x==18&&($=11+Hi(r,u,127),u+=7);$--;)P[L++]=J}}var he=P.subarray(0,E),ee=P.subarray(E);m=Gd(he),g=Gd(ee),f=Ja(he,m,1),p=Ja(ee,g,1)}else throw"invalid block type";else{var x=MR(u)+4,_=r[x-4]|r[x-3]<<8,w=x+_;if(w>n){if(s)throw"unexpected EOF";break}i&&a(h+_),e.set(r.subarray(x,w),h),t.b=h+=_,t.p=u=w*8;continue}if(u>y){if(s)throw"unexpected EOF";break}}i&&a(h+131072);for(var Ee=(1<<m)-1,z=(1<<g)-1,te=u;;te=u){var J=f[Wd(r,u)&Ee],Q=J>>>4;if(u+=J&15,u>y){if(s)throw"unexpected EOF";break}if(!J)throw"invalid length/literal";if(Q<256)e[h++]=Q;else if(Q==256){te=u,f=null;break}else{var fe=Q-254;if(Q>264){var L=Q-257,xe=vx[L];fe=Hi(r,u,(1<<xe)-1)+Mx[L],u+=xe}var ze=p[Wd(r,u)&z],ce=ze>>>4;if(!ze)throw"invalid distance";u+=ze&15;var ee=_R[ce];if(ce>3){var xe=_x[ce];ee+=Wd(r,u)&(1<<xe)-1,u+=xe}if(u>y){if(s)throw"unexpected EOF";break}i&&a(h+131072);for(var be=h+fe;h<be;h+=4)e[h]=e[h-ee],e[h+1]=e[h+1-ee],e[h+2]=e[h+2-ee],e[h+3]=e[h+3-ee];h=be}}t.l=f,t.p=te,t.b=h,f&&(c=1,t.m=m,t.d=p,t.n=g)}while(!c);return h==e.length?e:SR(e,0,h)},ER=new Ni(0),TR=function(r){if((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)throw"invalid zlib data";if(r[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function vu(r,e){return wR((TR(r),r.subarray(2,-4)),e)}var bR=typeof TextDecoder<"u"&&new TextDecoder,AR=0;try{bR.decode(ER,{stream:!0}),AR=1}catch{}const CR=r=>r&&r.isCubeTexture;class RR extends fn{constructor(e,t){var n,i;const s=CR(e),c=((i=s?(n=e.image[0])==null?void 0:n.width:e.image.width)!=null?i:1024)/4,u=Math.floor(Math.log2(c)),h=Math.pow(2,u),f=3*Math.max(h,16*7),p=4*h,m=[s?"#define ENVMAP_TYPE_CUBE":"",`#define CUBEUV_TEXEL_WIDTH ${1/f}`,`#define CUBEUV_TEXEL_HEIGHT ${1/p}`,`#define CUBEUV_MAX_MIP ${u}.0`],g=`
        varying vec3 vWorldPosition;
        void main() 
        {
            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );
            vWorldPosition = worldPosition.xyz;
            
            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }
        `,y=m.join(`
`)+`
        #define ENVMAP_TYPE_CUBE_UV
        varying vec3 vWorldPosition;
        uniform float radius;
        uniform float height;
        uniform float angle;
        #ifdef ENVMAP_TYPE_CUBE
            uniform samplerCube map;
        #else
            uniform sampler2D map;
        #endif
        // From: https://www.shadertoy.com/view/4tsBD7
        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) 
        {
            float d = dot ( rd, n );
            
            if( d > 0.0 ) { return 1e6; }
            
            vec3  o = ro - c;
            float t = - dot( n, o ) / d;
            vec3  q = o + rd * t;
            
            return ( dot( q, q ) < r * r ) ? t : 1e6;
        }
        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm
        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) 
        {
            vec3 oc = ro - ce;
            float b = dot( oc, rd );
            float c = dot( oc, oc ) - ra * ra;
            float h = b * b - c;
            
            if( h < 0.0 ) { return -1.0; }
            
            h = sqrt( h );
            
            return - b + h;
        }
        vec3 project() 
        {
            vec3 p = normalize( vWorldPosition );
            vec3 camPos = cameraPosition;
            camPos.y -= height;
            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );
            if( intersection > 0.0 ) {
                
                vec3 h = vec3( 0.0, - height, 0.0 );
                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );
                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;
            } else {
                p = vec3( 0.0, 1.0, 0.0 );
            }
            return p;
        }
        #include <common>
        #include <cube_uv_reflection_fragment>
        void main() 
        {
            vec3 projectedWorldPosition = project();
            
            #ifdef ENVMAP_TYPE_CUBE
                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;
            #else
                vec3 direction = normalize( projectedWorldPosition );
                vec2 uv = equirectUv( direction );
                vec3 outcolor = texture2D( map, uv ).rgb;
            #endif
            gl_FragColor = vec4( outcolor, 1.0 );
            #include <tonemapping_fragment>
            #include <${gx>=154?"colorspace_fragment":"encodings_fragment"}>
        }
        `,M={map:{value:e},height:{value:(t==null?void 0:t.height)||15},radius:{value:(t==null?void 0:t.radius)||100}},x=new Tl(1,16),_=new di({uniforms:M,fragmentShader:y,vertexShader:g,side:Wi});super(x,_)}set radius(e){this.material.uniforms.radius.value=e}get radius(){return this.material.uniforms.radius.value}set height(e){this.material.uniforms.height.value=e}get height(){return this.material.uniforms.height.value}}var IR=Object.defineProperty,PR=(r,e,t)=>e in r?IR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,LR=(r,e,t)=>(PR(r,e+"",t),t);class DR{constructor(){LR(this,"_listeners")}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}var UR=Object.defineProperty,NR=(r,e,t)=>e in r?UR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Mt=(r,e,t)=>(NR(r,typeof e!="symbol"?e+"":e,t),t);const _u=new js,W0=new Tr,FR=Math.cos(70*(Math.PI/180)),X0=(r,e)=>(r%e+e)%e;let OR=class extends DR{constructor(e,t){super(),Mt(this,"object"),Mt(this,"domElement"),Mt(this,"enabled",!0),Mt(this,"target",new B),Mt(this,"minDistance",0),Mt(this,"maxDistance",1/0),Mt(this,"minZoom",0),Mt(this,"maxZoom",1/0),Mt(this,"minPolarAngle",0),Mt(this,"maxPolarAngle",Math.PI),Mt(this,"minAzimuthAngle",-1/0),Mt(this,"maxAzimuthAngle",1/0),Mt(this,"enableDamping",!1),Mt(this,"dampingFactor",.05),Mt(this,"enableZoom",!0),Mt(this,"zoomSpeed",1),Mt(this,"enableRotate",!0),Mt(this,"rotateSpeed",1),Mt(this,"enablePan",!0),Mt(this,"panSpeed",1),Mt(this,"screenSpacePanning",!0),Mt(this,"keyPanSpeed",7),Mt(this,"zoomToCursor",!1),Mt(this,"autoRotate",!1),Mt(this,"autoRotateSpeed",2),Mt(this,"reverseOrbit",!1),Mt(this,"reverseHorizontalOrbit",!1),Mt(this,"reverseVerticalOrbit",!1),Mt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),Mt(this,"mouseButtons",{LEFT:Rs.ROTATE,MIDDLE:Rs.DOLLY,RIGHT:Rs.PAN}),Mt(this,"touches",{ONE:Is.ROTATE,TWO:Is.DOLLY_PAN}),Mt(this,"target0"),Mt(this,"position0"),Mt(this,"zoom0"),Mt(this,"_domElementKeyEvents",null),Mt(this,"getPolarAngle"),Mt(this,"getAzimuthalAngle"),Mt(this,"setPolarAngle"),Mt(this,"setAzimuthalAngle"),Mt(this,"getDistance"),Mt(this,"getZoomScale"),Mt(this,"listenToKeyEvents"),Mt(this,"stopListenToKeyEvents"),Mt(this,"saveState"),Mt(this,"reset"),Mt(this,"update"),Mt(this,"connect"),Mt(this,"dispose"),Mt(this,"dollyIn"),Mt(this,"dollyOut"),Mt(this,"getScale"),Mt(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>f.phi,this.getAzimuthalAngle=()=>f.theta,this.setPolarAngle=j=>{let me=X0(j,2*Math.PI),Fe=f.phi;Fe<0&&(Fe+=2*Math.PI),me<0&&(me+=2*Math.PI);let q=Math.abs(me-Fe);2*Math.PI-q<q&&(me<Fe?me+=2*Math.PI:Fe+=2*Math.PI),p.phi=me-Fe,n.update()},this.setAzimuthalAngle=j=>{let me=X0(j,2*Math.PI),Fe=f.theta;Fe<0&&(Fe+=2*Math.PI),me<0&&(me+=2*Math.PI);let q=Math.abs(me-Fe);2*Math.PI-q<q&&(me<Fe?me+=2*Math.PI:Fe+=2*Math.PI),p.theta=me-Fe,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=j=>{j.addEventListener("keydown",Ge),this._domElementKeyEvents=j},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",Ge),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const j=new B,me=new B(0,1,0),Fe=new Wn().setFromUnitVectors(e.up,me),q=Fe.clone().invert(),oe=new B,de=new Wn,Me=2*Math.PI;return function(){const We=n.object.position;Fe.setFromUnitVectors(e.up,me),q.copy(Fe).invert(),j.copy(We).sub(n.target),j.applyQuaternion(Fe),f.setFromVector3(j),n.autoRotate&&u===c.NONE&&$(K()),n.enableDamping?(f.theta+=p.theta*n.dampingFactor,f.phi+=p.phi*n.dampingFactor):(f.theta+=p.theta,f.phi+=p.phi);let vt=n.minAzimuthAngle,kt=n.maxAzimuthAngle;isFinite(vt)&&isFinite(kt)&&(vt<-Math.PI?vt+=Me:vt>Math.PI&&(vt-=Me),kt<-Math.PI?kt+=Me:kt>Math.PI&&(kt-=Me),vt<=kt?f.theta=Math.max(vt,Math.min(kt,f.theta)):f.theta=f.theta>(vt+kt)/2?Math.max(vt,f.theta):Math.min(kt,f.theta)),f.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,f.phi)),f.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(g,n.dampingFactor):n.target.add(g),n.zoomToCursor&&R||n.object.isOrthographicCamera?f.radius=ze(f.radius):f.radius=ze(f.radius*m),j.setFromSpherical(f),j.applyQuaternion(q),We.copy(n.target).add(j),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,g.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),g.set(0,0,0));let tn=!1;if(n.zoomToCursor&&R){let Ut=null;if(n.object instanceof yn&&n.object.isPerspectiveCamera){const dn=j.length();Ut=ze(dn*m);const Cn=dn-Ut;n.object.position.addScaledVector(U,Cn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const dn=new B(L.x,L.y,0);dn.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix(),tn=!0;const Cn=new B(L.x,L.y,0);Cn.unproject(n.object),n.object.position.sub(Cn).add(dn),n.object.updateMatrixWorld(),Ut=j.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Ut!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Ut).add(n.object.position):(_u.origin.copy(n.object.position),_u.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(_u.direction))<FR?e.lookAt(n.target):(W0.setFromNormalAndCoplanarPoint(n.object.up,n.target),_u.intersectPlane(W0,n.target))))}else n.object instanceof Ir&&n.object.isOrthographicCamera&&(tn=m!==1,tn&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix()));return m=1,R=!1,tn||oe.distanceToSquared(n.object.position)>h||8*(1-de.dot(n.object.quaternion))>h?(n.dispatchEvent(i),oe.copy(n.object.position),de.copy(n.object.quaternion),tn=!1,!0):!1}})(),this.connect=j=>{n.domElement=j,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Ne),n.domElement.addEventListener("pointerdown",D),n.domElement.addEventListener("pointercancel",ve),n.domElement.addEventListener("wheel",rt)},this.dispose=()=>{var j,me,Fe,q,oe,de;n.domElement&&(n.domElement.style.touchAction="auto"),(j=n.domElement)==null||j.removeEventListener("contextmenu",Ne),(me=n.domElement)==null||me.removeEventListener("pointerdown",D),(Fe=n.domElement)==null||Fe.removeEventListener("pointercancel",ve),(q=n.domElement)==null||q.removeEventListener("wheel",rt),(oe=n.domElement)==null||oe.ownerDocument.removeEventListener("pointermove",se),(de=n.domElement)==null||de.ownerDocument.removeEventListener("pointerup",ve),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Ge)};const n=this,i={type:"change"},s={type:"start"},a={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,f=new lp,p=new lp;let m=1;const g=new B,y=new we,M=new we,x=new we,_=new we,w=new we,E=new we,T=new we,N=new we,P=new we,U=new B,L=new we;let R=!1;const A=[],O={};function K(){return 2*Math.PI/60/60*n.autoRotateSpeed}function J(){return Math.pow(.95,n.zoomSpeed)}function $(j){n.reverseOrbit||n.reverseHorizontalOrbit?p.theta+=j:p.theta-=j}function he(j){n.reverseOrbit||n.reverseVerticalOrbit?p.phi+=j:p.phi-=j}const ee=(()=>{const j=new B;return function(Fe,q){j.setFromMatrixColumn(q,0),j.multiplyScalar(-Fe),g.add(j)}})(),Ee=(()=>{const j=new B;return function(Fe,q){n.screenSpacePanning===!0?j.setFromMatrixColumn(q,1):(j.setFromMatrixColumn(q,0),j.crossVectors(n.object.up,j)),j.multiplyScalar(Fe),g.add(j)}})(),z=(()=>{const j=new B;return function(Fe,q){const oe=n.domElement;if(oe&&n.object instanceof yn&&n.object.isPerspectiveCamera){const de=n.object.position;j.copy(de).sub(n.target);let Me=j.length();Me*=Math.tan(n.object.fov/2*Math.PI/180),ee(2*Fe*Me/oe.clientHeight,n.object.matrix),Ee(2*q*Me/oe.clientHeight,n.object.matrix)}else oe&&n.object instanceof Ir&&n.object.isOrthographicCamera?(ee(Fe*(n.object.right-n.object.left)/n.object.zoom/oe.clientWidth,n.object.matrix),Ee(q*(n.object.top-n.object.bottom)/n.object.zoom/oe.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function te(j){n.object instanceof yn&&n.object.isPerspectiveCamera||n.object instanceof Ir&&n.object.isOrthographicCamera?m=j:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Q(j){te(m/j)}function fe(j){te(m*j)}function xe(j){if(!n.zoomToCursor||!n.domElement)return;R=!0;const me=n.domElement.getBoundingClientRect(),Fe=j.clientX-me.left,q=j.clientY-me.top,oe=me.width,de=me.height;L.x=Fe/oe*2-1,L.y=-(q/de)*2+1,U.set(L.x,L.y,1).unproject(n.object).sub(n.object.position).normalize()}function ze(j){return Math.max(n.minDistance,Math.min(n.maxDistance,j))}function ce(j){y.set(j.clientX,j.clientY)}function be(j){xe(j),T.set(j.clientX,j.clientY)}function Ae(j){_.set(j.clientX,j.clientY)}function Re(j){M.set(j.clientX,j.clientY),x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const me=n.domElement;me&&($(2*Math.PI*x.x/me.clientHeight),he(2*Math.PI*x.y/me.clientHeight)),y.copy(M),n.update()}function it(j){N.set(j.clientX,j.clientY),P.subVectors(N,T),P.y>0?Q(J()):P.y<0&&fe(J()),T.copy(N),n.update()}function yt(j){w.set(j.clientX,j.clientY),E.subVectors(w,_).multiplyScalar(n.panSpeed),z(E.x,E.y),_.copy(w),n.update()}function gt(j){xe(j),j.deltaY<0?fe(J()):j.deltaY>0&&Q(J()),n.update()}function St(j){let me=!1;switch(j.code){case n.keys.UP:z(0,n.keyPanSpeed),me=!0;break;case n.keys.BOTTOM:z(0,-n.keyPanSpeed),me=!0;break;case n.keys.LEFT:z(n.keyPanSpeed,0),me=!0;break;case n.keys.RIGHT:z(-n.keyPanSpeed,0),me=!0;break}me&&(j.preventDefault(),n.update())}function Te(){if(A.length==1)y.set(A[0].pageX,A[0].pageY);else{const j=.5*(A[0].pageX+A[1].pageX),me=.5*(A[0].pageY+A[1].pageY);y.set(j,me)}}function Ie(){if(A.length==1)_.set(A[0].pageX,A[0].pageY);else{const j=.5*(A[0].pageX+A[1].pageX),me=.5*(A[0].pageY+A[1].pageY);_.set(j,me)}}function W(){const j=A[0].pageX-A[1].pageX,me=A[0].pageY-A[1].pageY,Fe=Math.sqrt(j*j+me*me);T.set(0,Fe)}function lt(){n.enableZoom&&W(),n.enablePan&&Ie()}function Ue(){n.enableZoom&&W(),n.enableRotate&&Te()}function je(j){if(A.length==1)M.set(j.pageX,j.pageY);else{const Fe=Ke(j),q=.5*(j.pageX+Fe.x),oe=.5*(j.pageY+Fe.y);M.set(q,oe)}x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const me=n.domElement;me&&($(2*Math.PI*x.x/me.clientHeight),he(2*Math.PI*x.y/me.clientHeight)),y.copy(M)}function ke(j){if(A.length==1)w.set(j.pageX,j.pageY);else{const me=Ke(j),Fe=.5*(j.pageX+me.x),q=.5*(j.pageY+me.y);w.set(Fe,q)}E.subVectors(w,_).multiplyScalar(n.panSpeed),z(E.x,E.y),_.copy(w)}function _t(j){const me=Ke(j),Fe=j.pageX-me.x,q=j.pageY-me.y,oe=Math.sqrt(Fe*Fe+q*q);N.set(0,oe),P.set(0,Math.pow(N.y/T.y,n.zoomSpeed)),Q(P.y),T.copy(N)}function Xe(j){n.enableZoom&&_t(j),n.enablePan&&ke(j)}function k(j){n.enableZoom&&_t(j),n.enableRotate&&je(j)}function D(j){var me,Fe;n.enabled!==!1&&(A.length===0&&((me=n.domElement)==null||me.ownerDocument.addEventListener("pointermove",se),(Fe=n.domElement)==null||Fe.ownerDocument.addEventListener("pointerup",ve)),et(j),j.pointerType==="touch"?qe(j):Ce(j))}function se(j){n.enabled!==!1&&(j.pointerType==="touch"?Rt(j):ye(j))}function ve(j){var me,Fe,q;ht(j),A.length===0&&((me=n.domElement)==null||me.releasePointerCapture(j.pointerId),(Fe=n.domElement)==null||Fe.ownerDocument.removeEventListener("pointermove",se),(q=n.domElement)==null||q.ownerDocument.removeEventListener("pointerup",ve)),n.dispatchEvent(a),u=c.NONE}function Ce(j){let me;switch(j.button){case 0:me=n.mouseButtons.LEFT;break;case 1:me=n.mouseButtons.MIDDLE;break;case 2:me=n.mouseButtons.RIGHT;break;default:me=-1}switch(me){case Rs.DOLLY:if(n.enableZoom===!1)return;be(j),u=c.DOLLY;break;case Rs.ROTATE:if(j.ctrlKey||j.metaKey||j.shiftKey){if(n.enablePan===!1)return;Ae(j),u=c.PAN}else{if(n.enableRotate===!1)return;ce(j),u=c.ROTATE}break;case Rs.PAN:if(j.ctrlKey||j.metaKey||j.shiftKey){if(n.enableRotate===!1)return;ce(j),u=c.ROTATE}else{if(n.enablePan===!1)return;Ae(j),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function ye(j){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;Re(j);break;case c.DOLLY:if(n.enableZoom===!1)return;it(j);break;case c.PAN:if(n.enablePan===!1)return;yt(j);break}}function rt(j){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(j.preventDefault(),n.dispatchEvent(s),gt(j),n.dispatchEvent(a))}function Ge(j){n.enabled===!1||n.enablePan===!1||St(j)}function qe(j){switch(ot(j),A.length){case 1:switch(n.touches.ONE){case Is.ROTATE:if(n.enableRotate===!1)return;Te(),u=c.TOUCH_ROTATE;break;case Is.PAN:if(n.enablePan===!1)return;Ie(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case Is.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;lt(),u=c.TOUCH_DOLLY_PAN;break;case Is.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ue(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Rt(j){switch(ot(j),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;je(j),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;ke(j),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Xe(j),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;k(j),n.update();break;default:u=c.NONE}}function Ne(j){n.enabled!==!1&&j.preventDefault()}function et(j){A.push(j)}function ht(j){delete O[j.pointerId];for(let me=0;me<A.length;me++)if(A[me].pointerId==j.pointerId){A.splice(me,1);return}}function ot(j){let me=O[j.pointerId];me===void 0&&(me=new we,O[j.pointerId]=me),me.set(j.pageX,j.pageY)}function Ke(j){const me=j.pointerId===A[0].pointerId?A[1]:A[0];return O[me.pointerId]}this.dollyIn=(j=J())=>{fe(j),n.update()},this.dollyOut=(j=J())=>{Q(j),n.update()},this.getScale=()=>m,this.setScale=j=>{te(j),n.update()},this.getZoomScale=()=>J(),t!==void 0&&this.connect(t),this.update()}};class BR extends qp{constructor(e){super(e),this.type=Un}parse(e){const a=function(L,R){switch(L){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(R||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(R||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(R||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(R||""))}},f=`
`,p=function(L,R,A){R=R||1024;let K=L.pos,J=-1,$=0,he="",ee=String.fromCharCode.apply(null,new Uint16Array(L.subarray(K,K+128)));for(;0>(J=ee.indexOf(f))&&$<R&&K<L.byteLength;)he+=ee,$+=ee.length,K+=128,ee+=String.fromCharCode.apply(null,new Uint16Array(L.subarray(K,K+128)));return-1<J?(L.pos+=$+J+1,he+ee.slice(0,J)):!1},m=function(L){const R=/^#\?(\S+)/,A=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,O=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,K=/^\s*FORMAT=(\S+)\s*$/,J=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,$={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let he,ee;for((L.pos>=L.byteLength||!(he=p(L)))&&a(1,"no header found"),(ee=he.match(R))||a(3,"bad initial token"),$.valid|=1,$.programtype=ee[1],$.string+=he+`
`;he=p(L),he!==!1;){if($.string+=he+`
`,he.charAt(0)==="#"){$.comments+=he+`
`;continue}if((ee=he.match(A))&&($.gamma=parseFloat(ee[1])),(ee=he.match(O))&&($.exposure=parseFloat(ee[1])),(ee=he.match(K))&&($.valid|=2,$.format=ee[1]),(ee=he.match(J))&&($.valid|=4,$.height=parseInt(ee[1],10),$.width=parseInt(ee[2],10)),$.valid&2&&$.valid&4)break}return $.valid&2||a(3,"missing format specifier"),$.valid&4||a(3,"missing image size specifier"),$},g=function(L,R,A){const O=R;if(O<8||O>32767||L[0]!==2||L[1]!==2||L[2]&128)return new Uint8Array(L);O!==(L[2]<<8|L[3])&&a(3,"wrong scanline width");const K=new Uint8Array(4*R*A);K.length||a(4,"unable to allocate buffer space");let J=0,$=0;const he=4*O,ee=new Uint8Array(4),Ee=new Uint8Array(he);let z=A;for(;z>0&&$<L.byteLength;){$+4>L.byteLength&&a(1),ee[0]=L[$++],ee[1]=L[$++],ee[2]=L[$++],ee[3]=L[$++],(ee[0]!=2||ee[1]!=2||(ee[2]<<8|ee[3])!=O)&&a(3,"bad rgbe scanline format");let te=0,Q;for(;te<he&&$<L.byteLength;){Q=L[$++];const xe=Q>128;if(xe&&(Q-=128),(Q===0||te+Q>he)&&a(3,"bad scanline data"),xe){const ze=L[$++];for(let ce=0;ce<Q;ce++)Ee[te++]=ze}else Ee.set(L.subarray($,$+Q),te),te+=Q,$+=Q}const fe=O;for(let xe=0;xe<fe;xe++){let ze=0;K[J]=Ee[xe+ze],ze+=O,K[J+1]=Ee[xe+ze],ze+=O,K[J+2]=Ee[xe+ze],ze+=O,K[J+3]=Ee[xe+ze],J+=4}z--}return K},y=function(L,R,A,O){const K=L[R+3],J=Math.pow(2,K-128)/255;A[O+0]=L[R+0]*J,A[O+1]=L[R+1]*J,A[O+2]=L[R+2]*J,A[O+3]=1},M=function(L,R,A,O){const K=L[R+3],J=Math.pow(2,K-128)/255;A[O+0]=Os.toHalfFloat(Math.min(L[R+0]*J,65504)),A[O+1]=Os.toHalfFloat(Math.min(L[R+1]*J,65504)),A[O+2]=Os.toHalfFloat(Math.min(L[R+2]*J,65504)),A[O+3]=Os.toHalfFloat(1)},x=new Uint8Array(e);x.pos=0;const _=m(x),w=_.width,E=_.height,T=g(x.subarray(x.pos),w,E);let N,P,U;switch(this.type){case hn:U=T.length/4;const L=new Float32Array(U*4);for(let A=0;A<U;A++)y(T,A*4,L,A*4);N=L,P=hn;break;case Un:U=T.length/4;const R=new Uint16Array(U*4);for(let A=0;A<U;A++)M(T,A*4,R,A*4);N=R,P=Un;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:w,height:E,data:N,header:_.string,gamma:_.gamma,exposure:_.exposure,type:P}}setDataType(e){return this.type=e,this}load(e,t,n,i){function s(a,c){switch(a.type){case hn:case Un:"colorSpace"in a?a.colorSpace="srgb-linear":a.encoding=3e3,a.minFilter=Kt,a.magFilter=Kt,a.generateMipmaps=!1,a.flipY=!0;break}t&&t(a,c)}return super.load(e,s,n,i)}}const Ua=gx>=152;class zR extends qp{constructor(e){super(e),this.type=Un}parse(e){const R=Math.pow(2.7182818,2.2);function A(I,F){for(var Z=0,ue=0;ue<65536;++ue)(ue==0||I[ue>>3]&1<<(ue&7))&&(F[Z++]=ue);for(var ge=Z-1;Z<65536;)F[Z++]=0;return ge}function O(I){for(var F=0;F<16384;F++)I[F]={},I[F].len=0,I[F].lit=0,I[F].p=null}const K={l:0,c:0,lc:0};function J(I,F,Z,ue,ge){for(;Z<I;)F=F<<8|Ke(ue,ge),Z+=8;Z-=I,K.l=F>>Z&(1<<I)-1,K.c=F,K.lc=Z}const $=new Array(59);function he(I){for(var F=0;F<=58;++F)$[F]=0;for(var F=0;F<65537;++F)$[I[F]]+=1;for(var Z=0,F=58;F>0;--F){var ue=Z+$[F]>>1;$[F]=Z,Z=ue}for(var F=0;F<65537;++F){var ge=I[F];ge>0&&(I[F]=ge|$[ge]++<<6)}}function ee(I,F,Z,ue,ge,C,H){for(var X=Z,Y=0,G=0;ge<=C;ge++){if(X.value-Z.value>ue)return!1;J(6,Y,G,I,X);var re=K.l;if(Y=K.c,G=K.lc,H[ge]=re,re==63){if(X.value-Z.value>ue)throw"Something wrong with hufUnpackEncTable";J(8,Y,G,I,X);var ae=K.l+6;if(Y=K.c,G=K.lc,ge+ae>C+1)throw"Something wrong with hufUnpackEncTable";for(;ae--;)H[ge++]=0;ge--}else if(re>=59){var ae=re-59+2;if(ge+ae>C+1)throw"Something wrong with hufUnpackEncTable";for(;ae--;)H[ge++]=0;ge--}}he(H)}function Ee(I){return I&63}function z(I){return I>>6}function te(I,F,Z,ue){for(;F<=Z;F++){var ge=z(I[F]),C=Ee(I[F]);if(ge>>C)throw"Invalid table entry";if(C>14){var H=ue[ge>>C-14];if(H.len)throw"Invalid table entry";if(H.lit++,H.p){var X=H.p;H.p=new Array(H.lit);for(var Y=0;Y<H.lit-1;++Y)H.p[Y]=X[Y]}else H.p=new Array(1);H.p[H.lit-1]=F}else if(C)for(var G=0,Y=1<<14-C;Y>0;Y--){var H=ue[(ge<<14-C)+G];if(H.len||H.p)throw"Invalid table entry";H.len=C,H.lit=F,G++}}return!0}const Q={c:0,lc:0};function fe(I,F,Z,ue){I=I<<8|Ke(Z,ue),F+=8,Q.c=I,Q.lc=F}const xe={c:0,lc:0};function ze(I,F,Z,ue,ge,C,H,X,Y,G){if(I==F){ue<8&&(fe(Z,ue,ge,H),Z=Q.c,ue=Q.lc),ue-=8;var re=Z>>ue,re=new Uint8Array([re])[0];if(Y.value+re>G)return!1;for(var ae=X[Y.value-1];re-- >0;)X[Y.value++]=ae}else if(Y.value<G)X[Y.value++]=I;else return!1;xe.c=Z,xe.lc=ue}function ce(I){return I&65535}function be(I){var F=ce(I);return F>32767?F-65536:F}const Ae={a:0,b:0};function Re(I,F){var Z=be(I),ue=be(F),ge=ue,C=Z+(ge&1)+(ge>>1),H=C,X=C-ge;Ae.a=H,Ae.b=X}function it(I,F){var Z=ce(I),ue=ce(F),ge=Z-(ue>>1)&65535,C=ue+ge-32768&65535;Ae.a=C,Ae.b=ge}function yt(I,F,Z,ue,ge,C,H){for(var X=H<16384,Y=Z>ge?ge:Z,G=1,re;G<=Y;)G<<=1;for(G>>=1,re=G,G>>=1;G>=1;){for(var ae=0,Oe=ae+C*(ge-re),Se=C*G,Pe=C*re,He=ue*G,Le=ue*re,nt,ct,$e,dt;ae<=Oe;ae+=Pe){for(var st=ae,Ve=ae+ue*(Z-re);st<=Ve;st+=Le){var wt=st+He,pt=st+Se,Qt=pt+He;X?(Re(I[st+F],I[pt+F]),nt=Ae.a,$e=Ae.b,Re(I[wt+F],I[Qt+F]),ct=Ae.a,dt=Ae.b,Re(nt,ct),I[st+F]=Ae.a,I[wt+F]=Ae.b,Re($e,dt),I[pt+F]=Ae.a,I[Qt+F]=Ae.b):(it(I[st+F],I[pt+F]),nt=Ae.a,$e=Ae.b,it(I[wt+F],I[Qt+F]),ct=Ae.a,dt=Ae.b,it(nt,ct),I[st+F]=Ae.a,I[wt+F]=Ae.b,it($e,dt),I[pt+F]=Ae.a,I[Qt+F]=Ae.b)}if(Z&G){var pt=st+Se;X?Re(I[st+F],I[pt+F]):it(I[st+F],I[pt+F]),nt=Ae.a,I[pt+F]=Ae.b,I[st+F]=nt}}if(ge&G)for(var st=ae,Ve=ae+ue*(Z-re);st<=Ve;st+=Le){var wt=st+He;X?Re(I[st+F],I[wt+F]):it(I[st+F],I[wt+F]),nt=Ae.a,I[wt+F]=Ae.b,I[st+F]=nt}re=G,G>>=1}return ae}function gt(I,F,Z,ue,ge,C,H,X,Y,G){for(var re=0,ae=0,Oe=X,Se=Math.trunc(ge.value+(C+7)/8);ge.value<Se;)for(fe(re,ae,Z,ge),re=Q.c,ae=Q.lc;ae>=14;){var Pe=re>>ae-14&16383,He=F[Pe];if(He.len)ae-=He.len,ze(He.lit,H,re,ae,Z,ue,ge,Y,G,Oe),re=xe.c,ae=xe.lc;else{if(!He.p)throw"hufDecode issues";var Le;for(Le=0;Le<He.lit;Le++){for(var nt=Ee(I[He.p[Le]]);ae<nt&&ge.value<Se;)fe(re,ae,Z,ge),re=Q.c,ae=Q.lc;if(ae>=nt&&z(I[He.p[Le]])==(re>>ae-nt&(1<<nt)-1)){ae-=nt,ze(He.p[Le],H,re,ae,Z,ue,ge,Y,G,Oe),re=xe.c,ae=xe.lc;break}}if(Le==He.lit)throw"hufDecode issues"}}var ct=8-C&7;for(re>>=ct,ae-=ct;ae>0;){var He=F[re<<14-ae&16383];if(He.len)ae-=He.len,ze(He.lit,H,re,ae,Z,ue,ge,Y,G,Oe),re=xe.c,ae=xe.lc;else throw"hufDecode issues"}return!0}function St(I,F,Z,ue,ge,C){var H={value:0},X=Z.value,Y=ot(F,Z),G=ot(F,Z);Z.value+=4;var re=ot(F,Z);if(Z.value+=4,Y<0||Y>=65537||G<0||G>=65537)throw"Something wrong with HUF_ENCSIZE";var ae=new Array(65537),Oe=new Array(16384);O(Oe);var Se=ue-(Z.value-X);if(ee(I,F,Z,Se,Y,G,ae),re>8*(ue-(Z.value-X)))throw"Something wrong with hufUncompress";te(ae,Y,G,Oe),gt(ae,Oe,I,F,Z,re,G,C,ge,H)}function Te(I,F,Z){for(var ue=0;ue<Z;++ue)F[ue]=I[F[ue]]}function Ie(I){for(var F=1;F<I.length;F++){var Z=I[F-1]+I[F]-128;I[F]=Z}}function W(I,F){for(var Z=0,ue=Math.floor((I.length+1)/2),ge=0,C=I.length-1;!(ge>C||(F[ge++]=I[Z++],ge>C));)F[ge++]=I[ue++]}function lt(I){for(var F=I.byteLength,Z=new Array,ue=0,ge=new DataView(I);F>0;){var C=ge.getInt8(ue++);if(C<0){var H=-C;F-=H+1;for(var X=0;X<H;X++)Z.push(ge.getUint8(ue++))}else{var H=C;F-=2;for(var Y=ge.getUint8(ue++),X=0;X<H+1;X++)Z.push(Y)}}return Z}function Ue(I,F,Z,ue,ge,C){var wt=new DataView(C.buffer),H=Z[I.idx[0]].width,X=Z[I.idx[0]].height,Y=3,G=Math.floor(H/8),re=Math.ceil(H/8),ae=Math.ceil(X/8),Oe=H-(re-1)*8,Se=X-(ae-1)*8,Pe={value:0},He=new Array(Y),Le=new Array(Y),nt=new Array(Y),ct=new Array(Y),$e=new Array(Y);for(let Ht=0;Ht<Y;++Ht)$e[Ht]=F[I.idx[Ht]],He[Ht]=Ht<1?0:He[Ht-1]+re*ae,Le[Ht]=new Float32Array(64),nt[Ht]=new Uint16Array(64),ct[Ht]=new Uint16Array(re*64);for(let Ht=0;Ht<ae;++Ht){var dt=8;Ht==ae-1&&(dt=Se);var st=8;for(let Nt=0;Nt<re;++Nt){Nt==re-1&&(st=Oe);for(let Bt=0;Bt<Y;++Bt)nt[Bt].fill(0),nt[Bt][0]=ge[He[Bt]++],je(Pe,ue,nt[Bt]),ke(nt[Bt],Le[Bt]),_t(Le[Bt]);Xe(Le);for(let Bt=0;Bt<Y;++Bt)k(Le[Bt],ct[Bt],Nt*64)}let Tt=0;for(let Nt=0;Nt<Y;++Nt){const Bt=Z[I.idx[Nt]].type;for(let zt=8*Ht;zt<8*Ht+dt;++zt){Tt=$e[Nt][zt];for(let Rn=0;Rn<G;++Rn){const an=Rn*64+(zt&7)*8;wt.setUint16(Tt+0*2*Bt,ct[Nt][an+0],!0),wt.setUint16(Tt+1*2*Bt,ct[Nt][an+1],!0),wt.setUint16(Tt+2*2*Bt,ct[Nt][an+2],!0),wt.setUint16(Tt+3*2*Bt,ct[Nt][an+3],!0),wt.setUint16(Tt+4*2*Bt,ct[Nt][an+4],!0),wt.setUint16(Tt+5*2*Bt,ct[Nt][an+5],!0),wt.setUint16(Tt+6*2*Bt,ct[Nt][an+6],!0),wt.setUint16(Tt+7*2*Bt,ct[Nt][an+7],!0),Tt+=8*2*Bt}}if(G!=re)for(let zt=8*Ht;zt<8*Ht+dt;++zt){const Rn=$e[Nt][zt]+8*G*2*Bt,an=G*64+(zt&7)*8;for(let pi=0;pi<st;++pi)wt.setUint16(Rn+pi*2*Bt,ct[Nt][an+pi],!0)}}}for(var Ve=new Uint16Array(H),wt=new DataView(C.buffer),pt=0;pt<Y;++pt){Z[I.idx[pt]].decoded=!0;var Qt=Z[I.idx[pt]].type;if(Z[pt].type==2)for(var nn=0;nn<X;++nn){const Ht=$e[pt][nn];for(var Jt=0;Jt<H;++Jt)Ve[Jt]=wt.getUint16(Ht+Jt*2*Qt,!0);for(var Jt=0;Jt<H;++Jt)wt.setFloat32(Ht+Jt*2*Qt,oe(Ve[Jt]),!0)}}}function je(I,F,Z){for(var ue,ge=1;ge<64;)ue=F[I.value],ue==65280?ge=64:ue>>8==255?ge+=ue&255:(Z[ge]=ue,ge++),I.value++}function ke(I,F){F[0]=oe(I[0]),F[1]=oe(I[1]),F[2]=oe(I[5]),F[3]=oe(I[6]),F[4]=oe(I[14]),F[5]=oe(I[15]),F[6]=oe(I[27]),F[7]=oe(I[28]),F[8]=oe(I[2]),F[9]=oe(I[4]),F[10]=oe(I[7]),F[11]=oe(I[13]),F[12]=oe(I[16]),F[13]=oe(I[26]),F[14]=oe(I[29]),F[15]=oe(I[42]),F[16]=oe(I[3]),F[17]=oe(I[8]),F[18]=oe(I[12]),F[19]=oe(I[17]),F[20]=oe(I[25]),F[21]=oe(I[30]),F[22]=oe(I[41]),F[23]=oe(I[43]),F[24]=oe(I[9]),F[25]=oe(I[11]),F[26]=oe(I[18]),F[27]=oe(I[24]),F[28]=oe(I[31]),F[29]=oe(I[40]),F[30]=oe(I[44]),F[31]=oe(I[53]),F[32]=oe(I[10]),F[33]=oe(I[19]),F[34]=oe(I[23]),F[35]=oe(I[32]),F[36]=oe(I[39]),F[37]=oe(I[45]),F[38]=oe(I[52]),F[39]=oe(I[54]),F[40]=oe(I[20]),F[41]=oe(I[22]),F[42]=oe(I[33]),F[43]=oe(I[38]),F[44]=oe(I[46]),F[45]=oe(I[51]),F[46]=oe(I[55]),F[47]=oe(I[60]),F[48]=oe(I[21]),F[49]=oe(I[34]),F[50]=oe(I[37]),F[51]=oe(I[47]),F[52]=oe(I[50]),F[53]=oe(I[56]),F[54]=oe(I[59]),F[55]=oe(I[61]),F[56]=oe(I[35]),F[57]=oe(I[36]),F[58]=oe(I[48]),F[59]=oe(I[49]),F[60]=oe(I[57]),F[61]=oe(I[58]),F[62]=oe(I[62]),F[63]=oe(I[63])}function _t(I){const F=.5*Math.cos(.7853975),Z=.5*Math.cos(3.14159/16),ue=.5*Math.cos(3.14159/8),ge=.5*Math.cos(3*3.14159/16),C=.5*Math.cos(5*3.14159/16),H=.5*Math.cos(3*3.14159/8),X=.5*Math.cos(7*3.14159/16);for(var Y=new Array(4),G=new Array(4),re=new Array(4),ae=new Array(4),Oe=0;Oe<8;++Oe){var Se=Oe*8;Y[0]=ue*I[Se+2],Y[1]=H*I[Se+2],Y[2]=ue*I[Se+6],Y[3]=H*I[Se+6],G[0]=Z*I[Se+1]+ge*I[Se+3]+C*I[Se+5]+X*I[Se+7],G[1]=ge*I[Se+1]-X*I[Se+3]-Z*I[Se+5]-C*I[Se+7],G[2]=C*I[Se+1]-Z*I[Se+3]+X*I[Se+5]+ge*I[Se+7],G[3]=X*I[Se+1]-C*I[Se+3]+ge*I[Se+5]-Z*I[Se+7],re[0]=F*(I[Se+0]+I[Se+4]),re[3]=F*(I[Se+0]-I[Se+4]),re[1]=Y[0]+Y[3],re[2]=Y[1]-Y[2],ae[0]=re[0]+re[1],ae[1]=re[3]+re[2],ae[2]=re[3]-re[2],ae[3]=re[0]-re[1],I[Se+0]=ae[0]+G[0],I[Se+1]=ae[1]+G[1],I[Se+2]=ae[2]+G[2],I[Se+3]=ae[3]+G[3],I[Se+4]=ae[3]-G[3],I[Se+5]=ae[2]-G[2],I[Se+6]=ae[1]-G[1],I[Se+7]=ae[0]-G[0]}for(var Pe=0;Pe<8;++Pe)Y[0]=ue*I[16+Pe],Y[1]=H*I[16+Pe],Y[2]=ue*I[48+Pe],Y[3]=H*I[48+Pe],G[0]=Z*I[8+Pe]+ge*I[24+Pe]+C*I[40+Pe]+X*I[56+Pe],G[1]=ge*I[8+Pe]-X*I[24+Pe]-Z*I[40+Pe]-C*I[56+Pe],G[2]=C*I[8+Pe]-Z*I[24+Pe]+X*I[40+Pe]+ge*I[56+Pe],G[3]=X*I[8+Pe]-C*I[24+Pe]+ge*I[40+Pe]-Z*I[56+Pe],re[0]=F*(I[Pe]+I[32+Pe]),re[3]=F*(I[Pe]-I[32+Pe]),re[1]=Y[0]+Y[3],re[2]=Y[1]-Y[2],ae[0]=re[0]+re[1],ae[1]=re[3]+re[2],ae[2]=re[3]-re[2],ae[3]=re[0]-re[1],I[0+Pe]=ae[0]+G[0],I[8+Pe]=ae[1]+G[1],I[16+Pe]=ae[2]+G[2],I[24+Pe]=ae[3]+G[3],I[32+Pe]=ae[3]-G[3],I[40+Pe]=ae[2]-G[2],I[48+Pe]=ae[1]-G[1],I[56+Pe]=ae[0]-G[0]}function Xe(I){for(var F=0;F<64;++F){var Z=I[0][F],ue=I[1][F],ge=I[2][F];I[0][F]=Z+1.5747*ge,I[1][F]=Z-.1873*ue-.4682*ge,I[2][F]=Z+1.8556*ue}}function k(I,F,Z){for(var ue=0;ue<64;++ue)F[Z+ue]=Os.toHalfFloat(D(I[ue]))}function D(I){return I<=1?Math.sign(I)*Math.pow(Math.abs(I),2.2):Math.sign(I)*Math.pow(R,Math.abs(I)-1)}function se(I){return new DataView(I.array.buffer,I.offset.value,I.size)}function ve(I){var F=I.viewer.buffer.slice(I.offset.value,I.offset.value+I.size),Z=new Uint8Array(lt(F)),ue=new Uint8Array(Z.length);return Ie(Z),W(Z,ue),new DataView(ue.buffer)}function Ce(I){var F=I.array.slice(I.offset.value,I.offset.value+I.size),Z=vu(F),ue=new Uint8Array(Z.length);return Ie(Z),W(Z,ue),new DataView(ue.buffer)}function ye(I){for(var F=I.viewer,Z={value:I.offset.value},ue=new Uint16Array(I.width*I.scanlineBlockSize*(I.channels*I.type)),ge=new Uint8Array(8192),C=0,H=new Array(I.channels),X=0;X<I.channels;X++)H[X]={},H[X].start=C,H[X].end=H[X].start,H[X].nx=I.width,H[X].ny=I.lines,H[X].size=I.type,C+=H[X].nx*H[X].ny*H[X].size;var Y=de(F,Z),G=de(F,Z);if(G>=8192)throw"Something is wrong with PIZ_COMPRESSION BITMAP_SIZE";if(Y<=G)for(var X=0;X<G-Y+1;X++)ge[X+Y]=j(F,Z);var re=new Uint16Array(65536),ae=A(ge,re),Oe=ot(F,Z);St(I.array,F,Z,Oe,ue,C);for(var X=0;X<I.channels;++X)for(var Se=H[X],Pe=0;Pe<H[X].size;++Pe)yt(ue,Se.start+Pe,Se.nx,Se.size,Se.ny,Se.nx*Se.size,ae);Te(re,ue,C);for(var He=0,Le=new Uint8Array(ue.buffer.byteLength),nt=0;nt<I.lines;nt++)for(var ct=0;ct<I.channels;ct++){var Se=H[ct],$e=Se.nx*Se.size,dt=new Uint8Array(ue.buffer,Se.end*2,$e*2);Le.set(dt,He),He+=$e*2,Se.end+=$e}return new DataView(Le.buffer)}function rt(I){var F=I.array.slice(I.offset.value,I.offset.value+I.size),Z=vu(F);const ue=I.lines*I.channels*I.width,ge=I.type==1?new Uint16Array(ue):new Uint32Array(ue);let C=0,H=0;const X=new Array(4);for(let Y=0;Y<I.lines;Y++)for(let G=0;G<I.channels;G++){let re=0;switch(I.type){case 1:X[0]=C,X[1]=X[0]+I.width,C=X[1]+I.width;for(let ae=0;ae<I.width;++ae){const Oe=Z[X[0]++]<<8|Z[X[1]++];re+=Oe,ge[H]=re,H++}break;case 2:X[0]=C,X[1]=X[0]+I.width,X[2]=X[1]+I.width,C=X[2]+I.width;for(let ae=0;ae<I.width;++ae){const Oe=Z[X[0]++]<<24|Z[X[1]++]<<16|Z[X[2]++]<<8;re+=Oe,ge[H]=re,H++}break}}return new DataView(ge.buffer)}function Ge(I){var F=I.viewer,Z={value:I.offset.value},ue=new Uint8Array(I.width*I.lines*(I.channels*I.type*2)),ge={version:me(F,Z),unknownUncompressedSize:me(F,Z),unknownCompressedSize:me(F,Z),acCompressedSize:me(F,Z),dcCompressedSize:me(F,Z),rleCompressedSize:me(F,Z),rleUncompressedSize:me(F,Z),rleRawSize:me(F,Z),totalAcUncompressedCount:me(F,Z),totalDcUncompressedCount:me(F,Z),acCompression:me(F,Z)};if(ge.version<2)throw"EXRLoader.parse: "+si.compression+" version "+ge.version+" is unsupported";for(var C=new Array,H=de(F,Z)-2;H>0;){var X=qe(F.buffer,Z),Y=j(F,Z),G=Y>>2&3,re=(Y>>4)-1,ae=new Int8Array([re])[0],Oe=j(F,Z);C.push({name:X,index:ae,type:Oe,compression:G}),H-=X.length+3}for(var Se=si.channels,Pe=new Array(I.channels),He=0;He<I.channels;++He){var Le=Pe[He]={},nt=Se[He];Le.name=nt.name,Le.compression=0,Le.decoded=!1,Le.type=nt.pixelType,Le.pLinear=nt.pLinear,Le.width=I.width,Le.height=I.lines}for(var ct={idx:new Array(3)},$e=0;$e<I.channels;++$e)for(var Le=Pe[$e],He=0;He<C.length;++He){var dt=C[He];Le.name==dt.name&&(Le.compression=dt.compression,dt.index>=0&&(ct.idx[dt.index]=$e),Le.offset=$e)}if(ge.acCompressedSize>0)switch(ge.acCompression){case 0:var wt=new Uint16Array(ge.totalAcUncompressedCount);St(I.array,F,Z,ge.acCompressedSize,wt,ge.totalAcUncompressedCount);break;case 1:var st=I.array.slice(Z.value,Z.value+ge.totalAcUncompressedCount),Ve=vu(st),wt=new Uint16Array(Ve.buffer);Z.value+=ge.totalAcUncompressedCount;break}if(ge.dcCompressedSize>0){var pt={array:I.array,offset:Z,size:ge.dcCompressedSize},Qt=new Uint16Array(Ce(pt).buffer);Z.value+=ge.dcCompressedSize}if(ge.rleRawSize>0){var st=I.array.slice(Z.value,Z.value+ge.rleCompressedSize),Ve=vu(st),nn=lt(Ve.buffer);Z.value+=ge.rleCompressedSize}for(var Jt=0,Ht=new Array(Pe.length),He=0;He<Ht.length;++He)Ht[He]=new Array;for(var Tt=0;Tt<I.lines;++Tt)for(var Nt=0;Nt<Pe.length;++Nt)Ht[Nt].push(Jt),Jt+=Pe[Nt].width*I.type*2;Ue(ct,Ht,Pe,wt,Qt,ue);for(var He=0;He<Pe.length;++He){var Le=Pe[He];if(!Le.decoded)switch(Le.compression){case 2:for(var Bt=0,zt=0,Tt=0;Tt<I.lines;++Tt){for(var Rn=Ht[He][Bt],an=0;an<Le.width;++an){for(var pi=0;pi<2*Le.type;++pi)ue[Rn++]=nn[zt+pi*Le.width*Le.height];zt++}Bt++}break;case 1:default:throw"EXRLoader.parse: unsupported channel compression"}}return new DataView(ue.buffer)}function qe(I,F){for(var Z=new Uint8Array(I),ue=0;Z[F.value+ue]!=0;)ue+=1;var ge=new TextDecoder().decode(Z.slice(F.value,F.value+ue));return F.value=F.value+ue+1,ge}function Rt(I,F,Z){var ue=new TextDecoder().decode(new Uint8Array(I).slice(F.value,F.value+Z));return F.value=F.value+Z,ue}function Ne(I,F){var Z=ht(I,F),ue=ot(I,F);return[Z,ue]}function et(I,F){var Z=ot(I,F),ue=ot(I,F);return[Z,ue]}function ht(I,F){var Z=I.getInt32(F.value,!0);return F.value=F.value+4,Z}function ot(I,F){var Z=I.getUint32(F.value,!0);return F.value=F.value+4,Z}function Ke(I,F){var Z=I[F.value];return F.value=F.value+1,Z}function j(I,F){var Z=I.getUint8(F.value);return F.value=F.value+1,Z}const me=function(I,F){let Z;return"getBigInt64"in DataView.prototype?Z=Number(I.getBigInt64(F.value,!0)):Z=I.getUint32(F.value+4,!0)+Number(I.getUint32(F.value,!0)<<32),F.value+=8,Z};function Fe(I,F){var Z=I.getFloat32(F.value,!0);return F.value+=4,Z}function q(I,F){return Os.toHalfFloat(Fe(I,F))}function oe(I){var F=(I&31744)>>10,Z=I&1023;return(I>>15?-1:1)*(F?F===31?Z?NaN:1/0:Math.pow(2,F-15)*(1+Z/1024):6103515625e-14*(Z/1024))}function de(I,F){var Z=I.getUint16(F.value,!0);return F.value+=2,Z}function Me(I,F){return oe(de(I,F))}function Ze(I,F,Z,ue){for(var ge=Z.value,C=[];Z.value<ge+ue-1;){var H=qe(F,Z),X=ht(I,Z),Y=j(I,Z);Z.value+=3;var G=ht(I,Z),re=ht(I,Z);C.push({name:H,pixelType:X,pLinear:Y,xSampling:G,ySampling:re})}return Z.value+=1,C}function We(I,F){var Z=Fe(I,F),ue=Fe(I,F),ge=Fe(I,F),C=Fe(I,F),H=Fe(I,F),X=Fe(I,F),Y=Fe(I,F),G=Fe(I,F);return{redX:Z,redY:ue,greenX:ge,greenY:C,blueX:H,blueY:X,whiteX:Y,whiteY:G}}function vt(I,F){var Z=["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"],ue=j(I,F);return Z[ue]}function kt(I,F){var Z=ot(I,F),ue=ot(I,F),ge=ot(I,F),C=ot(I,F);return{xMin:Z,yMin:ue,xMax:ge,yMax:C}}function tn(I,F){var Z=["INCREASING_Y"],ue=j(I,F);return Z[ue]}function Ut(I,F){var Z=Fe(I,F),ue=Fe(I,F);return[Z,ue]}function dn(I,F){var Z=Fe(I,F),ue=Fe(I,F),ge=Fe(I,F);return[Z,ue,ge]}function Cn(I,F,Z,ue,ge){if(ue==="string"||ue==="stringvector"||ue==="iccProfile")return Rt(F,Z,ge);if(ue==="chlist")return Ze(I,F,Z,ge);if(ue==="chromaticities")return We(I,Z);if(ue==="compression")return vt(I,Z);if(ue==="box2i")return kt(I,Z);if(ue==="lineOrder")return tn(I,Z);if(ue==="float")return Fe(I,Z);if(ue==="v2f")return Ut(I,Z);if(ue==="v3f")return dn(I,Z);if(ue==="int")return ht(I,Z);if(ue==="rational")return Ne(I,Z);if(ue==="timecode")return et(I,Z);if(ue==="preview")return Z.value+=ge,"skipped";Z.value+=ge}function to(I,F,Z){const ue={};if(I.getUint32(0,!0)!=20000630)throw"THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.";ue.version=I.getUint8(4);const ge=I.getUint8(5);ue.spec={singleTile:!!(ge&2),longName:!!(ge&4),deepFormat:!!(ge&8),multiPart:!!(ge&16)},Z.value=8;for(var C=!0;C;){var H=qe(F,Z);if(H==0)C=!1;else{var X=qe(F,Z),Y=ot(I,Z),G=Cn(I,F,Z,X,Y);G===void 0?console.warn(`EXRLoader.parse: skipped unknown header attribute type '${X}'.`):ue[H]=G}}if(ge&-5)throw console.error("EXRHeader:",ue),"THREE.EXRLoader: provided file is currently unsupported.";return ue}function no(I,F,Z,ue,ge){const C={size:0,viewer:F,array:Z,offset:ue,width:I.dataWindow.xMax-I.dataWindow.xMin+1,height:I.dataWindow.yMax-I.dataWindow.yMin+1,channels:I.channels.length,bytesPerLine:null,lines:null,inputSize:null,type:I.channels[0].pixelType,uncompress:null,getter:null,format:null,[Ua?"colorSpace":"encoding"]:null};switch(I.compression){case"NO_COMPRESSION":C.lines=1,C.uncompress=se;break;case"RLE_COMPRESSION":C.lines=1,C.uncompress=ve;break;case"ZIPS_COMPRESSION":C.lines=1,C.uncompress=Ce;break;case"ZIP_COMPRESSION":C.lines=16,C.uncompress=Ce;break;case"PIZ_COMPRESSION":C.lines=32,C.uncompress=ye;break;case"PXR24_COMPRESSION":C.lines=16,C.uncompress=rt;break;case"DWAA_COMPRESSION":C.lines=32,C.uncompress=Ge;break;case"DWAB_COMPRESSION":C.lines=256,C.uncompress=Ge;break;default:throw"EXRLoader.parse: "+I.compression+" is unsupported"}if(C.scanlineBlockSize=C.lines,C.type==1)switch(ge){case hn:C.getter=Me,C.inputSize=2;break;case Un:C.getter=de,C.inputSize=2;break}else if(C.type==2)switch(ge){case hn:C.getter=Fe,C.inputSize=4;break;case Un:C.getter=q,C.inputSize=4}else throw"EXRLoader.parse: unsupported pixelType "+C.type+" for "+I.compression+".";C.blockCount=(I.dataWindow.yMax+1)/C.scanlineBlockSize;for(var H=0;H<C.blockCount;H++)me(F,ue);C.outputChannels=C.channels==3?4:C.channels;const X=C.width*C.height*C.outputChannels;switch(ge){case hn:C.byteArray=new Float32Array(X),C.channels<C.outputChannels&&C.byteArray.fill(1,0,X);break;case Un:C.byteArray=new Uint16Array(X),C.channels<C.outputChannels&&C.byteArray.fill(15360,0,X);break;default:console.error("THREE.EXRLoader: unsupported type: ",ge);break}return C.bytesPerLine=C.width*C.inputSize*C.channels,C.outputChannels==4?C.format=xn:C.format=vl,Ua?C.colorSpace="srgb-linear":C.encoding=3e3,C}const qn=new DataView(e),fr=new Uint8Array(e),Zi={value:0},si=to(qn,e,Zi),It=no(si,qn,fr,Zi,this.type),os={value:0},Dr={R:0,G:1,B:2,A:3,Y:0};for(let I=0;I<It.height/It.scanlineBlockSize;I++){const F=ot(qn,Zi);It.size=ot(qn,Zi),It.lines=F+It.scanlineBlockSize>It.height?It.height-F:It.scanlineBlockSize;const ue=It.size<It.lines*It.bytesPerLine?It.uncompress(It):se(It);Zi.value+=It.size;for(let ge=0;ge<It.scanlineBlockSize;ge++){const C=ge+I*It.scanlineBlockSize;if(C>=It.height)break;for(let H=0;H<It.channels;H++){const X=Dr[si.channels[H].name];for(let Y=0;Y<It.width;Y++){os.value=(ge*(It.channels*It.width)+H*It.width+Y)*It.inputSize;const G=(It.height-1-C)*(It.width*It.outputChannels)+Y*It.outputChannels+X;It.byteArray[G]=It.getter(ue,os)}}}}return{header:si,width:It.width,height:It.height,data:It.byteArray,format:It.format,[Ua?"colorSpace":"encoding"]:It[Ua?"colorSpace":"encoding"],type:this.type}}setDataType(e){return this.type=e,this}load(e,t,n,i){function s(a,c){Ua?a.colorSpace=c.colorSpace:a.encoding=c.encoding,a.minFilter=Kt,a.magFilter=Kt,a.generateMipmaps=!1,a.flipY=!1,t&&t(a,c)}return super.load(e,s,n,i)}}const aI=De.forwardRef(({makeDefault:r,camera:e,regress:t,domElement:n,enableDamping:i=!0,keyEvents:s=!1,onChange:a,onStart:c,onEnd:u,...h},f)=>{const p=Mi(P=>P.invalidate),m=Mi(P=>P.camera),g=Mi(P=>P.gl),y=Mi(P=>P.events),M=Mi(P=>P.setEvents),x=Mi(P=>P.set),_=Mi(P=>P.get),w=Mi(P=>P.performance),E=e||m,T=n||y.connected||g.domElement,N=De.useMemo(()=>new OR(E),[E]);return sm(()=>{N.enabled&&N.update()},-1),De.useEffect(()=>(s&&N.connect(s===!0?T:s),N.connect(T),()=>void N.dispose()),[s,T,t,N,p]),De.useEffect(()=>{const P=R=>{p(),t&&w.regress(),a&&a(R)},U=R=>{c&&c(R)},L=R=>{u&&u(R)};return N.addEventListener("change",P),N.addEventListener("start",U),N.addEventListener("end",L),()=>{N.removeEventListener("start",U),N.removeEventListener("end",L),N.removeEventListener("change",P)}},[a,c,u,N,p,M]),De.useEffect(()=>{if(r){const P=_().controls;return x({controls:N}),()=>x({controls:P})}},[r,N]),De.createElement("primitive",lh({ref:f,object:N,enableDamping:i},h))}),kR=3e3,HR=3001,lI=De.forwardRef(({children:r,enabled:e=!0,speed:t=1,rotationIntensity:n=1,floatIntensity:i=1,floatingRange:s=[-.1,.1],autoInvalidate:a=!1,...c},u)=>{const h=De.useRef(null);De.useImperativeHandle(u,()=>h.current,[]);const f=De.useRef(Math.random()*1e4);return sm(p=>{var m,g;if(!e||t===0)return;a&&p.invalidate();const y=f.current+p.clock.elapsedTime;h.current.rotation.x=Math.cos(y/4*t)/8*n,h.current.rotation.y=Math.sin(y/4*t)/8*n,h.current.rotation.z=Math.sin(y/4*t)/20*n;let M=Math.sin(y/4*t)/10;M=F_.mapLinear(M,-.1,.1,(m=s==null?void 0:s[0])!==null&&m!==void 0?m:-.1,(g=s==null?void 0:s[1])!==null&&g!==void 0?g:.1),h.current.position.y=M*i,h.current.updateMatrix()}),De.createElement("group",c,De.createElement("group",{ref:h,matrixAutoUpdate:!1},r))}),wx=(r,e,t)=>{let n;switch(r){case fi:n=new Uint8ClampedArray(e*t*4);break;case Un:n=new Uint16Array(e*t*4);break;case lr:n=new Uint32Array(e*t*4);break;case uh:n=new Int8Array(e*t*4);break;case hh:n=new Int16Array(e*t*4);break;case gl:n=new Int32Array(e*t*4);break;case hn:n=new Float32Array(e*t*4);break;default:throw new Error("Unsupported data type")}return n};let yu;const VR=(r,e,t,n)=>{if(yu!==void 0)return yu;const i=new Ei(1,1,n);e.setRenderTarget(i);const s=new fn(new is,new Lr({color:16777215}));e.render(s,t),e.setRenderTarget(null);const a=wx(r,i.width,i.height);return e.readRenderTargetPixels(i,0,0,i.width,i.height,a),i.dispose(),s.geometry.dispose(),s.material.dispose(),yu=a[0]!==0,yu};class am{constructor(e){var t,n,i,s,a,c,u,h,f,p,m,g,y,M,x,_;this._rendererIsDisposable=!1,this._supportsReadPixels=!0,this.render=()=>{this._renderer.setRenderTarget(this._renderTarget);try{this._renderer.render(this._scene,this._camera)}catch(E){throw this._renderer.setRenderTarget(null),E}this._renderer.setRenderTarget(null)},this._width=e.width,this._height=e.height,this._type=e.type,this._colorSpace=e.colorSpace;const w={format:xn,depthBuffer:!1,stencilBuffer:!1,type:this._type,colorSpace:this._colorSpace,anisotropy:((t=e.renderTargetOptions)===null||t===void 0?void 0:t.anisotropy)!==void 0?(n=e.renderTargetOptions)===null||n===void 0?void 0:n.anisotropy:1,generateMipmaps:((i=e.renderTargetOptions)===null||i===void 0?void 0:i.generateMipmaps)!==void 0?(s=e.renderTargetOptions)===null||s===void 0?void 0:s.generateMipmaps:!1,magFilter:((a=e.renderTargetOptions)===null||a===void 0?void 0:a.magFilter)!==void 0?(c=e.renderTargetOptions)===null||c===void 0?void 0:c.magFilter:Kt,minFilter:((u=e.renderTargetOptions)===null||u===void 0?void 0:u.minFilter)!==void 0?(h=e.renderTargetOptions)===null||h===void 0?void 0:h.minFilter:Kt,samples:((f=e.renderTargetOptions)===null||f===void 0?void 0:f.samples)!==void 0?(p=e.renderTargetOptions)===null||p===void 0?void 0:p.samples:void 0,wrapS:((m=e.renderTargetOptions)===null||m===void 0?void 0:m.wrapS)!==void 0?(g=e.renderTargetOptions)===null||g===void 0?void 0:g.wrapS:En,wrapT:((y=e.renderTargetOptions)===null||y===void 0?void 0:y.wrapT)!==void 0?(M=e.renderTargetOptions)===null||M===void 0?void 0:M.wrapT:En};if(this._material=e.material,e.renderer?this._renderer=e.renderer:(this._renderer=am.instantiateRenderer(),this._rendererIsDisposable=!0),this._scene=new wl,this._camera=new Ir,this._camera.position.set(0,0,10),this._camera.left=-.5,this._camera.right=.5,this._camera.top=.5,this._camera.bottom=-.5,this._camera.updateProjectionMatrix(),!VR(this._type,this._renderer,this._camera,w)){let E;switch(this._type){case Un:E=this._renderer.extensions.has("EXT_color_buffer_float")?hn:void 0;break}E!==void 0?(console.warn(`This browser does not support reading pixels from ${this._type} RenderTargets, switching to ${hn}`),this._type=E):(this._supportsReadPixels=!1,console.warn("This browser dos not support toArray or toDataTexture, calls to those methods will result in an error thrown"))}this._quad=new fn(new is,this._material),this._quad.geometry.computeBoundingBox(),this._scene.add(this._quad),this._renderTarget=new Ei(this.width,this.height,w),this._renderTarget.texture.mapping=((x=e.renderTargetOptions)===null||x===void 0?void 0:x.mapping)!==void 0?(_=e.renderTargetOptions)===null||_===void 0?void 0:_.mapping:$r}static instantiateRenderer(){const e=new Dp;return e.setSize(128,128),e}toArray(){if(!this._supportsReadPixels)throw new Error("Can't read pixels in this browser");const e=wx(this._type,this._width,this._height);return this._renderer.readRenderTargetPixels(this._renderTarget,0,0,this._width,this._height,e),e}toDataTexture(e){const t=new Xi(this.toArray(),this.width,this.height,xn,this._type,(e==null?void 0:e.mapping)||$r,(e==null?void 0:e.wrapS)||En,(e==null?void 0:e.wrapT)||En,(e==null?void 0:e.magFilter)||Kt,(e==null?void 0:e.minFilter)||Kt,(e==null?void 0:e.anisotropy)||1,cr);return t.generateMipmaps=(e==null?void 0:e.generateMipmaps)!==void 0?e==null?void 0:e.generateMipmaps:!1,t}disposeOnDemandRenderer(){this._renderer.setRenderTarget(null),this._rendererIsDisposable&&(this._renderer.dispose(),this._renderer.forceContextLoss())}dispose(e){this.disposeOnDemandRenderer(),e&&this.renderTarget.dispose(),this.material instanceof di&&Object.values(this.material.uniforms).forEach(t=>{t.value instanceof $t&&t.value.dispose()}),Object.values(this.material).forEach(t=>{t instanceof $t&&t.dispose()}),this.material.dispose(),this._quad.geometry.dispose()}get width(){return this._width}set width(e){this._width=e,this._renderTarget.setSize(this._width,this._height)}get height(){return this._height}set height(e){this._height=e,this._renderTarget.setSize(this._width,this._height)}get renderer(){return this._renderer}get renderTarget(){return this._renderTarget}set renderTarget(e){this._renderTarget=e,this._width=e.width,this._height=e.height}get material(){return this._material}get type(){return this._type}get colorSpace(){return this._colorSpace}}const GR=`
varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,WR=`
// min half float value
#define HALF_FLOAT_MIN vec3( -65504, -65504, -65504 )
// max half float value
#define HALF_FLOAT_MAX vec3( 65504, 65504, 65504 )

uniform sampler2D sdr;
uniform sampler2D gainMap;
uniform vec3 gamma;
uniform vec3 offsetHdr;
uniform vec3 offsetSdr;
uniform vec3 gainMapMin;
uniform vec3 gainMapMax;
uniform float weightFactor;

varying vec2 vUv;

void main() {
  vec3 rgb = texture2D( sdr, vUv ).rgb;
  vec3 recovery = texture2D( gainMap, vUv ).rgb;
  vec3 logRecovery = pow( recovery, gamma );
  vec3 logBoost = gainMapMin * ( 1.0 - logRecovery ) + gainMapMax * logRecovery;
  vec3 hdrColor = (rgb + offsetSdr) * exp2( logBoost * weightFactor ) - offsetHdr;
  vec3 clampedHdrColor = max( HALF_FLOAT_MIN, min( HALF_FLOAT_MAX, hdrColor ));
  gl_FragColor = vec4( clampedHdrColor , 1.0 );
}
`;class XR extends di{constructor({gamma:e,offsetHdr:t,offsetSdr:n,gainMapMin:i,gainMapMax:s,maxDisplayBoost:a,hdrCapacityMin:c,hdrCapacityMax:u,sdr:h,gainMap:f}){super({name:"GainMapDecoderMaterial",vertexShader:GR,fragmentShader:WR,uniforms:{sdr:{value:h},gainMap:{value:f},gamma:{value:new B(1/e[0],1/e[1],1/e[2])},offsetHdr:{value:new B().fromArray(t)},offsetSdr:{value:new B().fromArray(n)},gainMapMin:{value:new B().fromArray(i)},gainMapMax:{value:new B().fromArray(s)},weightFactor:{value:(Math.log2(a)-c)/(u-c)}},blending:rr,depthTest:!1,depthWrite:!1}),this._maxDisplayBoost=a,this._hdrCapacityMin=c,this._hdrCapacityMax=u,this.needsUpdate=!0,this.uniformsNeedUpdate=!0}get sdr(){return this.uniforms.sdr.value}set sdr(e){this.uniforms.sdr.value=e}get gainMap(){return this.uniforms.gainMap.value}set gainMap(e){this.uniforms.gainMap.value=e}get offsetHdr(){return this.uniforms.offsetHdr.value.toArray()}set offsetHdr(e){this.uniforms.offsetHdr.value.fromArray(e)}get offsetSdr(){return this.uniforms.offsetSdr.value.toArray()}set offsetSdr(e){this.uniforms.offsetSdr.value.fromArray(e)}get gainMapMin(){return this.uniforms.gainMapMin.value.toArray()}set gainMapMin(e){this.uniforms.gainMapMin.value.fromArray(e)}get gainMapMax(){return this.uniforms.gainMapMax.value.toArray()}set gainMapMax(e){this.uniforms.gainMapMax.value.fromArray(e)}get gamma(){const e=this.uniforms.gamma.value;return[1/e.x,1/e.y,1/e.z]}set gamma(e){const t=this.uniforms.gamma.value;t.x=1/e[0],t.y=1/e[1],t.z=1/e[2]}get hdrCapacityMin(){return this._hdrCapacityMin}set hdrCapacityMin(e){this._hdrCapacityMin=e,this.calculateWeight()}get hdrCapacityMax(){return this._hdrCapacityMax}set hdrCapacityMax(e){this._hdrCapacityMax=e,this.calculateWeight()}get maxDisplayBoost(){return this._maxDisplayBoost}set maxDisplayBoost(e){this._maxDisplayBoost=Math.max(1,Math.min(65504,e)),this.calculateWeight()}calculateWeight(){const e=(Math.log2(this._maxDisplayBoost)-this._hdrCapacityMin)/(this._hdrCapacityMax-this._hdrCapacityMin);this.uniforms.weightFactor.value=Math.max(0,Math.min(1,e))}}class Ex extends Error{}class Tx extends Error{}const Na=(r,e,t)=>{const n=new RegExp(`${e}="([^"]*)"`,"i").exec(r);if(n)return n[1];const i=new RegExp(`<${e}[^>]*>([\\s\\S]*?)</${e}>`,"i").exec(r);if(i){const s=i[1].match(/<rdf:li>([^<]*)<\/rdf:li>/g);return s&&s.length===3?s.map(a=>a.replace(/<\/?rdf:li>/g,"")):i[1].trim()}if(t!==void 0)return t;throw new Error(`Can't find ${e} in gainmap metadata`)},YR=r=>{let e;typeof TextDecoder<"u"?e=new TextDecoder().decode(r):e=r.toString();let t=e.indexOf("<x:xmpmeta");for(;t!==-1;){const n=e.indexOf("x:xmpmeta>",t),i=e.slice(t,n+10);try{const s=Na(i,"hdrgm:GainMapMin","0"),a=Na(i,"hdrgm:GainMapMax"),c=Na(i,"hdrgm:Gamma","1"),u=Na(i,"hdrgm:OffsetSDR","0.015625"),h=Na(i,"hdrgm:OffsetHDR","0.015625"),f=/hdrgm:HDRCapacityMin="([^"]*)"/.exec(i),p=f?f[1]:"0",m=/hdrgm:HDRCapacityMax="([^"]*)"/.exec(i);if(!m)throw new Error("Incomplete gainmap metadata");const g=m[1];return{gainMapMin:Array.isArray(s)?s.map(y=>parseFloat(y)):[parseFloat(s),parseFloat(s),parseFloat(s)],gainMapMax:Array.isArray(a)?a.map(y=>parseFloat(y)):[parseFloat(a),parseFloat(a),parseFloat(a)],gamma:Array.isArray(c)?c.map(y=>parseFloat(y)):[parseFloat(c),parseFloat(c),parseFloat(c)],offsetSdr:Array.isArray(u)?u.map(y=>parseFloat(y)):[parseFloat(u),parseFloat(u),parseFloat(u)],offsetHdr:Array.isArray(h)?h.map(y=>parseFloat(y)):[parseFloat(h),parseFloat(h),parseFloat(h)],hdrCapacityMin:parseFloat(p),hdrCapacityMax:parseFloat(g)}}catch{}t=e.indexOf("<x:xmpmeta",n)}};class qR{constructor(e){this.options={debug:e&&e.debug!==void 0?e.debug:!1,extractFII:e&&e.extractFII!==void 0?e.extractFII:!0,extractNonFII:e&&e.extractNonFII!==void 0?e.extractNonFII:!0}}extract(e){return new Promise((t,n)=>{const i=this.options.debug,s=new DataView(e.buffer);if(s.getUint16(0)!==65496){n(new Error("Not a valid jpeg"));return}const a=s.byteLength;let c=2,u=0,h;for(;c<a;){if(++u>250){n(new Error(`Found no marker after ${u} loops 😵`));return}if(s.getUint8(c)!==255){n(new Error(`Not a valid marker at offset 0x${c.toString(16)}, found: 0x${s.getUint8(c).toString(16)}`));return}if(h=s.getUint8(c+1),i&&console.log(`Marker: ${h.toString(16)}`),h===226){i&&console.log("Found APP2 marker (0xffe2)");const f=c+4;if(s.getUint32(f)===1297106432){const p=f+4;let m;if(s.getUint16(p)===18761)m=!1;else if(s.getUint16(p)===19789)m=!0;else{n(new Error("No valid endianness marker found in TIFF header"));return}if(s.getUint16(p+2,!m)!==42){n(new Error("Not valid TIFF data! (no 0x002A marker)"));return}const g=s.getUint32(p+4,!m);if(g<8){n(new Error("Not valid TIFF data! (First offset less than 8)"));return}const y=p+g,M=s.getUint16(y,!m),x=y+2;let _=0;for(let N=x;N<x+12*M;N+=12)s.getUint16(N,!m)===45057&&(_=s.getUint32(N+8,!m));const E=y+2+M*12+4,T=[];for(let N=E;N<E+_*16;N+=16){const P={MPType:s.getUint32(N,!m),size:s.getUint32(N+4,!m),dataOffset:s.getUint32(N+8,!m),dependantImages:s.getUint32(N+12,!m),start:-1,end:-1,isFII:!1};P.dataOffset?(P.start=p+P.dataOffset,P.isFII=!1):(P.start=0,P.isFII=!0),P.end=P.start+P.size,T.push(P)}if(this.options.extractNonFII&&T.length){const N=new Blob([s]),P=[];for(const U of T){if(U.isFII&&!this.options.extractFII)continue;const L=N.slice(U.start,U.end+1,"image/jpeg");P.push(L)}t(P)}}}c+=2+s.getUint16(c+2)}})}}const ZR=async r=>{const e=YR(r);if(!e)throw new Tx("Gain map XMP metadata not found");const n=await new qR({extractFII:!0,extractNonFII:!0}).extract(r);if(n.length!==2)throw new Ex("Gain map recovery image not found");return{sdr:new Uint8Array(await n[0].arrayBuffer()),gainMap:new Uint8Array(await n[1].arrayBuffer()),metadata:e}},Y0=r=>new Promise((e,t)=>{const n=document.createElement("img");n.onload=()=>{e(n)},n.onerror=i=>{t(i)},n.src=URL.createObjectURL(r)});class bx extends ri{constructor(e,t){super(t),e&&(this._renderer=e),this._internalLoadingManager=new Oh}setRenderer(e){return this._renderer=e,this}setRenderTargetOptions(e){return this._renderTargetOptions=e,this}prepareQuadRenderer(){this._renderer||console.warn("WARNING: An existing WebGL Renderer was not passed to this Loader constructor or in setRenderer, the result of this Loader will need to be converted to a Data Texture with toDataTexture() before you can use it in your renderer.");const e=new XR({gainMapMax:[1,1,1],gainMapMin:[0,0,0],gamma:[1,1,1],offsetHdr:[1,1,1],offsetSdr:[1,1,1],hdrCapacityMax:1,hdrCapacityMin:0,maxDisplayBoost:1,gainMap:new $t,sdr:new $t});return new am({width:16,height:16,type:Un,colorSpace:cr,material:e,renderer:this._renderer,renderTargetOptions:this._renderTargetOptions})}async render(e,t,n,i){const s=i?new Blob([i],{type:"image/jpeg"}):void 0,a=new Blob([n],{type:"image/jpeg"});let c,u,h=!1;if(typeof createImageBitmap>"u"){const m=await Promise.all([s?Y0(s):Promise.resolve(void 0),Y0(a)]);u=m[0],c=m[1],h=!0}else{const m=await Promise.all([s?createImageBitmap(s,{imageOrientation:"flipY"}):Promise.resolve(void 0),createImageBitmap(a,{imageOrientation:"flipY"})]);u=m[0],c=m[1]}const f=new $t(u||new ImageData(2,2),$r,En,En,Kt,jd,xn,fi,1,cr);f.flipY=h,f.needsUpdate=!0;const p=new $t(c,$r,En,En,Kt,jd,xn,fi,1,$n);p.flipY=h,p.needsUpdate=!0,e.width=c.width,e.height=c.height,e.material.gainMap=f,e.material.sdr=p,e.material.gainMapMin=t.gainMapMin,e.material.gainMapMax=t.gainMapMax,e.material.offsetHdr=t.offsetHdr,e.material.offsetSdr=t.offsetSdr,e.material.gamma=t.gamma,e.material.hdrCapacityMin=t.hdrCapacityMin,e.material.hdrCapacityMax=t.hdrCapacityMax,e.material.maxDisplayBoost=Math.pow(2,t.hdrCapacityMax),e.material.needsUpdate=!0,e.render()}}class JR extends bx{load([e,t,n],i,s,a){const c=this.prepareQuadRenderer();let u,h,f;const p=async()=>{if(u&&h&&f){try{await this.render(c,f,u,h)}catch(R){this.manager.itemError(e),this.manager.itemError(t),this.manager.itemError(n),typeof a=="function"&&a(R),c.disposeOnDemandRenderer();return}typeof i=="function"&&i(c),this.manager.itemEnd(e),this.manager.itemEnd(t),this.manager.itemEnd(n),c.disposeOnDemandRenderer()}};let m=!0,g=0,y=0,M=!0,x=0,_=0,w=!0,E=0,T=0;const N=()=>{if(typeof s=="function"){const R=g+x+E,A=y+_+T,O=m&&M&&w;s(new ProgressEvent("progress",{lengthComputable:O,loaded:A,total:R}))}};this.manager.itemStart(e),this.manager.itemStart(t),this.manager.itemStart(n);const P=new wi(this._internalLoadingManager);P.setResponseType("arraybuffer"),P.setRequestHeader(this.requestHeader),P.setPath(this.path),P.setWithCredentials(this.withCredentials),P.load(e,async R=>{if(typeof R=="string")throw new Error("Invalid sdr buffer");u=R,await p()},R=>{m=R.lengthComputable,y=R.loaded,g=R.total,N()},R=>{this.manager.itemError(e),typeof a=="function"&&a(R)});const U=new wi(this._internalLoadingManager);U.setResponseType("arraybuffer"),U.setRequestHeader(this.requestHeader),U.setPath(this.path),U.setWithCredentials(this.withCredentials),U.load(t,async R=>{if(typeof R=="string")throw new Error("Invalid gainmap buffer");h=R,await p()},R=>{M=R.lengthComputable,_=R.loaded,x=R.total,N()},R=>{this.manager.itemError(t),typeof a=="function"&&a(R)});const L=new wi(this._internalLoadingManager);return L.setRequestHeader(this.requestHeader),L.setPath(this.path),L.setWithCredentials(this.withCredentials),L.load(n,async R=>{if(typeof R!="string")throw new Error("Invalid metadata string");f=JSON.parse(R),await p()},R=>{w=R.lengthComputable,T=R.loaded,E=R.total,N()},R=>{this.manager.itemError(n),typeof a=="function"&&a(R)}),c}}class jR extends bx{load(e,t,n,i){const s=this.prepareQuadRenderer(),a=new wi(this._internalLoadingManager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(this.withCredentials),this.manager.itemStart(e),a.load(e,async c=>{if(typeof c=="string")throw new Error("Invalid buffer, received [string], was expecting [ArrayBuffer]");const u=new Uint8Array(c);let h,f,p;try{const m=await ZR(u);h=m.sdr,f=m.gainMap,p=m.metadata}catch(m){if(m instanceof Tx||m instanceof Ex)console.warn(`Failure to reconstruct an HDR image from ${e}: Gain map metadata not found in the file, HDRJPGLoader will render the SDR jpeg`),p={gainMapMin:[0,0,0],gainMapMax:[1,1,1],gamma:[1,1,1],hdrCapacityMin:0,hdrCapacityMax:1,offsetHdr:[0,0,0],offsetSdr:[0,0,0]},h=u;else throw m}try{await this.render(s,p,h,f)}catch(m){this.manager.itemError(e),typeof i=="function"&&i(m),s.disposeOnDemandRenderer();return}typeof t=="function"&&t(s),this.manager.itemEnd(e),s.disposeOnDemandRenderer()},n,c=>{this.manager.itemError(e),typeof i=="function"&&i(c)}),s}}const dl={apartment:"lebombo_1k.hdr",city:"potsdamer_platz_1k.hdr",dawn:"kiara_1_dawn_1k.hdr",forest:"forest_slope_1k.hdr",lobby:"st_fagans_interior_1k.hdr",night:"dikhololo_night_1k.hdr",park:"rooitou_park_1k.hdr",studio:"studio_small_03_1k.hdr",sunset:"venice_sunset_1k.hdr",warehouse:"empty_warehouse_01_1k.hdr"},Ax="https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/",Wo=r=>Array.isArray(r),lm=["/px.png","/nx.png","/py.png","/ny.png","/pz.png","/nz.png"];function zh({files:r=lm,path:e="",preset:t=void 0,encoding:n=void 0,extensions:i}={}){let s=null,a=!1;t&&(cm(t),r=dl[t],e=Ax),a=Wo(r);const{extension:c,isCubemap:u}=um(r);if(s=hm(c),!s)throw new Error("useEnvironment: Unrecognized file extension: "+r);const h=Mi(g=>g.gl);De.useLayoutEffect(()=>{if(c!=="webp"&&c!=="jpg"&&c!=="jpeg")return;function g(){jo.clear(s,a?[r]:r)}h.domElement.addEventListener("webglcontextlost",g,{once:!0})},[r,h.domElement]);const f=jo(s,a?[r]:r,g=>{(c==="webp"||c==="jpg"||c==="jpeg")&&g.setRenderer(h),g.setPath==null||g.setPath(e),i&&i(g)});let p=a?f[0]:f;if(c==="jpg"||c==="jpeg"||c==="webp"){var m;p=(m=p.renderTarget)==null?void 0:m.texture}return p.mapping=u?ar:Xo,"colorSpace"in p?p.colorSpace=n??u?"srgb":"srgb-linear":p.encoding=n??u?HR:kR,p}const KR={files:lm,path:"",preset:void 0,extensions:void 0};zh.preload=r=>{const e={...KR,...r};let{files:t,path:n=""}=e;const{preset:i,extensions:s}=e;i&&(cm(i),t=dl[i],n=Ax);const{extension:a}=um(t);if(a==="webp"||a==="jpg"||a==="jpeg")throw new Error("useEnvironment: Preloading gainmaps is not supported");const c=hm(a);if(!c)throw new Error("useEnvironment: Unrecognized file extension: "+t);jo.preload(c,Wo(t)?[t]:t,u=>{u.setPath==null||u.setPath(n),s&&s(u)})};const QR={files:lm,preset:void 0};zh.clear=r=>{const e={...QR,...r};let{files:t}=e;const{preset:n}=e;n&&(cm(n),t=dl[n]);const{extension:i}=um(t),s=hm(i);if(!s)throw new Error("useEnvironment: Unrecognized file extension: "+t);jo.clear(s,Wo(t)?[t]:t)};function cm(r){if(!(r in dl))throw new Error("Preset must be one of: "+Object.keys(dl).join(", "))}function um(r){var e;const t=Wo(r)&&r.length===6,n=Wo(r)&&r.length===3&&r.some(a=>a.endsWith("json")),i=Wo(r)?r[0]:r;return{extension:t?"cube":n?"webp":i.startsWith("data:application/exr")?"exr":i.startsWith("data:application/hdr")?"hdr":i.startsWith("data:image/jpeg")?"jpg":(e=i.split(".").pop())==null||(e=e.split("?"))==null||(e=e.shift())==null?void 0:e.toLowerCase(),isCubemap:t,isGainmap:n}}function hm(r){return r==="cube"?Py:r==="hdr"?BR:r==="exr"?zR:r==="jpg"||r==="jpeg"?jR:r==="webp"?JR:null}const $R=r=>r.current&&r.current.isScene,eI=r=>$R(r)?r.current:r;function fm(r,e,t,n,i={}){var s,a,c,u;i={backgroundBlurriness:0,backgroundIntensity:1,backgroundRotation:[0,0,0],environmentIntensity:1,environmentRotation:[0,0,0],...i};const h=eI(e||t),f=h.background,p=h.environment,m={backgroundBlurriness:h.backgroundBlurriness,backgroundIntensity:h.backgroundIntensity,backgroundRotation:(s=(a=h.backgroundRotation)==null||a.clone==null?void 0:a.clone())!==null&&s!==void 0?s:[0,0,0],environmentIntensity:h.environmentIntensity,environmentRotation:(c=(u=h.environmentRotation)==null||u.clone==null?void 0:u.clone())!==null&&c!==void 0?c:[0,0,0]};return r!=="only"&&(h.environment=n),r&&(h.background=n),jr(h,i),()=>{r!=="only"&&(h.environment=p),r&&(h.background=f),jr(h,m)}}function dm({scene:r,background:e=!1,map:t,...n}){const i=Mi(s=>s.scene);return De.useLayoutEffect(()=>{if(t)return fm(e,r,i,t,n)}),null}function Cx({background:r=!1,scene:e,blur:t,backgroundBlurriness:n,backgroundIntensity:i,backgroundRotation:s,environmentIntensity:a,environmentRotation:c,...u}){const h=zh(u),f=Mi(p=>p.scene);return De.useLayoutEffect(()=>fm(r,e,f,h,{backgroundBlurriness:t??n,backgroundIntensity:i,backgroundRotation:s,environmentIntensity:a,environmentRotation:c})),De.useEffect(()=>()=>{h.dispose()},[h]),null}function tI({children:r,near:e=.1,far:t=1e3,resolution:n=256,frames:i=1,map:s,background:a=!1,blur:c,backgroundBlurriness:u,backgroundIntensity:h,backgroundRotation:f,environmentIntensity:p,environmentRotation:m,scene:g,files:y,path:M,preset:x=void 0,extensions:_}){const w=Mi(L=>L.gl),E=Mi(L=>L.scene),T=De.useRef(null),[N]=De.useState(()=>new wl),P=De.useMemo(()=>{const L=new Cp(n);return L.texture.type=Un,L},[n]);De.useEffect(()=>()=>{P.dispose()},[P]),De.useLayoutEffect(()=>{if(i===1){const L=w.autoClear;w.autoClear=!0,T.current.update(w,N),w.autoClear=L}return fm(a,g,E,P.texture,{backgroundBlurriness:c??u,backgroundIntensity:h,backgroundRotation:f,environmentIntensity:p,environmentRotation:m})},[r,N,P.texture,g,E,a,i,w]);let U=1;return sm(()=>{if(i===1/0||U<i){const L=w.autoClear;w.autoClear=!0,T.current.update(w,N),w.autoClear=L,U++}}),De.createElement(De.Fragment,null,KC(De.createElement(De.Fragment,null,r,De.createElement("cubeCamera",{ref:T,args:[e,t,P]}),y||x?De.createElement(Cx,{background:!0,files:y,preset:x,path:M,extensions:_}):s?De.createElement(dm,{background:!0,map:s,extensions:_}):null),N))}function nI(r){var e,t,n,i;const s=zh(r),a=r.map||s;De.useMemo(()=>$y({GroundProjectedEnvImpl:RR}),[]),De.useEffect(()=>()=>{s.dispose()},[s]);const c=De.useMemo(()=>[a],[a]),u=(e=r.ground)==null?void 0:e.height,h=(t=r.ground)==null?void 0:t.radius,f=(n=(i=r.ground)==null?void 0:i.scale)!==null&&n!==void 0?n:1e3;return De.createElement(De.Fragment,null,De.createElement(dm,lh({},r,{map:a})),De.createElement("groundProjectedEnvImpl",{args:c,scale:f,height:u,radius:h}))}function cI(r){return r.ground?De.createElement(nI,r):r.map?De.createElement(dm,r):r.children?De.createElement(tI,r):De.createElement(Cx,r)}export{sI as C,Ip as D,cI as E,hn as F,Un as H,Kt as L,aI as O,Ei as W,lh as _,sm as a,lI as b,Mi as u};
